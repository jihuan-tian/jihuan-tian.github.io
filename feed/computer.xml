<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://jihuan-tian.github.io/feed/computer.xml" rel="self" type="application/atom+xml" /><link href="https://jihuan-tian.github.io/" rel="alternate" type="text/html" /><updated>2025-02-16T10:21:26+08:00</updated><id>https://jihuan-tian.github.io/feed/computer.xml</id><title type="html">止于至善 | Computer</title><subtitle>As regards numerical analysis, mathematical electromagnetism, Linux techniques and personal thoughts.</subtitle><author><name>Jihuan Tian</name></author><entry><title type="html">Keep home network reachable for remote working</title><link href="https://jihuan-tian.github.io/computer/2025/02/15/keep-home-network-reachable-for-remote-working.html" rel="alternate" type="text/html" title="Keep home network reachable for remote working" /><published>2025-02-15T00:00:00+08:00</published><updated>2025-02-15T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/02/15/keep-home-network-reachable-for-remote-working</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/02/15/keep-home-network-reachable-for-remote-working.html"><![CDATA[<p>I’m using China Telecom’s network with dynamic IP, through which I can provide my family several services, such as WebDAV based Joplin note system, music library that can be accessed from the Foobar music player on iOS, HTTPS based Calibre Ebooks, etc. However, the network is unstable due to three factors:</p>

<ol>
  <li>If the fiber optical modem keeps on working without being shut down for more than one week, it tends to freeze sporadically.</li>
  <li>Sometimes, especially in the early morning around 4 or 5 am, the public IP for my home is lost and the modem does not try to acquire a new one.</li>
  <li>The dynamic IP will also change irregularly, which requires to change the dynamic DNS configuration.</li>
</ol>

<p>Therefore, I’ve created a bash script and scheduled its execution in crontab on my home Debian server. It periodically checks if the public network is reachable by pinging a web server:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ping -c 3 -w 3 www.baidu.com &gt; /dev/null 2&gt;&amp;1
</code></pre></div></div>

<p>If there is no error, I’ll use <code class="language-plaintext highlighter-rouge">curl -s ifconfig.me</code> to get the current public IP and compare it with the old one. If the IP has changed, I’ll reconnect VPN and update this new public IP to the dynamic DNS configuration.</p>

<p>If <code class="language-plaintext highlighter-rouge">www.baidu.com</code> is not reachable, I can use <code class="language-plaintext highlighter-rouge">python-miio</code> to switch off then turn on my Xiaomi smart WIFI plug which powers the modem. The model type of this plug is <code class="language-plaintext highlighter-rouge">cuco.plug.v3</code>, which should be controlled via the <code class="language-plaintext highlighter-rouge">genericmiot</code> command provided by <code class="language-plaintext highlighter-rouge">python-miio</code>. This solution is much easier than Home Assistant, without bothering to install a new operating system. In case there might be unexpected frequent plug switching, I’ll only enable this operation when I travel outside.</p>

<p><strong>Installation and usage of <code class="language-plaintext highlighter-rouge">python-miio</code></strong></p>

<ul>
  <li>
    <p>Install the Git version of <code class="language-plaintext highlighter-rouge">python-miio</code> instead of the default one.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install git+https://github.com/rytilahti/python-miio.git
</code></pre></div>    </div>
  </li>
  <li>Execute the command <code class="language-plaintext highlighter-rouge">miiocli cloud</code>, then type in the user name and password registered for Xiaomi APP. From the output, we will get the token and MAC address of the plug.</li>
  <li>Bind the MAC address with a fixed IP in the WIFI router.</li>
  <li>
    <p>Get the plug device status:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>miiocli genericmiot --ip &lt;IP&gt; --token &lt;token&gt; status
</code></pre></div>    </div>
  </li>
  <li>
    <p>List available actions provided by the plug:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>miiocli genericmiot --ip &lt;IP&gt; --token &lt;token&gt; actions
</code></pre></div>    </div>

    <p>Only one action <code class="language-plaintext highlighter-rouge">toggle</code> is supported.</p>
  </li>
  <li>
    <p>Execute an action:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>miiocli genericmiot --ip &lt;IP&gt; --token &lt;token&gt; call &lt;action-name&gt;
</code></pre></div>    </div>
  </li>
  <li>
    <p>Set on/off of the plug:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>miiocli genericmiot --ip &lt;IP&gt; --token &lt;token&gt; set switch_on_2_1 True|False
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">switch_on_2_1</code> is the property name.</p>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="network" /><summary type="html"><![CDATA[I’m using China Telecom’s network with dynamic IP, through which I can provide my family several services, such as WebDAV based Joplin note system, music library that can be accessed from the Foobar music player on iOS, HTTPS based Calibre Ebooks, etc. However, the network is unstable due to three factors:]]></summary></entry><entry><title type="html">Emacs tips learned and practiced in 2025 Week 6 and 7</title><link href="https://jihuan-tian.github.io/computer/2025/02/14/emacs-tips-learned-and-practiced-in-2025-week-6-and-7.html" rel="alternate" type="text/html" title="Emacs tips learned and practiced in 2025 Week 6 and 7" /><published>2025-02-14T00:00:00+08:00</published><updated>2025-02-14T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/02/14/emacs-tips-learned-and-practiced-in-2025-week-6-and-7</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/02/14/emacs-tips-learned-and-practiced-in-2025-week-6-and-7.html"><![CDATA[<ul>
  <li>Use <code class="language-plaintext highlighter-rouge">ibuffer-mode</code> to manage many opened buffers in batch, since they can be marked using regular expressions.</li>
  <li>
    <p>Started to migrate large work journals from Org subtrees to independent org-roam notes using the function <code class="language-plaintext highlighter-rouge">org-roam-extract-subtree</code>. This will reduce the file size and heading levels in the Org file. After a work journal has been migrated, a link to it should be created as a heading below a related category in the original Org file. This is to realize the concept of <strong>note index</strong> in the Zettelkasten method.</p>

    <p>Meanwhile, a timestamp should be attached to this link, so that this note will appear in the Org agenda. Because independent org-roam notes have their file names prefixed with timestamps, we can also review notes taken each day or each week in the file explorer.</p>
  </li>
  <li>Installed the <code class="language-plaintext highlighter-rouge">highlight-indent-guides</code> package to visualize the hierarchy of Org items. Sometimes the items are deeply nested, which is difficult to navigate.</li>
  <li>Since I do not directly export my Org notes to HTML, I’ve replaced all <code class="language-plaintext highlighter-rouge">#+ATTR_HTML</code> attributes that are used for specifying the width of inline images with <code class="language-plaintext highlighter-rouge">#+ATTR_ORG</code>. This new keyword only controls the display size of the inline images.</li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[Use ibuffer-mode to manage many opened buffers in batch, since they can be marked using regular expressions. Started to migrate large work journals from Org subtrees to independent org-roam notes using the function org-roam-extract-subtree. This will reduce the file size and heading levels in the Org file. After a work journal has been migrated, a link to it should be created as a heading below a related category in the original Org file. This is to realize the concept of note index in the Zettelkasten method. Meanwhile, a timestamp should be attached to this link, so that this note will appear in the Org agenda. Because independent org-roam notes have their file names prefixed with timestamps, we can also review notes taken each day or each week in the file explorer. Installed the highlight-indent-guides package to visualize the hierarchy of Org items. Sometimes the items are deeply nested, which is difficult to navigate. Since I do not directly export my Org notes to HTML, I’ve replaced all #+ATTR_HTML attributes that are used for specifying the width of inline images with #+ATTR_ORG. This new keyword only controls the display size of the inline images.]]></summary></entry><entry><title type="html">Swap current window with the horizontally centered window in Emacs</title><link href="https://jihuan-tian.github.io/computer/2025/02/06/swap-current-window-with-the-horizontally-centered-window-in-emacs.html" rel="alternate" type="text/html" title="Swap current window with the horizontally centered window in Emacs" /><published>2025-02-06T00:00:00+08:00</published><updated>2025-02-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/02/06/swap-current-window-with-the-horizontally-centered-window-in-emacs</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/02/06/swap-current-window-with-the-horizontally-centered-window-in-emacs.html"><![CDATA[<p>With a HighDPI monitor, I usually open three horizontal windows in a Emacs frame. I use the following scripts to focus on the current window by swapping it with the central window.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/get-center-window-horizontal</span> <span class="p">()</span>
  <span class="s">"Get the center window among a set of horizontally distributed windows in the current frame"</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">windows</span> <span class="p">(</span><span class="nv">window-list</span><span class="p">))</span>
	 <span class="p">(</span><span class="nv">indexed-window-left-edge-pos</span>
	  <span class="p">(</span><span class="nv">cl-mapcar</span> <span class="nf">#'</span><span class="nb">cons</span> <span class="p">(</span><span class="nv">cl-mapcar</span> <span class="nf">#'</span><span class="nb">car</span> <span class="p">(</span><span class="nv">cl-mapcar</span> <span class="nf">#'</span><span class="nv">window-body-edges</span> <span class="nv">windows</span><span class="p">))</span> <span class="p">(</span><span class="nv">number-sequence</span> <span class="mi">0</span> <span class="p">(</span><span class="nb">1-</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">windows</span><span class="p">)))))</span>
	 <span class="p">(</span><span class="nv">sorted-indexed-window-left-edge-pos</span>
	  <span class="p">(</span><span class="nb">sort</span> <span class="nv">indexed-window-left-edge-pos</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">a</span> <span class="nv">b</span><span class="p">)</span> <span class="p">(</span><span class="nb">&lt;</span> <span class="p">(</span><span class="nb">car</span> <span class="nv">a</span><span class="p">)</span> <span class="p">(</span><span class="nb">car</span> <span class="nv">b</span><span class="p">)))))</span>
	 <span class="p">(</span><span class="nv">center-window-index</span> <span class="p">(</span><span class="nb">cdr</span> <span class="p">(</span><span class="nb">nth</span> <span class="p">(</span><span class="nb">/</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">windows</span><span class="p">)</span> <span class="mi">2</span><span class="p">)</span> <span class="nv">sorted-indexed-window-left-edge-pos</span><span class="p">))))</span>
    <span class="p">(</span><span class="nb">nth</span> <span class="nv">center-window-index</span> <span class="nv">windows</span><span class="p">)))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/swap-window-buffers</span> <span class="p">(</span><span class="nv">win1</span> <span class="nv">win2</span><span class="p">)</span>
  <span class="s">"Swap the buffers associated with two windows."</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">buffer1</span> <span class="p">(</span><span class="nv">window-buffer</span> <span class="nv">win1</span><span class="p">))</span>
	<span class="p">(</span><span class="nv">buffer2</span> <span class="p">(</span><span class="nv">window-buffer</span> <span class="nv">win2</span><span class="p">)))</span>
    <span class="p">(</span><span class="nv">set-window-buffer</span> <span class="nv">win1</span> <span class="p">(</span><span class="nv">buffer-name</span> <span class="nv">buffer2</span><span class="p">))</span>
    <span class="p">(</span><span class="nv">set-window-buffer</span> <span class="nv">win2</span> <span class="p">(</span><span class="nv">buffer-name</span> <span class="nv">buffer1</span><span class="p">))))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/swap-with-center-window</span> <span class="p">()</span>
  <span class="s">"Swap the current window with the window in the center (horizontal) of the frame."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">current-window</span> <span class="p">(</span><span class="nv">selected-window</span><span class="p">))</span>
	 <span class="p">(</span><span class="nv">center-window</span> <span class="p">(</span><span class="nv">tjh/get-center-window-horizontal</span><span class="p">)))</span>
    <span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">eq</span> <span class="nv">current-window</span> <span class="nv">center-window</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">tjh/swap-window-buffers</span> <span class="nv">current-window</span> <span class="nv">center-window</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">select-window</span> <span class="nv">center-window</span><span class="p">))))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[With a HighDPI monitor, I usually open three horizontal windows in a Emacs frame. I use the following scripts to focus on the current window by swapping it with the central window.]]></summary></entry><entry><title type="html">Use Emacs in console</title><link href="https://jihuan-tian.github.io/computer/2025/02/01/use-emacs-in-console.html" rel="alternate" type="text/html" title="Use Emacs in console" /><published>2025-02-01T00:00:00+08:00</published><updated>2025-02-01T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/02/01/use-emacs-in-console</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/02/01/use-emacs-in-console.html"><![CDATA[<h1 id="purpose">Purpose</h1>

<p>When I travel outside, the slow network speed does not allow me to connect to my home server with X11 forwarding. Therefore, using Emacs on the server should be in a console via SSH and consistent operational habits should be formed.</p>

<h1 id="color-theme-tuning">Color theme tuning</h1>

<p><strong>Phenomenon</strong> I’m using the solarized light color theme in Emacs. When I run Emacs in Konsole on my laptop, the color theme looks comfortable. When I run Emacs on the remote server via SSH from Konsole on my laptop, some colors look too dark, while some look too light to be identifiable. Initially, I thought this may be caused by inappropriate colors in the color scheme in Konsole. However, this is not the cause.</p>

<p><img src="/figures/2025-02-01_14-24-46-different-colors-in-local-and-remote-emacs.png" alt="img" title="Different colors shown in local and remote Emacs." /></p>

<p><strong>Analysis</strong> Execute <code class="language-plaintext highlighter-rouge">display-color-cells</code> in the two Emacs to check the number of colors supported. Emacs on my laptop returns 16777216, which is 24 bit true color, while Emacs on the remote server via SSH returns 256. In addition, if Emacs is started within a screen window, 24 bit color is not supported.</p>

<p><strong>Solution</strong></p>

<ul>
  <li>Add <code class="language-plaintext highlighter-rouge">export TERM=xtern-256color</code> and <code class="language-plaintext highlighter-rouge">export COLORTERM=truecolor</code> to <code class="language-plaintext highlighter-rouge">.bashrc</code>.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">tmux</code> instead of <code class="language-plaintext highlighter-rouge">screen</code> to have 24 bit color support.</li>
</ul>

<h1 id="general-operations">General operations</h1>

<ul>
  <li>
    <p>Delete a previous word in console Emacs</p>

    <p>The Emacs function is <code class="language-plaintext highlighter-rouge">backward-kill-word</code>. It is bound to <code class="language-plaintext highlighter-rouge">C-&lt;backspace&gt;</code> and <code class="language-plaintext highlighter-rouge">M-DEL</code>. In the console, <code class="language-plaintext highlighter-rouge">C-&lt;backspace&gt;</code> does not work. Use <code class="language-plaintext highlighter-rouge">M-DEL</code> instead, i.e. <code class="language-plaintext highlighter-rouge">Alt+backspace</code>.</p>
  </li>
  <li>
    <p>Fold all subtrees in Org mode</p>

    <p>In Emacs GUI, <code class="language-plaintext highlighter-rouge">shift-tab</code> will do the work. In console mode, it is ineffective. Use <code class="language-plaintext highlighter-rouge">C-u TAB</code> instead.</p>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Purpose]]></summary></entry><entry><title type="html">Emacs tips learned and practiced in 2025 Week 3</title><link href="https://jihuan-tian.github.io/computer/2025/01/19/emacs-tips-learned-and-practiced-in-2025-week-3.html" rel="alternate" type="text/html" title="Emacs tips learned and practiced in 2025 Week 3" /><published>2025-01-19T00:00:00+08:00</published><updated>2025-01-19T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/01/19/emacs-tips-learned-and-practiced-in-2025-week-3</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/01/19/emacs-tips-learned-and-practiced-in-2025-week-3.html"><![CDATA[<ul>
  <li>Use GitHub flavored markdown (provided by <code class="language-plaintext highlighter-rouge">ox-gfm</code>) instead of the default one (provided by <code class="language-plaintext highlighter-rouge">ox-md</code>).</li>
  <li>Previously, I use <code class="language-plaintext highlighter-rouge">bibtex-completion</code> to add and edit notes for research papers. Now, I switch to <code class="language-plaintext highlighter-rouge">org-roam-bibtex</code> and call <code class="language-plaintext highlighter-rouge">tjh/orb-edit-note</code> to create a new or editing an existing bibliography note, which is in an independent org file.</li>
  <li>When we compile Emacs 29 or 31, do not use <code class="language-plaintext highlighter-rouge">gtk</code> related x-toolkit and the pure GTK option <code class="language-plaintext highlighter-rouge">-pgtk</code>. Use <code class="language-plaintext highlighter-rouge">lucid</code> instead.</li>
  <li>When there are multiple windows in a frame, use <code class="language-plaintext highlighter-rouge">balance-windows</code> to make them evenly distributed. This is especially useful when I open three horizontal windows for coding, reading documentation and running a shell.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">C-x r w</code> and <code class="language-plaintext highlighter-rouge">C-x r j</code> to save and restore window configurations. This is extremely useful when I work with a fixed set of buffers and windows, or I name them as different working modes. For example,
    <ul>
      <li>Algorithm verification mode includes a window for C++ source code, a window for Julia or Octave script, a window for running Julia or Octave.</li>
      <li>Note-taking mode includes a window for writing Org roam note, a cloned window for reading related notes, maybe another window for editing LaTeX document, and a small window for its table of contents.</li>
      <li>Blog maintenance mode includes a window for Org roam note, a windows for its markdown export, a window for Jekyll markdown file.</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Use GitHub flavored markdown (provided by ox-gfm) instead of the default one (provided by ox-md). Previously, I use bibtex-completion to add and edit notes for research papers. Now, I switch to org-roam-bibtex and call tjh/orb-edit-note to create a new or editing an existing bibliography note, which is in an independent org file. When we compile Emacs 29 or 31, do not use gtk related x-toolkit and the pure GTK option -pgtk. Use lucid instead. When there are multiple windows in a frame, use balance-windows to make them evenly distributed. This is especially useful when I open three horizontal windows for coding, reading documentation and running a shell. Use C-x r w and C-x r j to save and restore window configurations. This is extremely useful when I work with a fixed set of buffers and windows, or I name them as different working modes. For example, Algorithm verification mode includes a window for C++ source code, a window for Julia or Octave script, a window for running Julia or Octave. Note-taking mode includes a window for writing Org roam note, a cloned window for reading related notes, maybe another window for editing LaTeX document, and a small window for its table of contents. Blog maintenance mode includes a window for Org roam note, a windows for its markdown export, a window for Jekyll markdown file.]]></summary></entry><entry><title type="html">Migrate from Emacs 28.2 to 29.4</title><link href="https://jihuan-tian.github.io/computer/2025/01/16/migrate-from-emacs-28.2-to-29.4.html" rel="alternate" type="text/html" title="Migrate from Emacs 28.2 to 29.4" /><published>2025-01-16T00:00:00+08:00</published><updated>2025-01-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/01/16/migrate-from-emacs-28.2-to-29.4</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/01/16/migrate-from-emacs-28.2-to-29.4.html"><![CDATA[<ul>
  <li>Refer to <a href="https://www.gnu.org/software/emacs/manual/html_node/efaq/Installing-Emacs.html">Install Emacs</a> and download Emacs from <a href="http://ftpmirror.gnu.org/emacs/">here</a>.</li>
  <li>
    <p>Configure and compile</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./configure --with-native-compilation --with-x-toolkit=lucid --with-tree-sitter --with-wide-int --with-json --with-modules --without-dbus --with-gnutls --with-mailutils --without-pop --with-cairo --with-imagemagick CFLAGS="-O2 -pipe -mtune=native -march=native -fomit-frame-pointer"
</code></pre></div>    </div>

    <p>Initially, I used the option <code class="language-plaintext highlighter-rouge">--with-pgtk --with-x-toolkit=gtk3</code>. However, the compiled Emacs intermittently crashed with the following error. Therefore, I finally resorted to the option <code class="language-plaintext highlighter-rouge">--with-x-toolkit=lucid</code>.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>The program 'emacs' received an X Window System error.
This probably reflects a bug in the program.
The error was 'BadMatch (invalid parameter attributes)'.
  (Details: serial 23499 error_code 8 request_code 18 (core protocol) minor_code 0)
  (Note to programmers: normally, X errors are reported asynchronously;
   that is, you will receive the error a while after causing it.
   To debug your program, run it with the GDK_SYNCHRONIZE environment
   variable to change this behavior. You can then get a meaningful
   backtrace from your debugger if you break on the gdk_x_error() function.)
</code></pre></div>    </div>
  </li>
  <li>Because I’m migrating from Emacs 28.2 in Debian Bookworm to Emacs 29.4, after the installation, some packages need to be manually reinstalled or required.
    <ul>
      <li>Add <code class="language-plaintext highlighter-rouge">(require 'recentf)</code> to <code class="language-plaintext highlighter-rouge">.emacs</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">helm-recentf</code> was previously bound to <code class="language-plaintext highlighter-rouge">C-x C-r</code>. In Emacs 29.4, <code class="language-plaintext highlighter-rouge">helm</code> is not installed, so I replace <code class="language-plaintext highlighter-rouge">helm-recentf</code> with <code class="language-plaintext highlighter-rouge">recentf-open</code>.</li>
      <li>Install the <code class="language-plaintext highlighter-rouge">session</code> package from ELPA, then the previous configuration <code class="language-plaintext highlighter-rouge">(add-hook 'after-init-hook 'session-initialize)</code> in <code class="language-plaintext highlighter-rouge">.emacs</code> will work.</li>
      <li>
        <p>Add the path of previously installed ELPA packages <code class="language-plaintext highlighter-rouge">pyim</code> and <code class="language-plaintext highlighter-rouge">pyim-wbdict</code> to <code class="language-plaintext highlighter-rouge">load-path</code>:</p>

        <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'load-path</span> <span class="s">"~/.emacs.d/elpa/pyim-wbdict-20220604.1340"</span><span class="p">)</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'load-path</span> <span class="s">"~/.emacs.d/elpa/pyim-20240508.256"</span><span class="p">)</span>
</code></pre></div>        </div>
      </li>
      <li>Remove <code class="language-plaintext highlighter-rouge">(require 'org-install)</code>, <code class="language-plaintext highlighter-rouge">(require 'ox-freemind)</code>, <code class="language-plaintext highlighter-rouge">(require 'ox-taskjuggler)</code> from <code class="language-plaintext highlighter-rouge">tjh-org.el</code>. They are not available in the <code class="language-plaintext highlighter-rouge">org</code> packaged with Emacs 29.4.</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Refer to Install Emacs and download Emacs from here. Configure and compile ./configure --with-native-compilation --with-x-toolkit=lucid --with-tree-sitter --with-wide-int --with-json --with-modules --without-dbus --with-gnutls --with-mailutils --without-pop --with-cairo --with-imagemagick CFLAGS="-O2 -pipe -mtune=native -march=native -fomit-frame-pointer" Initially, I used the option --with-pgtk --with-x-toolkit=gtk3. However, the compiled Emacs intermittently crashed with the following error. Therefore, I finally resorted to the option --with-x-toolkit=lucid. The program 'emacs' received an X Window System error. This probably reflects a bug in the program. The error was 'BadMatch (invalid parameter attributes)'. (Details: serial 23499 error_code 8 request_code 18 (core protocol) minor_code 0) (Note to programmers: normally, X errors are reported asynchronously; that is, you will receive the error a while after causing it. To debug your program, run it with the GDK_SYNCHRONIZE environment variable to change this behavior. You can then get a meaningful backtrace from your debugger if you break on the gdk_x_error() function.)]]></summary></entry><entry><title type="html">Navigate to the first or last same level heading</title><link href="https://jihuan-tian.github.io/computer/2025/01/16/navigate-to-the-first-or-last-same-level-heading.html" rel="alternate" type="text/html" title="Navigate to the first or last same level heading" /><published>2025-01-16T00:00:00+08:00</published><updated>2025-01-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/01/16/navigate-to-the-first-or-last-same-level-heading</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/01/16/navigate-to-the-first-or-last-same-level-heading.html"><![CDATA[<p>I use Org mode and Org Roam to realize the concept of Zettelkasten note system. Usually, a new note belonging to some topic or category will be appended to other notes at the same heading level. As days pass by, the notes accumulate and those lists of same level headings may be very long, which is inconvenient to navigate.</p>

<p>I wrote the following two Elisp functions to help me quickly go to the first and last same level heading.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-first-same-level-heading</span> <span class="p">()</span>
  <span class="s">"Move to the first heading at the same level in the current Org buffer."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">current-line-number</span> <span class="p">(</span><span class="nv">line-number-at-pos</span><span class="p">))</span>
         <span class="p">(</span><span class="nv">previous-line-number</span> <span class="mi">-1</span><span class="p">))</span>
    <span class="c1">;; Ensure we are not before the first heading.</span>
    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">org-current-level</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nb">=</span> <span class="nv">current-line-number</span> <span class="nv">previous-line-number</span><span class="p">))</span>
          <span class="c1">;; If the current line number is different from previous one, it means</span>
          <span class="c1">;; previous movement is effective. Otherwise, it means we've already</span>
          <span class="c1">;; reached the last subheading.</span>
          <span class="p">(</span><span class="nv">org-backward-heading-same-level</span> <span class="mi">1</span><span class="p">)</span>
          <span class="p">(</span><span class="k">setq</span> <span class="nv">previous-line-number</span> <span class="nv">current-line-number</span><span class="p">)</span>
          <span class="p">(</span><span class="k">setq</span> <span class="nv">current-line-number</span> <span class="p">(</span><span class="nv">line-number-at-pos</span><span class="p">))))</span>
    <span class="p">(</span><span class="nv">message</span> <span class="s">"You're already before any headings, do nothing!"</span><span class="p">)))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-last-same-level-heading</span> <span class="p">()</span>
  <span class="s">"Move to the last heading at the same level in the current Org buffer."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">current-line-number</span> <span class="p">(</span><span class="nv">line-number-at-pos</span><span class="p">))</span>
         <span class="p">(</span><span class="nv">previous-line-number</span> <span class="mi">-1</span><span class="p">))</span>
    <span class="c1">;; Ensure we are not before the first heading.</span>
    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">org-current-level</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nb">=</span> <span class="nv">current-line-number</span> <span class="nv">previous-line-number</span><span class="p">))</span>
          <span class="c1">;; If the current line number is different from previous one, it means</span>
          <span class="c1">;; previous movement is effective. Otherwise, it means we've already</span>
          <span class="c1">;; reached the last subheading.</span>
          <span class="p">(</span><span class="nv">org-forward-heading-same-level</span> <span class="mi">1</span><span class="p">)</span>
          <span class="p">(</span><span class="k">setq</span> <span class="nv">previous-line-number</span> <span class="nv">current-line-number</span><span class="p">)</span>
          <span class="p">(</span><span class="k">setq</span> <span class="nv">current-line-number</span> <span class="p">(</span><span class="nv">line-number-at-pos</span><span class="p">)))</span>
      <span class="p">(</span><span class="nv">message</span> <span class="s">"You're already before any headings, do nothing!"</span><span class="p">))))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[I use Org mode and Org Roam to realize the concept of Zettelkasten note system. Usually, a new note belonging to some topic or category will be appended to other notes at the same heading level. As days pass by, the notes accumulate and those lists of same level headings may be very long, which is inconvenient to navigate.]]></summary></entry><entry><title type="html">调试数组越界问题</title><link href="https://jihuan-tian.github.io/computer/2025/01/16/%E8%B0%83%E8%AF%95%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98.html" rel="alternate" type="text/html" title="调试数组越界问题" /><published>2025-01-16T00:00:00+08:00</published><updated>2025-01-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/01/16/%E8%B0%83%E8%AF%95%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/01/16/%E8%B0%83%E8%AF%95%E6%95%B0%E7%BB%84%E8%B6%8A%E7%95%8C%E9%97%AE%E9%A2%98.html"><![CDATA[<p>为了理解 Git 的工作机制，近期尝试用 C 语言编写 Git 基本功能的简单实现。一如继往 ，在调试 SHA-1 哈希码与对象文件生成的过程中也遇到了一些“怪异”的错误。最终发现是数组越界导致的。由于编译器给出的错误只是现象而不是原因，而且是站在编译的角度来看的，因此当数组存在越界时，报出的错误往往非常“怪异”，显示的出错位置也一般不是错误的发源处。例如，今天在调试 git-in-c 时，程序在退出时会报 OpenSSL CTX 的 <code class="language-plaintext highlighter-rouge">free(str)</code> 出现问题。若怀疑是 OpenSSL 的问题，则根本无从下手解决。又使用了 valgrind 检测内存是否有错误，结果报告中的一个错误说是：</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>==391667== Use of uninitialised value of size 8
==391667==    at 0x4EF0A42: _itoa_word (_itoa.c:178)
==391667==    by 0x4EFBE58: __vfprintf_internal (vfprintf-process-arg.c:164)
==391667==    by 0x4F172F6: __vsprintf_internal (iovsprintf.c:96)
==391667==    by 0x4EF7D60: sprintf (sprintf.c:30)
==391667==    by 0x499EB6C: generate_object_path_components_from_sha1_hash (cgit.c:609)
==391667==    by 0x499EC2F: write_blob_object_file (cgit.c:632)
==391667==    by 0x1093FB: main (main.c:64)
==391667==  Uninitialised value was created by a stack allocation
==391667==    at 0x109219: main (main.c:11)
</code></pre></div></div>

<p>但实际上，我对于传入 <code class="language-plaintext highlighter-rouge">sprintf</code> 的动态数组，都已经正确分配了内存，而是否对其初始化并不必要。之后，即便我增加了 <code class="language-plaintext highlighter-rouge">memset</code> 对这段内存初始化，也还是同样的问题。</p>

<p>最终发现，下面这段代码出现了数组越界：</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kt">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">SHA1_BYTE_LENGTH</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
  <span class="n">sprintf</span><span class="p">((</span><span class="kt">char</span> <span class="o">*</span><span class="p">)(</span><span class="n">path_components</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span><span class="p">),</span> <span class="s">"%02x"</span><span class="p">,</span> <span class="n">sha1_hash</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</code></pre></div></div>

<p>正确的应为：</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kt">size_t</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">SHA1_BYTE_LENGTH</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
  <span class="n">sprintf</span><span class="p">((</span><span class="kt">char</span> <span class="o">*</span><span class="p">)(</span><span class="n">path_components</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span><span class="p">),</span> <span class="s">"%02x"</span><span class="p">,</span> <span class="n">sha1_hash</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
</code></pre></div></div>

<p>这样一来，一切就说得通了：</p>

<ol>
  <li>数组越界后，访问的内存区间超出了我的程序通过 <code class="language-plaintext highlighter-rouge">malloc</code> 申请的范围，所以 <code class="language-plaintext highlighter-rouge">valgrind</code> 提示说有 8 个字节的内存未经初始化。</li>
  <li>因为数组越界，也影响到了 OpenSSL 使用到的内存，从而产生了意想不到的效果。</li>
</ol>

<p><strong>Lessons learned</strong></p>

<p>C/C++ 程序编译与运行过程中出现“怪异”现象时，若编译器给出的错误提示与代码位置以及程序在异常退出时产生的 coredump 堆栈信息不符合我们的直观理解，就不能紧盯着错误提示、代码位置、堆栈函数不放，而要在出错位置的周围找原因。这是由于编译器与程序给出的信息只是现象而不是原因，而且是站在编译器与程序代码的角度来看的。这就要求我们理解编译器的“潜台词”（connotation），透过表象抓住背后的本质。</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><summary type="html"><![CDATA[为了理解 Git 的工作机制，近期尝试用 C 语言编写 Git 基本功能的简单实现。一如继往 ，在调试 SHA-1 哈希码与对象文件生成的过程中也遇到了一些“怪异”的错误。最终发现是数组越界导致的。由于编译器给出的错误只是现象而不是原因，而且是站在编译的角度来看的，因此当数组存在越界时，报出的错误往往非常“怪异”，显示的出错位置也一般不是错误的发源处。例如，今天在调试 git-in-c 时，程序在退出时会报 OpenSSL CTX 的 free(str) 出现问题。若怀疑是 OpenSSL 的问题，则根本无从下手解决。又使用了 valgrind 检测内存是否有错误，结果报告中的一个错误说是：]]></summary></entry><entry><title type="html">Configure Chinese font in Emacs</title><link href="https://jihuan-tian.github.io/computer/2025/01/14/configure-chinese-font-in-emacs.html" rel="alternate" type="text/html" title="Configure Chinese font in Emacs" /><published>2025-01-14T00:00:00+08:00</published><updated>2025-01-14T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2025/01/14/configure-chinese-font-in-emacs</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2025/01/14/configure-chinese-font-in-emacs.html"><![CDATA[<p>Several concepts in Emacs should be clarified first.</p>

<ul>
  <li>
    <p>Fontset: a fontset is the collection of fonts that Emacs uses to display all scripts it supports.</p>

    <p>Emacs defines three fontsets: standard, startup and default fontsets. The default fontset is the default fallback of the other two.</p>
  </li>
  <li>Script: [Oxford Advanced Learner] n. a set of letters in which a language is written. Therefore, a font covers a single or several scripts or alphabets.</li>
  <li>Character set: it is a set of letters in one or several scripts. It is in the sense of symbols and not related to the representation on computers. For a same character set, there may be several ways of encoding.</li>
  <li>Character code: the binary representation of characters on computers. Therefore, a complete character code or any subset of it naturally implies a character set.</li>
  <li>Font: it defines how to draw the characters within its supported scripts. These scripts are represented by some character code. We can use <code class="language-plaintext highlighter-rouge">fontforge</code> to check the encoding supported by a font file.</li>
  <li>Face: short for typeface, which is a set of letters, numbers, etc. of a particular design, used in printing. it is the style Emacs uses to display some text. It is equivalent to a CSS style. Some faces defined by Emacs are <code class="language-plaintext highlighter-rouge">default</code>, <code class="language-plaintext highlighter-rouge">bold</code>, <code class="language-plaintext highlighter-rouge">bold-italic</code>, etc. Some faces defined by Org mode are <code class="language-plaintext highlighter-rouge">org-level-1</code>, <code class="language-plaintext highlighter-rouge">org-level-2</code>, <code class="language-plaintext highlighter-rouge">org-quote</code>, etc.</li>
</ul>

<p>Then, we assign the font “Noto Sans Mono” with a height 130 in units of 1/10 point to the <code class="language-plaintext highlighter-rouge">default</code> face for all existing frames.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">set-face-attribute</span> <span class="ss">'default</span> <span class="no">nil</span> <span class="ss">:font</span> <span class="s">"Noto Sans Mono"</span> <span class="ss">:height</span> <span class="mi">130</span><span class="p">)</span>
</code></pre></div></div>

<p>In the default fontset of Emacs, we set the font for Chinese related scripts and character sets, so that English and Chinese can be displayed in different fonts.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">script-or-charset</span> <span class="o">'</span><span class="p">(</span><span class="nv">han</span> <span class="nv">cjk-misc</span> <span class="nv">chinese-gbk</span> <span class="nv">kana</span> <span class="nv">big5</span> <span class="nv">big5-hkscs</span> <span class="nv">chinese-big5-1</span> <span class="nv">chinese-big5-2</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">set-fontset-font</span> <span class="no">t</span> <span class="nv">script-or-charset</span> <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">"仓耳今楷05"</span><span class="p">)))</span>
</code></pre></div></div>

<p>Check the variable <code class="language-plaintext highlighter-rouge">script-representative-chars</code> for a list of scripts and execute <code class="language-plaintext highlighter-rouge">list-character-sets</code> to see a list of character sets. In the above configuration, <code class="language-plaintext highlighter-rouge">han</code>, <code class="language-plaintext highlighter-rouge">cjk-misc</code> and <code class="language-plaintext highlighter-rouge">kana</code> are scripts. <code class="language-plaintext highlighter-rouge">chinese-gbk</code>, <code class="language-plaintext highlighter-rouge">big5</code>, <code class="language-plaintext highlighter-rouge">big5-hkscs</code>, <code class="language-plaintext highlighter-rouge">chinese-big5-1</code> and <code class="language-plaintext highlighter-rouge">chinese-big5-2</code> are character sets.</p>

<p>The characters in big5 charset is like this.
<img src="/figures/2025-01-14_09-47-05-emacs-character-sets.png" alt="img" /></p>

<p>Because the font 仓耳今楷05 is a bit smaller than a same size English font, we assign it a scaling factor.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Use Chinese in the font name and the rescaling will take effect.</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'face-font-rescale-alist</span> <span class="o">'</span><span class="p">(</span><span class="s">"仓耳今楷05"</span> <span class="o">.</span> <span class="mf">1.3</span><span class="p">))</span>
</code></pre></div></div>

<p>Now the Chinese font in Emacs editor looks more comfortable.
<img src="/figures/2025-01-14_10-07-54-emacs-with-tsanger-font.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Several concepts in Emacs should be clarified first.]]></summary></entry><entry><title type="html">LaTeX equations cannot be rendered in org-roam-ui</title><link href="https://jihuan-tian.github.io/computer/2024/11/20/latex-equations-cannot-be-rendered-in-org-roam-ui.html" rel="alternate" type="text/html" title="LaTeX equations cannot be rendered in org-roam-ui" /><published>2024-11-20T00:00:00+08:00</published><updated>2024-11-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/11/20/latex-equations-cannot-be-rendered-in-org-roam-ui</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/11/20/latex-equations-cannot-be-rendered-in-org-roam-ui.html"><![CDATA[<p><strong>Phenomenon</strong> All LaTeX equations are displayed as UTF-8 symbols in the preview panel of <code class="language-plaintext highlighter-rouge">org-roam-ui</code>, which cannot be rendered by KaTeX (<a href="https://github.com/org-roam/org-roam-ui/issues/285">reference</a>).</p>

<p><strong>Cause</strong> The file names for the fonts used by KaTeX in <code class="language-plaintext highlighter-rouge">~/.emacs.d/elpa/org-roam-ui-20221105.1040/out/_next/static/media</code> have been cut short. So the fonts cannot be found when loading the preview page.</p>

<p><strong>Solution</strong> Do not install <code class="language-plaintext highlighter-rouge">org-roam-ui</code> via Emacs <code class="language-plaintext highlighter-rouge">package-install</code>. Use the <code class="language-plaintext highlighter-rouge">org-roam-ui</code> cloned from GitHub <code class="language-plaintext highlighter-rouge">https://github.com/org-roam/org-roam-ui.git</code>.</p>

<p>Now everything looks correct.</p>

<p><img src="/figures/2024-10-18_14-10-01-org-roam-ui-math-preview.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-roam" /><summary type="html"><![CDATA[Phenomenon All LaTeX equations are displayed as UTF-8 symbols in the preview panel of org-roam-ui, which cannot be rendered by KaTeX (reference).]]></summary></entry><entry><title type="html">Irregular cursor jumps in Org mode</title><link href="https://jihuan-tian.github.io/computer/2024/11/19/irregular-cursor-jumps-in-org-mode.html" rel="alternate" type="text/html" title="Irregular cursor jumps in Org mode" /><published>2024-11-19T00:00:00+08:00</published><updated>2024-11-19T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/11/19/irregular-cursor-jumps-in-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/11/19/irregular-cursor-jumps-in-org-mode.html"><![CDATA[<p><strong>Phenomenon</strong> When I edit an Org mode buffer which has been opened in two Emacs windows for side-by-side review, the cursor will irregularly jump, <strong>within the same window</strong>, from the current position to the cursor position in another window, even though I have not clicked any link.</p>

<p><strong>Possible cause</strong> Overlays generated by <code class="language-plaintext highlighter-rouge">texfrag</code>.</p>

<p><strong>Solution</strong> Clone the buffer into another window by calling <code class="language-plaintext highlighter-rouge">clone-indirect-buffer-other-window</code>. However, LaTeX previews from <code class="language-plaintext highlighter-rouge">texfrag</code> in these two windows are no synchronized, which should be independently generated.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="bug" /><summary type="html"><![CDATA[Phenomenon When I edit an Org mode buffer which has been opened in two Emacs windows for side-by-side review, the cursor will irregularly jump, within the same window, from the current position to the cursor position in another window, even though I have not clicked any link.]]></summary></entry><entry><title type="html">Conflict between YASnippet and cdlatex</title><link href="https://jihuan-tian.github.io/computer/2024/11/02/conflict-between-yasnippet-and-cdlatex.html" rel="alternate" type="text/html" title="Conflict between YASnippet and cdlatex" /><published>2024-11-02T00:00:00+08:00</published><updated>2024-11-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/11/02/conflict-between-yasnippet-and-cdlatex</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/11/02/conflict-between-yasnippet-and-cdlatex.html"><![CDATA[<p>Today, when I edited the LaTeX document for my personal project, the <code class="language-plaintext highlighter-rouge">cdlatex</code> expansion took precedence over the YASnippet expansion, which made the latter not function properly. Such a phenomenon has not appeared before.</p>

<p><strong>Solution</strong></p>

<ol>
  <li>
    <p>Create the following Elisp function <code class="language-plaintext highlighter-rouge">tjh/cdlatex-yas-expand</code>, in which the YASnippet expansion will be tried first. If successful, this function returns <code class="language-plaintext highlighter-rouge">t</code> and the default <code class="language-plaintext highlighter-rouge">cdlatex</code> expansion will be ignored. Otherwise, the <code class="language-plaintext highlighter-rouge">cdlatex</code> expansion will be used.</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/cdlatex-yas-expand</span> <span class="p">()</span>
  <span class="s">"Resolve the conflict between cdlatex and yasnippet. When this
function returns true, the default `cdlatex-tab` will not be
executed. The effect of function is to first try yasnippet
expansion, then cdlatex expansion."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nv">bound-and-true-p</span> <span class="nv">yas-minor-mode</span><span class="p">)</span>
          <span class="p">(</span><span class="nv">bound-and-true-p</span> <span class="nv">yas-global-mode</span><span class="p">))</span>
      <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">yas-expand</span><span class="p">)</span>
          <span class="no">t</span>
        <span class="no">nil</span><span class="p">)</span>
    <span class="no">nil</span><span class="p">))</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Add <code class="language-plaintext highlighter-rouge">tjh/cdlatex-yas-expand</code> to <code class="language-plaintext highlighter-rouge">cdlatex-tab-hook</code>.</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">add-hook</span> <span class="ss">'cdlatex-tab-hook</span> <span class="ss">'tjh/cdlatex-yas-expand</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Today, when I edited the LaTeX document for my personal project, the cdlatex expansion took precedence over the YASnippet expansion, which made the latter not function properly. Such a phenomenon has not appeared before.]]></summary></entry><entry><title type="html">Enabled org-roam-bibtex in my note-taking work flow</title><link href="https://jihuan-tian.github.io/computer/2024/11/02/enabled-org-roam-bibtex-in-my-note-taking-work-flow.html" rel="alternate" type="text/html" title="Enabled org-roam-bibtex in my note-taking work flow" /><published>2024-11-02T00:00:00+08:00</published><updated>2024-11-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/11/02/enabled-org-roam-bibtex-in-my-note-taking-work-flow</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/11/02/enabled-org-roam-bibtex-in-my-note-taking-work-flow.html"><![CDATA[<p><strong>Why do I need the org-roam-bibtex package?</strong></p>

<p>Previously, I rely on the <code class="language-plaintext highlighter-rouge">org-ref</code> package to insert citations into my Org notes. By clicking on a citation key, I can directly open associated PDF file and bibliography notes which are stored in an independent file, e.g. <code class="language-plaintext highlighter-rouge">bib-notes.org</code>. Even though <code class="language-plaintext highlighter-rouge">org-roam</code> recognizes the citation keys inserted via <code class="language-plaintext highlighter-rouge">org-ref</code>, bibliography notes are incompatible with <code class="language-plaintext highlighter-rouge">org-roam</code> and cannot be visualized in <code class="language-plaintext highlighter-rouge">org-roam-ui</code>. Then I need <code class="language-plaintext highlighter-rouge">org-roam-bibtex</code> to solve this problem by storing the notes for each bibliography item into an independent Org file.</p>

<p><strong>Problems met</strong></p>

<p>When saving an Org file, <code class="language-plaintext highlighter-rouge">org-roam-bibtex</code> will check the attached documents for each bibliography item. When there are more than one PDF files associated with an item, there will be an prompt in the mini buffer to let me choose which one is to be used. When there are a bunch of bibliography items containing multiple PDF files, and they usually are duplicated files, confirming each prompt will be unbearable.</p>

<p><strong>Solution</strong></p>

<ol>
  <li>Remove all duplicated PDF files in Zotero and export the Bibtex file used by <code class="language-plaintext highlighter-rouge">org-ref</code> via the “Better Bibtex” plugin. N.B. The cache generated by “Better Bibtex” should be deleted before the export, otherwise, the <code class="language-plaintext highlighter-rouge">file</code> field in the exported Bibtex file will not be updated.</li>
  <li>
    <p><strong>org-roam-bibtex-mode</strong> should not be added to <code class="language-plaintext highlighter-rouge">org-mode-hook</code>, otherwise, when editing or creating a bibliography note, there will be an error like this:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>orb-edit-note caught an error during capture: Lisp nesting exceeds ‘max-lisp-eval-depth’
</code></pre></div>    </div>
  </li>
  <li>
    <p>I’ve also written an Elisp function <code class="language-plaintext highlighter-rouge">tjh/orb-edit-note</code> to create or edit a note, which does not require the cursor to be on a citation key.</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/orb-edit-note</span><span class="p">()</span>
  <span class="s">"Edit an existing or creating a new note for a bibliography item
for the user input bibtex key."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">key</span> <span class="p">(</span><span class="nv">org-ref-read-key</span><span class="p">)))</span>
    <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">key</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">orb-edit-note</span> <span class="nv">key</span><span class="p">))))</span>
</code></pre></div>    </div>
  </li>
</ol>

<p>Now the bibliography notes can be visualized in <code class="language-plaintext highlighter-rouge">org-roam-ui</code>.</p>

<p><img src="/figures/2024-10-25_16-05-09-bibliography-in-org-roam.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-roam" /><summary type="html"><![CDATA[Why do I need the org-roam-bibtex package?]]></summary></entry><entry><title type="html">org-roam-ui cannot visualize all nodes</title><link href="https://jihuan-tian.github.io/computer/2024/11/02/org-roam-ui-cannot-visualize-all-nodes.html" rel="alternate" type="text/html" title="org-roam-ui cannot visualize all nodes" /><published>2024-11-02T00:00:00+08:00</published><updated>2024-11-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/11/02/org-roam-ui-cannot-visualize-all-nodes</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/11/02/org-roam-ui-cannot-visualize-all-nodes.html"><![CDATA[<p>Recently, when I started <code class="language-plaintext highlighter-rouge">org-roam-ui</code>, Firefox reported an error in a blank page:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Application error: a client-side exception has occurred (see the browser console for more information).
</code></pre></div></div>

<p>At the beginning, I temporarily solved the problem by sifting out “Orphan” nodes. This manual operation must be quick enough before the above error appears.</p>

<p><img src="/figures/2024-09-12_12-10-24-enable-org-roam-ui-orphans-filter.png" alt="img" /></p>

<p>Or an easier way is to open the Firefox developer tool, then go to “Storage → Local Storage → <a href="http://localhost:35901">http://localhost:35901</a>”, and modify the value of the key <code class="language-plaintext highlighter-rouge">filter</code> as below.</p>

<p><img src="/figures/2024-09-22_10-10-51-org-roam-ui-filter-orphans.png" alt="img" /></p>

<p>To find the real cause of the above problem, today I cleaned the <code class="language-plaintext highlighter-rouge">org-roam</code> folder first, then added my Org files back one-by-one and finally found the culprit came from a file named <code class="language-plaintext highlighter-rouge">cpp.org</code>. But still, the exact error location was not known. Further, I deleted each note in this file one-by-one until I found out the problem was caused by a note with a tag <code class="language-plaintext highlighter-rouge">constructor</code>. Unfortunately, <code class="language-plaintext highlighter-rouge">constructor</code> is a special method of a Javascript class for creating and initializing an instance of that class. So <code class="language-plaintext highlighter-rouge">org-roam-ui</code> must have treated this note tag as a function to execute.</p>

<p><strong>Solution</strong></p>

<p>Do not add <code class="language-plaintext highlighter-rouge">constructor</code> tag to any <code class="language-plaintext highlighter-rouge">org-roam</code> note.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-roam" /><category term="bug" /><summary type="html"><![CDATA[Recently, when I started org-roam-ui, Firefox reported an error in a blank page:]]></summary></entry><entry><title type="html">Automatically generate a relative link to a blog post</title><link href="https://jihuan-tian.github.io/computer/2024/10/27/automatically-generate-a-relative-link-to-a-blog-post.html" rel="alternate" type="text/html" title="Automatically generate a relative link to a blog post" /><published>2024-10-27T00:00:00+08:00</published><updated>2024-10-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/10/27/automatically-generate-a-relative-link-to-a-blog-post</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/10/27/automatically-generate-a-relative-link-to-a-blog-post.html"><![CDATA[<p>I use Org mode for taking notes, which are organized in different levels of headings. I use Jekyll as my blog system and its articles are exported from related headings in my Org mode files. I use the following Elisp function <code class="language-plaintext highlighter-rouge">tjh/org-blog-default-link</code> to automatically generate a file name for a blog post and also create a <code class="language-plaintext highlighter-rouge">BLOG</code> property associated with the heading, which contains a relative link to the blog post file.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-blog-default-link</span> <span class="p">(</span><span class="nv">filename-ext</span><span class="p">)</span>
  <span class="s">"Create BLOG property and add the relative link to the blog post associated with the current heading."</span>
  <span class="p">(</span><span class="nv">interactive</span>
   <span class="p">(</span><span class="nb">list</span> <span class="p">(</span><span class="nv">read-string</span> <span class="s">"Blog post file extension: "</span> <span class="s">"markdown"</span><span class="p">)))</span>
  <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">filename-ext</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">save-excursion</span>
        <span class="p">(</span><span class="nv">org-back-to-heading</span> <span class="no">t</span><span class="p">)</span>
        <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">heading-text</span>
               <span class="p">(</span><span class="nv">concat</span> <span class="p">(</span><span class="nv">format-time-string</span> <span class="s">"%Y-%m-%d-"</span><span class="p">)</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">" +"</span> <span class="s">"-"</span> <span class="p">(</span><span class="nv">downcase</span> <span class="p">(</span><span class="nv">org-get-heading</span> <span class="no">t</span> <span class="no">t</span> <span class="no">t</span> <span class="no">t</span><span class="p">)))))</span>
              <span class="p">(</span><span class="nv">blog-post-dir</span> <span class="p">(</span><span class="nv">getenv</span> <span class="s">"post"</span><span class="p">))</span>
              <span class="p">(</span><span class="nv">blog-post-filename</span><span class="p">)</span>
              <span class="p">(</span><span class="nv">blog-post-relative-link</span><span class="p">))</span>
          <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">&gt;</span> <span class="p">(</span><span class="nb">length</span> <span class="nv">heading-text</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span>
              <span class="p">(</span><span class="k">progn</span>
                <span class="p">(</span><span class="k">setq</span> <span class="nv">blog-post-relative-link</span> <span class="p">(</span><span class="nb">format</span> <span class="s">"[[file:%s]]"</span> <span class="p">(</span><span class="nv">file-relative-name</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">blog-post-dir</span> <span class="p">(</span><span class="nv">f-path-separator</span><span class="p">)</span> <span class="nv">heading-text</span> <span class="s">"."</span> <span class="nv">filename-ext</span><span class="p">))))</span>
                <span class="p">(</span><span class="nv">org-set-property</span> <span class="s">"BLOG"</span> <span class="nv">blog-post-relative-link</span><span class="p">)</span>
                <span class="p">(</span><span class="k">setq</span> <span class="nv">blog-post-filename</span> <span class="p">(</span><span class="nv">concat</span> <span class="nv">heading-text</span> <span class="s">"."</span> <span class="nv">filename-ext</span><span class="p">))</span>
                <span class="p">(</span><span class="nv">kill-new</span> <span class="nv">blog-post-filename</span><span class="p">)</span>
                <span class="p">(</span><span class="nv">message</span> <span class="s">"Copied blog post file name: %s"</span> <span class="nv">blog-post-filename</span><span class="p">)))))))</span>
</code></pre></div></div>

<p>Then I use the function <code class="language-plaintext highlighter-rouge">tjh/org-blog-open</code> to open the blog post file, when the cursor is at the heading or within the contents below this heading.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-blog-open</span><span class="p">()</span>
  <span class="s">"Open the blog post whose link is stored as the :BLOG property"</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">save-excursion</span>
    <span class="p">(</span><span class="nv">org-back-to-heading</span> <span class="no">t</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">element</span> <span class="p">(</span><span class="nv">org-element-at-point</span><span class="p">))</span>
          <span class="p">(</span><span class="nv">blog-file</span><span class="p">))</span>
      <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">eq</span> <span class="p">(</span><span class="nv">org-element-type</span> <span class="nv">element</span><span class="p">)</span> <span class="ss">'headline</span><span class="p">)</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">blog-file</span> <span class="p">(</span><span class="nv">org-element-property</span> <span class="ss">:BLOG</span> <span class="nv">element</span><span class="p">))</span>
        <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">blog-file</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">string-empty-p</span> <span class="nv">blog-file</span><span class="p">)))</span>
            <span class="p">(</span><span class="nv">org-open-file</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"file:"</span> <span class="s">""</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"[\]\[]"</span> <span class="s">""</span> <span class="nv">blog-file</span><span class="p">)))</span>
          <span class="p">(</span><span class="nv">message</span> <span class="s">"There is no blog associated with this item!"</span><span class="p">))))))</span>
</code></pre></div></div>

<p>With these two functions, my Org notes and Jekyll blog are intimately connected.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[I use Org mode for taking notes, which are organized in different levels of headings. I use Jekyll as my blog system and its articles are exported from related headings in my Org mode files. I use the following Elisp function tjh/org-blog-default-link to automatically generate a file name for a blog post and also create a BLOG property associated with the heading, which contains a relative link to the blog post file.]]></summary></entry><entry><title type="html">org-roam-bibtex slows down Emacs when saving Org files</title><link href="https://jihuan-tian.github.io/computer/2024/10/27/org-roam-bibtex-slows-down-emacs-when-saving-org-files.html" rel="alternate" type="text/html" title="org-roam-bibtex slows down Emacs when saving Org files" /><published>2024-10-27T00:00:00+08:00</published><updated>2024-10-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/10/27/org-roam-bibtex-slows-down-emacs-when-saving-org-files</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/10/27/org-roam-bibtex-slows-down-emacs-when-saving-org-files.html"><![CDATA[<p>After installing the package <code class="language-plaintext highlighter-rouge">org-roam-bibtex</code>, when I save a modified Org mode buffer with <code class="language-plaintext highlighter-rouge">org-roam-ui</code> enabled, it takes much longer than before to finish. Calling <code class="language-plaintext highlighter-rouge">profiler-start</code>, <code class="language-plaintext highlighter-rouge">profiler-stop</code> then <code class="language-plaintext highlighter-rouge">profiler-report</code> during the above buffer saving process, I can locate the bottleneck as below, which comes from <code class="language-plaintext highlighter-rouge">orb-get-attached-file</code>. In this function, the attached PDF file of each referenced BibTeX key in the document will be searched, which consumes a lot of time.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>6925  91% - command-execute
6572  86%  - funcall-interactively
6564  86%   - save-buffer
6532  86%    - basic-save-buffer
6525  86%     - run-hooks
6525  86%      - org-roam-ui--on-save # Send graphdata on saving an org-roam buffer.
6045  79%       - org-roam-ui--send-graphdata # Get roam data, make JSON, send through
                                              # websocket to org-roam-ui.
5910  78%        - seq-map
5910  78%         - apply
5910  78%          - #&lt;compiled 0x1843c0fb8e4b25b4&gt;
5910  78%           - mapcar
5906  77%            - org-roam-ui--create-fake-node # Create a fake node for REF without a source note.
5906  77%             - org-roam-ui--find-ref-title # Find the title of the bibtex entry keyed by ‘REF’.
5135  67%              - orb--pre-expand-template # Helper function for ‘orb--new-note’. TEMPLATE is an
                                                  # element of ‘org-roam-capture-templates’ and ENTRY is
                                                  # a BibTeX entry as returned by ‘bibtex-completion-get-entry’.
5115  67%               - orb-get-attached-file # Look up files associated with a BibTeX entry identified by CITEKEY.
4335  57%                - bibtex-completion-find-pdf # Return the path of the PDF associated with the
                                                      # specified entry KEY-OR-ENTRY.
4335  57%                 - bibtex-completion-find-pdf-in-field # Return the path of the PDF specified in
                                                                # the field ‘bibtex-completion-pdf-field’ if that file exists.
4335  57%                  + if
 780  10%                + bibtex-completion-get-entry
  16   0%               + bibtex-completion-apa-get-value
 771  10%              - bibtex-completion-get-entry
 771  10%               + bibtex-completion-get-entry1
  64   0%        + org-roam-ui--get-nodes
  48   0%        + websocket-send-text
   4   0%        + #&lt;compiled -0xae26de3df61057f&gt;
   3   0%        + org-roam-ui--get-cites
 480   6%       + org-roam-ui--send-variables
   7   0%     + basic-save-buffer-1
   8   0%   + execute-extended-command
 353   4%  + byte-code
 579   7% + ...
  52   0% + flyspell-post-command-hook
   9   0%   redisplay_internal (C function)
   6   0% + timer-event-handler
   3   0% + org-roam-ui--update-current-node
</code></pre></div></div>

<p><strong>Advice</strong> When editing Org roam files during intensive study or research work, do not enable <code class="language-plaintext highlighter-rouge">org-roam-ui-mode</code>. Only enable it when we wan to visualize the node relationships.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="Org-roam" /><summary type="html"><![CDATA[After installing the package org-roam-bibtex, when I save a modified Org mode buffer with org-roam-ui enabled, it takes much longer than before to finish. Calling profiler-start, profiler-stop then profiler-report during the above buffer saving process, I can locate the bottleneck as below, which comes from orb-get-attached-file. In this function, the attached PDF file of each referenced BibTeX key in the document will be searched, which consumes a lot of time.]]></summary></entry><entry><title type="html">Ensure a safe and correct CMake build</title><link href="https://jihuan-tian.github.io/computer/2024/09/22/ensure-a-safe-and-correct-cmake-build.html" rel="alternate" type="text/html" title="Ensure a safe and correct CMake build" /><published>2024-09-22T00:00:00+08:00</published><updated>2024-09-22T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/09/22/ensure-a-safe-and-correct-cmake-build</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/09/22/ensure-a-safe-and-correct-cmake-build.html"><![CDATA[<p>If configuration or Makefile generation has been executed in the build folder of our CMake based project, there will be <code class="language-plaintext highlighter-rouge">CMakeCache.txt</code> files left there, which contain automatically generated CMake variables. If some external libraries required by our project have updates or the installation of them changes due to test purpose, CMake configuration and generation should be run again for our project.</p>

<p>However, for those automatically generated CMake variables, CMake configuration will not update their values. Therefore, to safely and correctly build our project, we had better firstly remove <code class="language-plaintext highlighter-rouge">CMakeCache.txt</code> and run <code class="language-plaintext highlighter-rouge">make clean</code> in the builder folder. Or we delete everything in this folder, then continue the configuration, generation and build trilogy.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="CMake" /><summary type="html"><![CDATA[If configuration or Makefile generation has been executed in the build folder of our CMake based project, there will be CMakeCache.txt files left there, which contain automatically generated CMake variables. If some external libraries required by our project have updates or the installation of them changes due to test purpose, CMake configuration and generation should be run again for our project.]]></summary></entry><entry><title type="html">大型软件的编译</title><link href="https://jihuan-tian.github.io/computer/2024/09/22/%E5%A4%A7%E5%9E%8B%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%BC%96%E8%AF%91.html" rel="alternate" type="text/html" title="大型软件的编译" /><published>2024-09-22T00:00:00+08:00</published><updated>2024-09-22T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/09/22/%E5%A4%A7%E5%9E%8B%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%BC%96%E8%AF%91</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/09/22/%E5%A4%A7%E5%9E%8B%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%BC%96%E8%AF%91.html"><![CDATA[<p>保证大型软件编译成功与良好运行的关键在于多个相关软件包的协同与配合。由于软件包的开发者可能只是基于某个特定版本的依赖库做他自己的开发工作，所以在选择软件包的依赖库版本时，不一定最新版的就是最好的。合理的做法是，首先在软件包的说明文档中寻找，看是否有对于依赖库版本号的明确说明。若没有，则可能需要经过编译与测试多个版本后，才能得出结论。接下来，就可以基于这些编译好的工具，开发自己的应用了。</p>

<p>随着时间的推移，自己的应用程序不断发展、演进，而其所依赖的第三方软件包与函数库也会逐步向前迭代。这就需要对它们定期更新，并重新按上述方法确定保证各组件能够正确协同工作的版本。</p>

<p>同时编译、测试、对比多个版本的软件包需要高度专注、极其小心，通过对如下条目多次检验核对，以保证生成的库或可执行文件正是自己想要的版本，测试程序亦严格在自己期望的参数条件下运行。这包括：</p>

<ul>
  <li>CMake 构建参数</li>
  <li>编译器参数</li>
  <li>编译生成的二进制文件的时间戳、文件名</li>
  <li>编译生成的二进制文件实际链接的库（可使用 ldd 命令查看）</li>
  <li>编译生成的二进制文件包含的符号名（可使用 nm 与 c++filt 命令查看）</li>
  <li>测试样例的输入参数</li>
  <li>输入文件与路径</li>
  <li>输出文件与路径</li>
  <li>当前工作目录</li>
  <li>环境变量</li>
</ul>

<p>在配置编译可选组件时，秉持最小化原则，即暂时不需要的功能不选择。这样既方便排查版本不兼容问题，也缩短了编译时间和后期调试自己程序的时间。</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="算法开发" /><summary type="html"><![CDATA[保证大型软件编译成功与良好运行的关键在于多个相关软件包的协同与配合。由于软件包的开发者可能只是基于某个特定版本的依赖库做他自己的开发工作，所以在选择软件包的依赖库版本时，不一定最新版的就是最好的。合理的做法是，首先在软件包的说明文档中寻找，看是否有对于依赖库版本号的明确说明。若没有，则可能需要经过编译与测试多个版本后，才能得出结论。接下来，就可以基于这些编译好的工具，开发自己的应用了。]]></summary></entry><entry><title type="html">Beautify Org mode</title><link href="https://jihuan-tian.github.io/computer/2024/09/06/beautify-org-mode.html" rel="alternate" type="text/html" title="Beautify Org mode" /><published>2024-09-06T00:00:00+08:00</published><updated>2024-09-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/09/06/beautify-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/09/06/beautify-org-mode.html"><![CDATA[<p>To make my Org mode visually appealing, I’ve done the following steps.</p>

<ul>
  <li>
    <p>Customize faces for different Org headings and emphasis. For example,</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">custom-set-faces</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-agenda-structure</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:foreground</span> <span class="s">"deep sky blue"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-block</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nb">shadow</span> <span class="ss">:extend</span> <span class="no">t</span> <span class="ss">:background</span> <span class="s">"beige"</span> <span class="ss">:foreground</span> <span class="s">"dark slate gray"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-code</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="s">"light cyan"</span> <span class="ss">:foreground</span> <span class="s">"dark cyan"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-date</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="s">"thistle1"</span> <span class="ss">:foreground</span> <span class="s">"Purple"</span> <span class="ss">:underline</span> <span class="no">t</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-drawer</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:foreground</span> <span class="s">"deep sky blue"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-footnote</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:foreground</span> <span class="s">"medium sea green"</span> <span class="ss">:underline</span> <span class="no">t</span> <span class="ss">:height</span> <span class="mf">0.9</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-level-1</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">outline-1</span> <span class="ss">:extend</span> <span class="no">nil</span> <span class="ss">:height</span> <span class="mf">1.3</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-level-2</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">outline-2</span> <span class="ss">:extend</span> <span class="no">nil</span> <span class="ss">:height</span> <span class="mf">1.2</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-level-3</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">outline-3</span> <span class="ss">:extend</span> <span class="no">nil</span> <span class="ss">:height</span> <span class="mf">1.1</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-level-4</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">outline-4</span> <span class="ss">:extend</span> <span class="no">nil</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-meta-line</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">font-lock-comment-face</span> <span class="ss">:height</span> <span class="mf">0.8</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-quote</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">org-block</span> <span class="ss">:background</span> <span class="s">"beige"</span> <span class="ss">:foreground</span> <span class="s">"dark green"</span> <span class="ss">:height</span> <span class="mf">1.4</span> <span class="ss">:family</span> <span class="s">"EB Garamond"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-ref-cite-face</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="nv">org-link</span> <span class="ss">:background</span> <span class="s">"DarkSeaGreen1"</span> <span class="ss">:foreground</span> <span class="s">"forest green"</span> <span class="ss">:box</span> <span class="p">(</span><span class="ss">:line-width</span> <span class="mi">2</span> <span class="ss">:color</span> <span class="s">"grey75"</span> <span class="ss">:style</span> <span class="nv">released-button</span><span class="p">)))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-scheduled-previously</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:foreground</span> <span class="s">"dark violet"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-tag</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="s">"khaki"</span> <span class="ss">:foreground</span> <span class="s">"dark green"</span> <span class="ss">:weight</span> <span class="nv">bold</span> <span class="ss">:family</span> <span class="s">"EB Garamond"</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-todo</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:background</span> <span class="s">"#fdf6e3"</span> <span class="ss">:foreground</span> <span class="s">"#dc322f"</span> <span class="ss">:inverse-video</span> <span class="no">nil</span> <span class="ss">:underline</span> <span class="no">nil</span> <span class="ss">:slant</span> <span class="nv">normal</span> <span class="ss">:weight</span> <span class="nv">bold</span><span class="p">))))</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-verbatim</span> <span class="p">((</span><span class="no">t</span> <span class="p">(</span><span class="ss">:inherit</span> <span class="p">(</span><span class="nb">shadow</span> <span class="nv">org-code</span><span class="p">))))))</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Use my favorite KaiTi for Chinese and EB Garamond for English in Org quote and verse blocks.</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Create a new fontset for org block and verse.</span>
<span class="p">(</span><span class="nv">create-fontset-from-fontset-spec</span>
 <span class="p">(</span><span class="nv">font-xlfd-name</span>
  <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">"courier"</span>
             <span class="ss">:registry</span> <span class="s">"fontset-org quote"</span><span class="p">)))</span>
    
<span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">charset</span> <span class="o">'</span><span class="p">(</span><span class="nv">han</span> <span class="nv">cjk-misc</span> <span class="nv">chinese-gbk</span> <span class="nv">kana</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">set-fontset-font</span> <span class="s">"fontset-org quote"</span> <span class="nv">charset</span> <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">"KaiTi"</span><span class="p">)))</span>
<span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">charset</span> <span class="o">'</span><span class="p">(</span><span class="nv">big5</span> <span class="nv">big5-hkscs</span> <span class="nv">chinese-big5-1</span> <span class="nv">chinese-big5-2</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">set-fontset-font</span> <span class="s">"fontset-org quote"</span> <span class="nv">charset</span> <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">"AR PL UKai TW"</span><span class="p">)))</span>
<span class="p">(</span><span class="nv">set-fontset-font</span> <span class="s">"fontset-org quote"</span> <span class="ss">'ascii</span>
                  <span class="p">(</span><span class="nv">font-spec</span> <span class="ss">:family</span> <span class="s">"EB Garamond"</span><span class="p">))</span>
    
<span class="c1">;; Enable fontification of quote and verse blocks.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">org-fontify-quote-and-verse-blocks</span> 
<span class="p">(</span><span class="nv">set-face-attribute</span> <span class="ss">'org-quote</span> <span class="no">nil</span> <span class="ss">:fontset</span> <span class="s">"fontset-org quote"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
  <li>Enable <code class="language-plaintext highlighter-rouge">org-indent-mode</code> to add visual indentation to different levels of headings and contents. Also remember to set <code class="language-plaintext highlighter-rouge">org-adapt-indentation</code> as <code class="language-plaintext highlighter-rouge">nil</code>. Otherwise, besides the visual indentation, actual indentation in the text is still there, and when there are many levels, the effective width of a paragraph will be very narrow. When the paragraph contains many LaTeX equations to be rendered (via <code class="language-plaintext highlighter-rouge">texfrag</code> for example), they will be scattered into several lines, which is difficult to read.</li>
  <li><code class="language-plaintext highlighter-rouge">org-modern-mode</code> looks great but is incompatible with <code class="language-plaintext highlighter-rouge">org-indent-mode</code> in that the visual indentation of a whole source code block will become zero, if two modes are enabled at the same time. Therefore, I do not use <code class="language-plaintext highlighter-rouge">org-modern-mode</code> anymore.</li>
  <li>Enable <code class="language-plaintext highlighter-rouge">org-visual-indent-mode</code> to add vertical lines which connect headings on a same level.</li>
</ul>

<p>The final effect of my Org mode is as below.</p>

<p><img src="/figures/2024-09-06_10-40-54-beautify-org-mode.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[To make my Org mode visually appealing, I’ve done the following steps.]]></summary></entry><entry><title type="html">Export Org contents to LaTeX file containing relative links</title><link href="https://jihuan-tian.github.io/computer/2024/07/25/export-org-contents-to-latex-file-containing-relative-links.html" rel="alternate" type="text/html" title="Export Org contents to LaTeX file containing relative links" /><published>2024-07-25T00:00:00+08:00</published><updated>2024-07-25T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/07/25/export-org-contents-to-latex-file-containing-relative-links</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/07/25/export-org-contents-to-latex-file-containing-relative-links.html"><![CDATA[<p>I’ve migrated my work journals to the <code class="language-plaintext highlighter-rouge">org-roam</code> root directory for building connections between notes (see <a href="/computer/2024/07/19/migrated-project-work-journals-to-org-roam-root-directory.html">Migrated project work journals to org-roam root directory</a>). But my formal LaTeX documents exported from Org mode are still placed in their respective project folders, which are outside of the <code class="language-plaintext highlighter-rouge">org-roam</code> root directory. Therefore, all relative links to images and other documents in LaTeX files should be converted with respect to a specific project folder. The path to the project folder is manually set as the variable <code class="language-plaintext highlighter-rouge">project-doc-dir</code> in the <code class="language-plaintext highlighter-rouge">scratch</code> buffer before export. By adding the following two functions to Org’s export filter for hyperlinks <code class="language-plaintext highlighter-rouge">org-export-filter-link-functions</code>, those relative links can be automatically converted when Org contents are exported into a LaTeX buffer or file.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Export Org to latex by converting relative links wrt a new directory.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-export-latex-convert-image-relative-links</span> <span class="p">(</span><span class="nv">link</span> <span class="nv">backend</span> <span class="nv">info</span><span class="p">)</span>
  <span class="s">"Convert relative file links to absolute paths when exporting."</span>
  <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">"\\(\\includegraphics.*\\){\\(.*\\)}"</span> <span class="nv">link</span><span class="p">)</span>
             <span class="p">(</span><span class="nb">eq</span> <span class="nv">backend</span> <span class="ss">'latex</span><span class="p">))</span>
    <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">include-cmd</span> <span class="p">(</span><span class="nv">match-string-no-properties</span> <span class="mi">1</span> <span class="nv">link</span><span class="p">))</span>
          <span class="p">(</span><span class="nv">file-path</span> <span class="p">(</span><span class="nv">match-string-no-properties</span> <span class="mi">2</span> <span class="nv">link</span><span class="p">)))</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">file-path</span> <span class="p">(</span><span class="nv">file-relative-name</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file-path</span><span class="p">)</span> <span class="nv">project-doc-dir</span><span class="p">))</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">link</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"\\includegraphics.*{.*}"</span>
                                           <span class="p">(</span><span class="nv">concat</span> <span class="nv">include-cmd</span> <span class="s">"{"</span> <span class="nv">file-path</span> <span class="s">"}"</span><span class="p">)</span>
                                           <span class="nv">link</span> <span class="no">t</span> <span class="no">t</span><span class="p">))))</span>
  <span class="nv">link</span><span class="p">)</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-export-latex-convert-href-relative-links</span> <span class="p">(</span><span class="nv">link</span> <span class="nv">backend</span> <span class="nv">info</span><span class="p">)</span>
  <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">"\\href{\\(.*?\\)}"</span> <span class="nv">link</span><span class="p">)</span>
             <span class="p">(</span><span class="nb">eq</span> <span class="nv">backend</span> <span class="ss">'latex</span><span class="p">))</span>
    <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">file-path</span> <span class="p">(</span><span class="nv">match-string-no-properties</span> <span class="mi">1</span> <span class="nv">link</span><span class="p">)))</span>
      <span class="p">(</span><span class="nb">when</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">"^http"</span> <span class="nv">file-path</span><span class="p">))</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">file-path</span> <span class="p">(</span><span class="nv">file-relative-name</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file-path</span><span class="p">)</span> <span class="nv">project-doc-dir</span><span class="p">))</span>
        <span class="p">(</span><span class="k">setq</span> <span class="nv">link</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"\\href{.*?}"</span>
                                             <span class="p">(</span><span class="nv">concat</span> <span class="s">"\href{"</span> <span class="nv">file-path</span> <span class="s">"}"</span><span class="p">)</span>
                                             <span class="nv">link</span> <span class="no">t</span> <span class="no">t</span><span class="p">)))))</span>
  <span class="nv">link</span><span class="p">)</span>

<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'org-export-filter-link-functions</span>
             <span class="ss">'tjh/org-export-latex-convert-image-relative-links</span><span class="p">)</span>
<span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'org-export-filter-link-functions</span>
             <span class="ss">'tjh/org-export-latex-convert-href-relative-links</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[I’ve migrated my work journals to the org-roam root directory for building connections between notes (see Migrated project work journals to org-roam root directory). But my formal LaTeX documents exported from Org mode are still placed in their respective project folders, which are outside of the org-roam root directory. Therefore, all relative links to images and other documents in LaTeX files should be converted with respect to a specific project folder. The path to the project folder is manually set as the variable project-doc-dir in the scratch buffer before export. By adding the following two functions to Org’s export filter for hyperlinks org-export-filter-link-functions, those relative links can be automatically converted when Org contents are exported into a LaTeX buffer or file.]]></summary></entry><entry><title type="html">Migrated project work journals to org-roam root directory</title><link href="https://jihuan-tian.github.io/computer/2024/07/19/migrated-project-work-journals-to-org-roam-root-directory.html" rel="alternate" type="text/html" title="Migrated project work journals to org-roam root directory" /><published>2024-07-19T00:00:00+08:00</published><updated>2024-07-19T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/07/19/migrated-project-work-journals-to-org-roam-root-directory</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/07/19/migrated-project-work-journals-to-org-roam-root-directory.html"><![CDATA[<p><code class="language-plaintext highlighter-rouge">org-roam</code> does not support Org files scattered in different folders which do not share a common ancestor. Therefore, I have to migrate my project work journals to the <code class="language-plaintext highlighter-rouge">org-roam</code> root directory. Since I still prefer to store project resources including figures, illustrations, scanned documents, mindmaps etc. into the project’s own folder, all the relative links to these resources in the work journals should be converted with respect to the <code class="language-plaintext highlighter-rouge">org-roam</code> root directory.</p>

<p>With the help of ChatGPT, I wrote the following Elisp function to achieve the above purpose. Note that this script also works for a link to Org heading like this <code class="language-plaintext highlighter-rouge">[[file:../../file.org::heading text]]</code>.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/is-relative-path</span> <span class="p">(</span><span class="nv">path</span><span class="p">)</span>
  <span class="s">"Check if PATH is a relative path."</span>
  <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">file-name-absolute-p</span> <span class="nv">path</span><span class="p">)))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/replace-string-in-region</span> <span class="p">(</span><span class="nv">start</span> <span class="nv">end</span> <span class="nv">replacement</span><span class="p">)</span>
  <span class="s">"Replace the string between START and END with REPLACEMENT."</span>
  <span class="p">(</span><span class="nv">goto-char</span> <span class="nv">start</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">delete-region</span> <span class="nv">start</span> <span class="nv">end</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">insert</span> <span class="nv">replacement</span><span class="p">))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-migrate-relative-links</span> <span class="p">(</span><span class="nv">target-migration-dir</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">"DTarget migration directory: "</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nv">point-min</span><span class="p">))</span>
  <span class="c1">;; Search each link in the Org file.</span>
  <span class="p">(</span><span class="nv">while</span> <span class="p">(</span><span class="nv">re-search-forward</span> <span class="nv">org-link-bracket-re</span> <span class="no">nil</span> <span class="no">t</span><span class="p">)</span>
    <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">link-start</span> <span class="p">(</span><span class="nv">match-beginning</span> <span class="mi">0</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">link-end</span> <span class="p">(</span><span class="nv">match-end</span> <span class="mi">0</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">url</span> <span class="p">(</span><span class="nv">match-string-no-properties</span> <span class="mi">1</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">actual-url</span> <span class="nv">url</span><span class="p">)</span>
           <span class="p">(</span><span class="nv">desc</span> <span class="p">(</span><span class="nv">match-string-no-properties</span> <span class="mi">2</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">link</span> <span class="p">(</span><span class="nv">org-element-lineage</span> <span class="p">(</span><span class="nv">org-element-context</span><span class="p">)</span> <span class="o">'</span><span class="p">(</span><span class="nv">link</span><span class="p">)</span> <span class="no">t</span><span class="p">))</span>
           <span class="p">(</span><span class="k">type</span> <span class="p">(</span><span class="nv">org-element-property</span> <span class="ss">:type</span> <span class="nv">link</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">has-run-prefx</span> <span class="no">nil</span><span class="p">))</span>

      <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">string=</span> <span class="k">type</span> <span class="s">"file"</span><span class="p">)</span>
          <span class="p">(</span><span class="k">progn</span>
            <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">string-match</span> <span class="s">"^file:run:\\(.*\\)"</span> <span class="nv">url</span><span class="p">)</span>
                <span class="c1">;; Remove the prefix "file:run:"</span>
                <span class="p">(</span><span class="k">progn</span>
                  <span class="p">(</span><span class="k">setq</span> <span class="nv">actual-url</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">url</span> <span class="mi">9</span><span class="p">))</span>
                  <span class="p">(</span><span class="k">setq</span> <span class="nv">has-run-prefx</span> <span class="no">t</span><span class="p">))</span>
              <span class="c1">;; Remove the prefix "file:"</span>
              <span class="p">(</span><span class="k">setq</span> <span class="nv">actual-url</span> <span class="p">(</span><span class="nv">substring</span> <span class="nv">url</span> <span class="mi">5</span><span class="p">)))</span>

            <span class="c1">;; We only transform relative path.</span>
            <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">tjh/is-relative-path</span> <span class="nv">actual-url</span><span class="p">)</span>
                <span class="p">(</span><span class="k">progn</span>
                  <span class="p">(</span><span class="k">setq</span> <span class="nv">actual-url</span>
                        <span class="p">(</span><span class="nv">file-relative-name</span>
                         <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">actual-url</span><span class="p">)</span>
                         <span class="nv">target-migration-dir</span><span class="p">))</span>
                  <span class="c1">;; Prepend the "run:" prefix if needed.</span>
                  <span class="p">(</span><span class="k">if</span> <span class="nv">has-run-prefx</span>
                      <span class="p">(</span><span class="k">setq</span> <span class="nv">actual-url</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"run:"</span> <span class="nv">actual-url</span><span class="p">)))</span>

                  <span class="p">(</span><span class="k">if</span> <span class="nv">desc</span>
                      <span class="p">(</span><span class="nv">tjh/replace-string-in-region</span>
                       <span class="nv">link-start</span>
                       <span class="nv">link-end</span>
                       <span class="p">(</span><span class="nb">format</span> <span class="s">"[[%s:%s][%s]]"</span> <span class="k">type</span> <span class="nv">actual-url</span> <span class="nv">desc</span><span class="p">))</span>
                    <span class="p">(</span><span class="nv">tjh/replace-string-in-region</span>
                     <span class="nv">link-start</span>
                     <span class="nv">link-end</span>
                     <span class="p">(</span><span class="nb">format</span> <span class="s">"[[%s:%s]]"</span> <span class="k">type</span> <span class="nv">actual-url</span><span class="p">))))))))))</span>
</code></pre></div></div>

<p>After that, I assigned a unique id to each headings in all Org files under a specified directory. As long as a heading has an id, it will be recognized by <code class="language-plaintext highlighter-rouge">org-roam</code> as a piece of independent note.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Add ids to all headings of the current Org file.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-add-ids-to-all-headings</span> <span class="p">()</span>
  <span class="s">"Add IDs to all headings in the current buffer."</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">org-map-entries</span> <span class="ss">'org-id-get-create</span><span class="p">))</span>

<span class="c1">;; Add ids to all headings in all Org files under a directory.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-add-ids-to-org-files</span> <span class="p">(</span><span class="nb">directory</span><span class="p">)</span>
  <span class="s">"Add IDs to all headings in all Org files in DIRECTORY."</span>
  <span class="p">(</span><span class="nb">dolist</span> <span class="p">(</span><span class="nv">file</span> <span class="p">(</span><span class="nv">directory-files-recursively</span> <span class="nb">directory</span> <span class="s">"\\.org$"</span><span class="p">))</span>
    <span class="p">(</span><span class="nv">with-current-buffer</span> <span class="p">(</span><span class="nv">find-file-noselect</span> <span class="nv">file</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">tjh/org-add-ids-to-all-headings</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">save-buffer</span><span class="p">))))</span>
</code></pre></div></div>

<p>Before using <code class="language-plaintext highlighter-rouge">org-roam</code>, I inserted internal links between different Org notes via the default mechanism provided by Org <code class="language-plaintext highlighter-rouge">org-store-link</code>. However, if the heading text is changed, all links to it will fail. Now with the above assigned indices, heading text changing will not invalid the links, which is much more robust. Setting the variable <code class="language-plaintext highlighter-rouge">org-id-link-to-org-use-id</code> to <code class="language-plaintext highlighter-rouge">t</code>, calling <code class="language-plaintext highlighter-rouge">org-store-link</code> will generate a id link.</p>

<p>I do not like the Zettelkasten concept. It would produce a lot of scattered small Org files, which are difficult to manage and browse. And they cannot be directly displayed in Org agenda. Therefore, I still put my notes belong to a same category into a same Org file.</p>

<p>The topology among my notes and journals can be visualized via <code class="language-plaintext highlighter-rouge">org-roam-ui</code>.</p>

<p><img src="/figures/2024-07-19-org-roam-all-note-links.png" alt="img" /></p>

<p>Backlinks: <a href="/computer/2024/07/25/export-org-contents-to-latex-file-containing-relative-links.html">《Export Org contents to LaTeX file containing relative links》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Org-mode" /><summary type="html"><![CDATA[org-roam does not support Org files scattered in different folders which do not share a common ancestor. Therefore, I have to migrate my project work journals to the org-roam root directory. Since I still prefer to store project resources including figures, illustrations, scanned documents, mindmaps etc. into the project’s own folder, all the relative links to these resources in the work journals should be converted with respect to the org-roam root directory.]]></summary></entry><entry><title type="html">Open Jekyll post URL from markdown-mode in Emacs</title><link href="https://jihuan-tian.github.io/computer/2024/06/23/open-jekyll-post-url-from-markdown-mode-in-emacs.html" rel="alternate" type="text/html" title="Open Jekyll post URL from markdown-mode in Emacs" /><published>2024-06-23T00:00:00+08:00</published><updated>2024-06-23T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/06/23/open-jekyll-post-url-from-markdown-mode-in-emacs</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/06/23/open-jekyll-post-url-from-markdown-mode-in-emacs.html"><![CDATA[<p>Even though a Jekyll blog article is written in the Markdown format on the whole, post URLs are in the Liquid grammar, which cannot be directly opened from <code class="language-plaintext highlighter-rouge">markdown-mode</code> in Emacs. Such a post URL looks like this:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Link text]({% post_url jekyll-markdown-file-name %})
</code></pre></div></div>

<p>Therefore, I’ve modified the Elisp function <code class="language-plaintext highlighter-rouge">markdown-link-url</code> provided by <code class="language-plaintext highlighter-rouge">markdown-mode</code> and postprocessed the extracted <code class="language-plaintext highlighter-rouge">url</code> string via regular expression replacement. Then the linked post can be directly opened in Emacs.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Process url to Jekyll post, so that it can be directly opened in markdown</span>
<span class="c1">;; mode.</span>
<span class="p">(</span><span class="nv">eval-after-load</span> <span class="s">"markdown-mode"</span>
  <span class="o">'</span><span class="p">(</span><span class="k">progn</span>
     <span class="p">(</span><span class="nb">defun</span> <span class="nv">markdown-link-url</span> <span class="p">()</span>
       <span class="s">"Return the URL part of the regular (non-wiki) link at point.
Works with both inline and reference style links, and with images.
If point is not at a link or the link reference is not defined
returns nil."</span>
       <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nb">values</span> <span class="p">(</span><span class="nv">markdown-link-at-pos</span> <span class="p">(</span><span class="nv">point</span><span class="p">)))</span>
              <span class="p">(</span><span class="nv">text</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">2</span> <span class="nb">values</span><span class="p">))</span>
              <span class="p">(</span><span class="nv">url</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span>
                    <span class="s">"{% +post_url +\\(.*?\\) +%}"</span> <span class="s">"\\1.markdown"</span>
                    <span class="p">(</span><span class="nb">nth</span> <span class="mi">3</span> <span class="nb">values</span><span class="p">)))</span>
              <span class="p">(</span><span class="nv">ref</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">4</span> <span class="nb">values</span><span class="p">)))</span>
         <span class="p">(</span><span class="nb">or</span> <span class="nv">url</span> <span class="p">(</span><span class="nb">and</span> <span class="nv">ref</span> <span class="p">(</span><span class="nb">car</span> <span class="p">(</span><span class="nv">markdown-reference-definition</span>
                                <span class="p">(</span><span class="nv">downcase</span> <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">string=</span> <span class="nv">ref</span> <span class="s">""</span><span class="p">)</span> <span class="nv">text</span> <span class="nv">ref</span><span class="p">))))))))))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Jekyll" /><summary type="html"><![CDATA[Even though a Jekyll blog article is written in the Markdown format on the whole, post URLs are in the Liquid grammar, which cannot be directly opened from markdown-mode in Emacs. Such a post URL looks like this:]]></summary></entry><entry><title type="html">Definitive solution for converting LaTeX in Org mode to markdown</title><link href="https://jihuan-tian.github.io/computer/2024/06/22/definitive-solution-for-converting-latex-in-org-mode-to-markdown.html" rel="alternate" type="text/html" title="Definitive solution for converting LaTeX in Org mode to markdown" /><published>2024-06-22T00:00:00+08:00</published><updated>2024-06-22T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/06/22/definitive-solution-for-converting-latex-in-org-mode-to-markdown</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/06/22/definitive-solution-for-converting-latex-in-org-mode-to-markdown.html"><![CDATA[<p>Finally, I switch to <code class="language-plaintext highlighter-rouge">make4ht</code> for converting LaTeX in Org mode to markdown.</p>

<p>Previously, when I wanted to publish some Org contents including LaTeX math equations to either GitHub Jekyll blog (equations are rendered by MathJax and the kramdown grammar is used) or GitLab web page (equations are rendered by KaTeX), I followed this procedure:</p>

<ol>
  <li>Export Org mode contents to LaTeX.</li>
  <li>
    <p>Convert LaTeX to GFM markdown via pandoc. In this page, <code class="language-plaintext highlighter-rouge">--bibliography=&lt;bibtex-file&gt;</code> option is added to pandoc. Then Bibtex citations in the original LaTeX document will be formatted to similar text as in LaTeX, such as <code class="language-plaintext highlighter-rouge">(Steinbach 2007)</code> if the Chicago citation style is used. The list of references will be generated into something as below.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># References
    
&lt;div id="refs" class="references hanging-indent"&gt;
    
&lt;div id="ref-ErichsenEfficient1998" markdown="1"&gt;
    
Erichsen, Stefan, and Stefan A. Sauter. 1998. “Efficient Automatic
Quadrature in 3-d Galerkin Bem.” *Computer Methods in Applied Mechanics and Engineering*, Papers presented at the seventh conference on
numerical methods and computational mechanics in science and
engineering, 157 (3): 215–24.
&lt;https://doi.org/10.1016/S0045-7825(97)00236-3&gt;.
    
&lt;/div&gt;
    
&lt;div id="ref-SteinbachNumerical2007" markdown="1"&gt;
    
Steinbach, Olaf. 2007. *Numerical Approximation Methods for Elliptic Boundary Value Problems: Finite and Boundary Elements*. Springer Science
&amp; Business Media.
    
&lt;/div&gt;
    
&lt;/div&gt;
</code></pre></div>    </div>
  </li>
  <li>Use an <a href="/computer/2024/05/13/convert-org-mode-contents-to-markdown.html">Awk script</a> to convert LaTeX equation wrappers to be suitable for MathJax or KaTeX.</li>
</ol>

<p>Unfortunately, due some unknown cause, pandoc cannot process bibliography anymore and I don’t know if this is related to my system upgrade from Debian Bullseyes to Bookworm. Meanwhile, the markdown export functionality provided by Org mode is even poorer than pandoc. Since I do not want to invest time to write a markdown exporter in Elisp at the moment, I have also tried other alternatives, such as <code class="language-plaintext highlighter-rouge">TeXmacs</code> with the <a href="https://github.com/PikachuHy/texmacs-converter-tm2md/tree/master">tm2md</a> plugin, neither can bibliography be handled and the generated markdown text is far from satisfying. Finally, I resorted to <code class="language-plaintext highlighter-rouge">make4ht</code>, which converts LaTeX to html. So far as I know, <code class="language-plaintext highlighter-rouge">make4ht</code> is the best document conversion tool which can preserve the original LaTeX typesetting. Its command line usage is like this.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make4ht -f html5-css &lt;tex-file.tex&gt; "mathjax,fn-in"
bibtex &lt;tex-file.aux&gt;
make4ht -f html5-css &lt;tex-file.tex&gt; "mathjax,fn-in"
</code></pre></div></div>

<p>Then open the generated HTML file and use the following Elisp script to correct display equations:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/correct-make4ht</span> <span class="p">()</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nv">point-min</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">replace-string</span> <span class="s">"\\begin {equation"</span> <span class="s">"\\begin{equation"</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">goto-char</span> <span class="p">(</span><span class="nv">point-min</span><span class="p">))</span>
  <span class="p">(</span><span class="nv">replace-string</span> <span class="s">"\\end {equation"</span> <span class="s">"\\end{equation"</span><span class="p">))</span>
</code></pre></div></div>

<p>Finally, extract the main contents from the HTML file (including the table of contents, since the <code class="language-plaintext highlighter-rouge">[toc]</code> markdown directive is not recognized when the file extension is <code class="language-plaintext highlighter-rouge">html</code>) and add the markdown preamble. To prevent some HTML tags are processed by Jekyll first which makes further HTML rendering incorrect, the file should be saved with the <code class="language-plaintext highlighter-rouge">html</code> extension. It is fortunate that Liquid markup language is still supported. Hence, link to an existing post can be conveniently inserted by using the <code class="language-plaintext highlighter-rouge">post_url</code> command.</p>

<p>I’ve already wasted much time studying the usage of Org mode, pandoc and Awk etc., tuning their parameters, previewing and testing the conversion quality. Even though these tools give me the freedom and long term stability of my note and writing system, wasting time on tools instead of directly working on the project and solving problems is definitely a pitfall. To realize this point and make good balance between them, I have spent many years.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Org-mode" /><category term="LaTeX" /><category term="Markdown" /><summary type="html"><![CDATA[Finally, I switch to make4ht for converting LaTeX in Org mode to markdown.]]></summary></entry><entry><title type="html">Thumbnails in KDE</title><link href="https://jihuan-tian.github.io/computer/2024/06/11/thumbnails-in-kde.html" rel="alternate" type="text/html" title="Thumbnails in KDE" /><published>2024-06-11T00:00:00+08:00</published><updated>2024-06-11T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/06/11/thumbnails-in-kde</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/06/11/thumbnails-in-kde.html"><![CDATA[<p>Install the following Debian packages and enable them in the “Preview” tab within Dolphin’s “General” configuration page.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">kdegraphics-thumbnailers</code>: for advanced graphic file formats, such as PS, RAW.</li>
  <li><code class="language-plaintext highlighter-rouge">kdegraphics-mobipocket</code>: for mobi books.</li>
  <li><code class="language-plaintext highlighter-rouge">djvulibre-bin</code>: for DjVu books.</li>
  <li><code class="language-plaintext highlighter-rouge">ffmpegthumbs</code>: video thumbnail generator for KDE file managers like Dolphin and Konqueror. N.B. Do not mix this up with <code class="language-plaintext highlighter-rouge">ffmpegthumbnailer</code>, which is a command line tool for generating thumbnails and not supported by Dolphin.</li>
</ul>

<p><img src="/figures/2022-12-19_15-00-00-dolphin-preview-plugins.png" alt="img" title="Preview preferences in Dolphin" /></p>

<p>For the preview of DjVu files in Dolphin, it was strange at the beginning that DjVu files couldn’t be previewed in Dolphin. Then I tried to debug this problem by starting Dolphin from command line as below, which enabled a printout of the error message.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>QT_LOGGING_RULES="org.kde.dolphin=true" dolphin
</code></pre></div></div>

<p>The error message read</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kf.coreaddons: Expected a KPluginFactory, got a KIOPluginForMetaData
kf.kio.workers.thumbnail.djvu: QProcess::FailedToStart ""
</code></pre></div></div>

<p>Obviously, the thumbnail process couldn’t be started by Dolphin and the keyword <code class="language-plaintext highlighter-rouge">kf.kio.workers.thumbnail.djvu</code> seemed a clue. So I searched it on Google and found this source code from <a href="https://github.com/KDE/kio-extras/blob/master/thumbnail/djvucreator.cpp">here</a>:</p>

<pre><code class="language-C++">KIO::ThumbnailResult DjVuCreator::create(const KIO::ThumbnailRequest &amp;request)
{
  QProcess ddjvu;

  const QStringList args{QStringLiteral("-page=1"),
                         QStringLiteral("-size=") + QString::number(request.targetSize().width()) + QChar('x')
                         + QString::number(request.targetSize().height()),
                         QStringLiteral("-format=ppm"),
                         request.url().toLocalFile()};

  ddjvu.start(QStringLiteral("ddjvu"), args);
  ddjvu.waitForFinished();

  static bool warnOnce = true;
  if (ddjvu.exitCode() != 0) {
    if (warnOnce) {
      qCWarning(KIO_THUMBNAIL_DJVU_LOG) &lt;&lt; ddjvu.error() &lt;&lt; ddjvu.readAllStandardError();
      warnOnce = false;
    }
    return KIO::ThumbnailResult::fail();
  }

  QImage img;
  bool okay = img.load(&amp;ddjvu, "ppm");
  return okay ? KIO::ThumbnailResult::pass(img) : KIO::ThumbnailResult::fail();
}
</code></pre>

<p>It can be seen that the command <code class="language-plaintext highlighter-rouge">ddjvu</code> is to be called. However, it was not available on my Debian system (it is strange that why <code class="language-plaintext highlighter-rouge">ddjvu</code> has not been included as one of the dependencies of the <code class="language-plaintext highlighter-rouge">dolphin</code> package). Actually, <code class="language-plaintext highlighter-rouge">ddjvu</code> is contained in the Debian package <code class="language-plaintext highlighter-rouge">djvulibre-bin</code>, which should be manually installed. This just solves the problem.</p>

<p>After enabling our interested preview plugins, we can see the video thumbnails in both Dolphin and Gwenview.</p>

<p><img src="/figures/2022-12-19_15-12-21-video-thumbnails-in-dolphin.png" alt="img" title="Preview of videos in Dolphin" /></p>

<p><img src="/figures/2022-12-19_15-12-59-video-thumbnails-in-gwenview.png" alt="img" title="Preview of videos in Gwenview" /></p>

<p>This is the preview of PDF and DjVu files in Dolphin.</p>

<p><img src="/figures/2024-06-11_10-07-18-djvu-preview-in-dolphin.png" alt="img" title="Preview of DjVu files in Dolphin" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="KDE" /><category term="Dolphin" /><category term="Gwenview" /><summary type="html"><![CDATA[Install the following Debian packages and enable them in the “Preview” tab within Dolphin’s “General” configuration page.]]></summary></entry><entry><title type="html">Display LaTeX math equations in source code comment in Emacs</title><link href="https://jihuan-tian.github.io/computer/2024/05/16/display-latex-math-equations-in-source-code-comment-in-emacs.html" rel="alternate" type="text/html" title="Display LaTeX math equations in source code comment in Emacs" /><published>2024-05-16T00:00:00+08:00</published><updated>2024-05-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/16/display-latex-math-equations-in-source-code-comment-in-emacs</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/16/display-latex-math-equations-in-source-code-comment-in-emacs.html"><![CDATA[<p>Define a string filter function to remove the leading comment symbols. Then LaTeX equations written in the Doxygen format can be rendered in Emacs by the <code class="language-plaintext highlighter-rouge">texfrag</code> extension.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">texfrag-cpp-filter</span> <span class="p">(</span><span class="nv">str</span><span class="p">)</span>
  <span class="s">"`texfrag-cpp-filter' filtering STR for C++ programming"</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">str</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> 
             <span class="s">"^ *\\(/\\* *\\)\\|\\(\\* *\\)\\|\\(// *\\)"</span> 
             <span class="s">""</span> <span class="nv">str</span><span class="p">)))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">texfrag-octave-filter</span> <span class="p">(</span><span class="nv">str</span><span class="p">)</span>
  <span class="s">"`texfrag-octave-filter' filtering STR for Octave programming"</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">str</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"^ *#+"</span> <span class="s">""</span> <span class="nv">str</span><span class="p">)))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/texfrag-cpp</span> <span class="p">()</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">texfrag-equation-filter</span> <span class="nf">#'</span><span class="nv">texfrag-cpp-filter</span><span class="p">))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/texfrag-octave</span> <span class="p">()</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">texfrag-equation-filter</span> <span class="nf">#'</span><span class="nv">texfrag-octave-filter</span><span class="p">))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/texfrag-default</span><span class="p">()</span>
  <span class="p">(</span><span class="nv">interactive</span><span class="p">)</span>
  <span class="p">(</span><span class="k">setq</span> <span class="nv">texfrag-equation-filter</span> <span class="nf">#'</span><span class="nb">identity</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/figures/2024-05-16_13-24-21-texfrag-for-programming@emacs.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="LaTeX" /><summary type="html"><![CDATA[Define a string filter function to remove the leading comment symbols. Then LaTeX equations written in the Doxygen format can be rendered in Emacs by the texfrag extension.]]></summary></entry><entry><title type="html">Convert Org mode contents to markdown</title><link href="https://jihuan-tian.github.io/computer/2024/05/13/convert-org-mode-contents-to-markdown.html" rel="alternate" type="text/html" title="Convert Org mode contents to markdown" /><published>2024-05-13T00:00:00+08:00</published><updated>2024-05-13T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/13/convert-org-mode-contents-to-markdown</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/13/convert-org-mode-contents-to-markdown.html"><![CDATA[<p>According to my experience, a feasible work flow for exporting Org mode contents including math equations to markdown (either used for GitHub Pages or Gitlab) needs three steps.</p>

<ol>
  <li>Export the Org mode contents to a LaTeX file.</li>
  <li>
    <p>Convert the LaTeX file to GFM markdown format using <code class="language-plaintext highlighter-rouge">pandoc</code>, which also handles the citation of bibliography.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pandoc -f latex -t gfm --bibliography &lt;bibtex-file&gt; -o &lt;markdown-file&gt; &lt;latex-file&gt;
</code></pre></div>    </div>

    <p><span class="timestamp-wrapper"><span class="timestamp">&lt;2024-06-15 Sat&gt; </span></span> N.B. <code class="language-plaintext highlighter-rouge">gfm</code> should not be used in Debian Bookworm, otherwise math symbols will not be exported as LaTeX but as UTF-8 characters. Use <code class="language-plaintext highlighter-rouge">markdown</code> instead.</p>
  </li>
  <li>
    <p>Make LaTeX equations in the markdown file suitable for the <code class="language-plaintext highlighter-rouge">kramdown</code> grammar adopted by Jekyll used in GitHub Pages and <code class="language-plaintext highlighter-rouge">KaTeX</code> provided by Gitlab.</p>

    <p>With <code class="language-plaintext highlighter-rouge">kramdown</code>, both inline and display math equations should be wrapped between double-dollars, except that the double-dollars for display equations should be on independent lines and separated from surrounding paragraphs with additional empty lines.</p>

    <p>With <code class="language-plaintext highlighter-rouge">KaTeX</code> in Gitlab, for best compatibility of equation rendering, inline equations should be placed within <code class="language-plaintext highlighter-rouge">$`...`$</code> instead of <code class="language-plaintext highlighter-rouge">$...$</code>, while display equations should be wrapped in the source code block</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```math
</code></pre></div>    </div>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    
instead of double-dollars.
    
I use Awk script to help me with the above processing.
    
-   For GitHub Pages
        
    ```awk
    {
        # Replace inline equation wrappers.
        gsub(/\\\(/, "$$");
        gsub(/\\\)/, "$$");
        
        # Replace the beginning display equation wrapper.
        if (match($0, /^(\s*)\\\[\s*$/, match_spaces) != 0) {
            # If there is only \[ in the line.
        
            # Get the prefixed spaces to ensure correct indentation.
            prefix_spaces = match_spaces[1];
            $0 = gensub(/^(\s*)\\\[\s*$/, "\n" prefix_spaces "$$", 1);
        }
        else if (match($0, /^(\s*)\\\[\s*/, match_spaces) != 0) {
            # If \[ is in a same line with the equation text.
        
            # Get the prefixed spaces to ensure correct indentation.
            prefix_spaces = match_spaces[1];
            $0 = gensub(/^(\s*)\\\[\s*/, "\n\\1$$\n" prefix_spaces, 1);
        }
        
        # Replace the ending display equation wrapper.
        if (match($0, /^\s*\\\]\s*$/) != 0) {
            # If there is only \] in the line.
            $0 = gensub(/^\s*\\\]\s*$/, prefix_spaces "$$\n", 1);
            prefix_spaces = "";
        }
        else if (match($0, /\\\]\s*/) != 0) {
            # If \] is in a same line with the equation text, add prefix spaces first to
            # this line. Then move \] to the new line.
            $0 = gensub(/^(.*\\\]\s*)$/, prefix_spaces "\\1", 1);
            $0 = gensub(/\\\]\s*/, "\n" prefix_spaces "$$\n", 1);
            prefix_spaces = "";
        }
        
        # Process bibliography item.
        $0 = gensub(/^(&lt;div id="ref-.+)&gt;$/, "\\1 markdown=\"1\"&gt;", 1);
        
        print prefix_spaces $0;
    }
    ```
-   For Gitlab
        
    ```awk
    {
        # Replace inline equation wrappers.
        gsub(/\\\(/, "$`");
        gsub(/\\\)/, "`$");
        
        # Replace the beginning display equation wrapper.
        if (match($0, /^(\s*)\\\[\s*$/, match_spaces) != 0) {
            # If there is only \[ in the line.
        
            # Get the prefixed spaces to ensure correct indentation.
            prefix_spaces = match_spaces[1];
            $0 = gensub(/^(\s*)\\\[\s*$/, "\n" prefix_spaces "```math", 1);
        }
        else if (match($0, /^(\s*)\\\[\s*/, match_spaces) != 0) {
            # If \[ is in a same line with the equation text.
        
            # Get the prefixed spaces to ensure correct indentation.
            prefix_spaces = match_spaces[1];
            $0 = gensub(/^(\s*)\\\[\s*/, "\n\\1```math\n" prefix_spaces, 1);
        }
        
        # Replace the ending display equation wrapper.
        if (match($0, /^\s*\\\]\s*$/) != 0) {
            # If there is only \] in the line.
            $0 = gensub(/^\s*\\\]\s*$/, prefix_spaces "```\n", 1);
            prefix_spaces = "";
        }
        else if (match($0, /\\\]\s*/) != 0) {
            # If \] is in a same line with the equation text, add prefix spaces first to
            # this line. Then move \] to the new line.
            $0 = gensub(/^(.*\\\]\s*)$/, prefix_spaces "\\1", 1);
            $0 = gensub(/\\\]\s*/, "\n" prefix_spaces "```\n", 1);
            prefix_spaces = "";
        }
        
        # Process bibliography item.
        $0 = gensub(/^(&lt;div id="ref-.+)&gt;$/, "\\1 markdown=\"1\"&gt;", 1);
        
        print prefix_spaces $0;
    }
    ```
    
Then execute the command:
    
```text
gawk -i inplace -f &lt;awk-script&gt; &lt;markdown-file&gt;
</code></pre></div>    </div>
  </li>
</ol>

<p>There is still the problem that math environments such as theorem, definition, proposition, etc. cannot be exported to markdown preserving the original format.</p>

<p>Backlinks: <a href="/computer/2024/06/22/definitive-solution-for-converting-latex-in-org-mode-to-markdown.html">《Definitive solution for converting LaTeX in Org mode to markdown》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Awk" /><category term="Markdown" /><category term="Org-mode" /><summary type="html"><![CDATA[According to my experience, a feasible work flow for exporting Org mode contents including math equations to markdown (either used for GitHub Pages or Gitlab) needs three steps.]]></summary></entry><entry><title type="html">Upgrade Debian from Bullseye to Bookworm</title><link href="https://jihuan-tian.github.io/computer/2024/05/13/upgrade-debian-from-bullseye-to-bookworm.html" rel="alternate" type="text/html" title="Upgrade Debian from Bullseye to Bookworm" /><published>2024-05-13T00:00:00+08:00</published><updated>2024-05-13T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/13/upgrade-debian-from-bullseye-to-bookworm</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/13/upgrade-debian-from-bullseye-to-bookworm.html"><![CDATA[<ul>
  <li><a href="#org1497414">Basic information</a></li>
  <li><a href="#org8d660de">After <code class="language-plaintext highlighter-rouge">sudo apt upgrade</code></a></li>
  <li><a href="#orge6a3dd4">During <code class="language-plaintext highlighter-rouge">sudo apt dist-upgrade</code></a></li>
  <li><a href="#orgc17398d">After <code class="language-plaintext highlighter-rouge">sudo apt dist-upgrade</code></a>
    <ul>
      <li><a href="#orgd24ea13">Anki</a></li>
      <li><a href="#org98d1ed9">Emacs</a></li>
      <li><a href="#org7dd4b3a">Python</a></li>
      <li><a href="#orgc835d28">Jekyll</a></li>
      <li><a href="#org3ee59af">Texlive based LaTeX</a></li>
      <li><a href="#org23d9778">GNU Octave</a></li>
      <li><a href="#org7a5f4ff">KDE Plasma desktop</a></li>
      <li><a href="#orgaaf499c">PulseAudio</a></li>
      <li><a href="#org4f3d147">Wacom</a></li>
      <li><a href="#orgdb17c7c">Video player</a></li>
    </ul>
  </li>
</ul>

<p>Upgrading a Linux system is always a non-trivial task. In the following, I’ll list the phenomena and problems I met during upgrading Debian from Bullseye to Bookworm.</p>

<p><a id="org1497414"></a></p>

<h1 id="basic-information">Basic information</h1>

<p>Debian 12 Bookworm was released on 2023-06-10. Up to now, it includes the following key updates:</p>

<ul>
  <li>Linux kernel 6.1 series</li>
  <li>Cryptsetup 2.6</li>
  <li>GNU Compiler Collection 12.2</li>
  <li>The GNU C Library 2.36</li>
  <li>LLVM/Clang toolchain 13.0.1, 14.0 (default), and 15.0.6</li>
  <li>Emacs 28.2</li>
  <li>CMake 3.25.1: <em>However, this is not enough for C++20.</em></li>
  <li>GNU Octave 7.3.0</li>
  <li>Python 3.11</li>
  <li>Ruby 3.1</li>
  <li>Julia 1.5.3</li>
  <li>LibreOffice 7.5.3.2</li>
</ul>

<p><a id="org8d660de"></a></p>

<h1 id="after-sudo-apt-upgrade">After <code class="language-plaintext highlighter-rouge">sudo apt upgrade</code></h1>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cannot load module /usr/lib/x86_64-linux-gnu/gtk-3.0/3.0.0/immodules/im-fcitx.so: GModule (/usr/lib/x86_64-linux-gnu/gtk-3.0/3.0.0/immodules/im-fcitx.so) initialization check failed: GLib version too old (micro mismatch)
/usr/lib/x86_64-linux-gnu/gtk-3.0/3.0.0/immodules/im-fcitx.so does not export GTK+ IM module API: GModule (/usr/lib/x86_64-linux-gnu/gtk-3.0/3.0.0/immodules/im-fcitx.so) initialization check failed: GLib version too old (micro mismatch)
Processing triggers for libgtk2.0-0:amd64 (2.24.33-2) ...
Cannot load module /usr/lib/x86_64-linux-gnu/gtk-2.0/2.10.0/immodules/im-fcitx.so: GModule (/usr/lib/x86_64-linux-gnu/gtk-2.0/2.10.0/immodules/im-fcitx.so) initialization check failed: GLib version too old (micro mismatch)
/usr/lib/x86_64-linux-gnu/gtk-2.0/2.10.0/immodules/im-fcitx.so does not export GTK+ IM module API: GModule (/usr/lib/x86_64-linux-gnu/gtk-2.0/2.10.0/immodules/im-fcitx.so) initialization check failed: GLib version too old (micro mismatch)
</code></pre></div></div>

<p><a id="orge6a3dd4"></a></p>

<h1 id="during-sudo-apt-dist-upgrade">During <code class="language-plaintext highlighter-rouge">sudo apt dist-upgrade</code></h1>

<ul>
  <li>
    <p>The following packages were removed but some other packages still had dependencies on them. However, after <code class="language-plaintext highlighter-rouge">dist-upgrade</code> was finished, the following packages were reinstalled automatically.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Removing texlive-bibtex-extra (2020.20210202-3) ...
Removing texlive-fonts-extra (2020.20210202-3) ...
dpkg: texlive-extra-utils: dependency problems, but removing anyway as you requested:
 doxygen-latex depends on texlive-extra-utils.
    
Removing texlive-extra-utils (2020.20210202-3) ...
dpkg: texlive-font-utils: dependency problems, but removing anyway as you requested:
 latex-cjk-common depends on texlive-font-utils (&gt;= 2007.dfsg.2-1).
 doxygen-latex depends on texlive-font-utils.
    
Removing texlive-font-utils (2020.20210202-3) ...
dpkg: texlive-binaries
    
Removing texlive-latex-base (2020.20210202-3)
    
dpkg: texlive-latex-extra: dependency problems, but removing anyway as you requested:
    
dpkg: texlive-pictures: dependency problems, but removing anyway as you requested:
</code></pre></div>    </div>
  </li>
</ul>

<p><a id="orgc17398d"></a></p>

<h1 id="after-sudo-apt-dist-upgrade">After <code class="language-plaintext highlighter-rouge">sudo apt dist-upgrade</code></h1>

<p><a id="orgd24ea13"></a></p>

<h2 id="anki">Anki</h2>

<p>The GUI interface of Anki (2.1.49) does not show anything.</p>

<p>Solution: upgrade to Anki 24.04.1 with Qt6. Install Debian packages <code class="language-plaintext highlighter-rouge">qt6-base-dev</code> and <code class="language-plaintext highlighter-rouge">qt6-base-dev-tools</code> to acquire Qt6.</p>

<p><a id="org98d1ed9"></a></p>

<h2 id="emacs">Emacs</h2>

<ul>
  <li>
    <p>LaTeX fragments previewed in Org mode become extremely large. Changing the scale factor from 2.5 to 1.5 solves the problem. The configuration is stored in the variable <code class="language-plaintext highlighter-rouge">org-format-latex-options</code>:</p>

    <div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">custom-set-variables</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">org-format-latex-options</span>
   <span class="o">'</span><span class="p">(</span><span class="ss">:foreground</span> <span class="nv">default</span> <span class="ss">:background</span> <span class="nv">default</span> <span class="ss">:scale</span> <span class="mf">1.5</span> <span class="ss">:html-foreground</span> <span class="s">"Black"</span> <span class="ss">:html-background</span> <span class="s">"Transparent"</span> <span class="ss">:html-scale</span> <span class="mf">1.0</span> <span class="ss">:matchers</span>
                 <span class="p">(</span><span class="s">"begin"</span> <span class="s">"$1"</span> <span class="s">"$"</span> <span class="s">"$$"</span> <span class="s">"\\("</span> <span class="s">"\\["</span><span class="p">))))</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Mixed installation of Org mode error</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Org mode version 9.5.5 (release_9.5.5 @ mixed installation! /usr/share/emacs/28.2/lisp/org/ and /usr/share/emacs/site-lisp/elpa/org-9.4/)
</code></pre></div>    </div>

    <p>The former version <code class="language-plaintext highlighter-rouge">/usr/share/emacs/28.2/lisp/org/</code> has actually been installed via the Debian package <code class="language-plaintext highlighter-rouge">elpa-org</code>, which further depends on the package <code class="language-plaintext highlighter-rouge">org-mode</code>. From this we can see that <code class="language-plaintext highlighter-rouge">org-mode</code> has been integrated into Emacs itself instead of an external package.</p>

    <p>Solution</p>

    <ul>
      <li>Remove <code class="language-plaintext highlighter-rouge">/usr/share/emacs/site-lisp/elpa/org-9.4/</code>, which is obviously obsolete.</li>
      <li>Install the Debian package <code class="language-plaintext highlighter-rouge">elpa-org-contrib</code>, which contains <code class="language-plaintext highlighter-rouge">ox-freemind</code> and <code class="language-plaintext highlighter-rouge">ox-taskjuggler</code>. I have been using them to export Org mode contents to Freeplane mind map as well as TaskJuggler for project management. Both of them are enabled in the variable <code class="language-plaintext highlighter-rouge">org-export-backends</code>. The package <code class="language-plaintext highlighter-rouge">elpa-org-contrib</code> is installed to the folder <code class="language-plaintext highlighter-rouge">/usr/share/emacs/site-lisp/elpa/org-contrib-0.4</code>.</li>
    </ul>
  </li>
  <li>
    <p>Each time when I export Org mode contents including LaTeX source code blocks, there will be an prompt about whether each of them should be executed.</p>

    <p>Solution: add the header arguments <code class="language-plaintext highlighter-rouge">:eval never-export :exports code</code> to the source code block will prevent such prompts.</p>
  </li>
  <li>
    <p>CMake file cannot be automatically formatted by the package <code class="language-plaintext highlighter-rouge">cmake-format</code> anymore.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmake-format errors:
Traceback (most recent call last):
  File "/home/jihuan/.local/bin/cmake-format", line 5, in &lt;module&gt;
    from cmakelang.format.__main__ import main
ModuleNotFoundError: No module named 'cmakelang'
</code></pre></div>    </div>

    <p>This is because the Emacs <code class="language-plaintext highlighter-rouge">cmake-format</code> package relies on the Python package <code class="language-plaintext highlighter-rouge">cmakelang</code>. However, Python has been upgraded from 3.7 to 3.11 during the system upgrade, which means all previously installed Python packages via <code class="language-plaintext highlighter-rouge">pip</code> should be reinstalled.</p>
  </li>
</ul>

<p><a id="org7dd4b3a"></a></p>

<h2 id="python">Python</h2>

<p>As mentioned above, all Python packages should be reinstalled.</p>

<ul>
  <li>If there is a corresponding Debian package in <code class="language-plaintext highlighter-rouge">apt</code>, install that package system-wide.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">cmake-format</code></li>
    </ul>
  </li>
  <li>If there is no such as Debian package, create a virtual environment and install the package within it.</li>
</ul>

<p><a id="orgc835d28"></a></p>

<h2 id="jekyll">Jekyll</h2>

<p>Cannot build blog anymore with the error:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle: cannot execute: required file not found
</code></pre></div></div>

<p>The cause is after system upgrade, <code class="language-plaintext highlighter-rouge">ruby-rubygems</code> is upgraded from version 2.7 to 3.3.15 and all gems should be reinstalled.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">bundler</code></li>
  <li><code class="language-plaintext highlighter-rouge">jekyll</code></li>
  <li><code class="language-plaintext highlighter-rouge">minima</code>: blog style</li>
  <li><code class="language-plaintext highlighter-rouge">kramdown</code>: markdown support</li>
</ul>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem install bundler jekyll minima kramdown
</code></pre></div></div>

<p>Change to the folder of the blog, run <code class="language-plaintext highlighter-rouge">bundle install</code>.</p>

<p><a id="org3ee59af"></a></p>

<h2 id="texlive-based-latex">Texlive based LaTeX</h2>

<p><code class="language-plaintext highlighter-rouge">ntheorem</code> does not work with <code class="language-plaintext highlighter-rouge">hyperref</code> anymore.</p>

<p>Solution: the package option <code class="language-plaintext highlighter-rouge">thref</code> for <code class="language-plaintext highlighter-rouge">ntheorem</code> should not be used.</p>

<p><a id="org23d9778"></a></p>

<h2 id="gnu-octave">GNU Octave</h2>

<p>Compatibility issue of <code class="language-plaintext highlighter-rouge">octave::interpreter::eval_string</code> related functions, when a function without return value is called from C++ via <code class="language-plaintext highlighter-rouge">libinterp</code>.</p>

<p><a id="org7a5f4ff"></a></p>

<h2 id="kde-plasma-desktop">KDE Plasma desktop</h2>

<p>The fast key “Meta” for triggering the Application launcher cannot be disabled in “Shortcuts”.</p>

<p>Solution: remove Application launcher applet and use “Ctrl+mouse right button” to trigger it when showing the desktop.</p>

<p><a id="orgaaf499c"></a></p>

<h2 id="pulseaudio">PulseAudio</h2>

<p>Debian Bookworm uses <code class="language-plaintext highlighter-rouge">pipewire</code> by default, which replaces previous <code class="language-plaintext highlighter-rouge">pulseaudio</code>.</p>

<p>If <code class="language-plaintext highlighter-rouge">pulseaudio</code> is needed, it can be switched back like this.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>systemctl unmask pulseaudio
systemctl --now disable pipewire-pulse
systemctl --now enable pulseaudio.service pulseaudio.socket
systemctl --user restart pulseaudio.service
</code></pre></div></div>

<p><a id="org4f3d147"></a></p>

<h2 id="wacom-tablet">Wacom tablet</h2>

<p>When switching to my predefined fast keys for some applications such as <code class="language-plaintext highlighter-rouge">xournal</code>, there is the “invalid offset” error.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Invalid offset into Wacom Button Actions property.
</code></pre></div></div>

<p>Cause: Button 9 on the Pen Stylus is not available on Debian Bookworm. This can be checked by executing</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom -s get &lt;device-id/device-full-name&gt; all | grep Button
</code></pre></div></div>

<p>Solution: all settings related to Button 9 on the Pen Stylus should be removed from my Wacom scripts.</p>

<p><a id="orgdb17c7c"></a></p>

<h2 id="video-player">Video player</h2>

<p>VLC and mplayer cannot play mkv or mp4. VLC reported the following error.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>VLC could not decode the format "h264" (H264 - MPEG-4 AVC (part10))
</code></pre></div></div>

<p>Solution: install the Debian package <code class="language-plaintext highlighter-rouge">mediastreamer2-plugin-openh264</code>.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Debian" /><summary type="html"><![CDATA[Basic information After sudo apt upgrade During sudo apt dist-upgrade After sudo apt dist-upgrade Anki Emacs Python Jekyll Texlive based LaTeX GNU Octave KDE Plasma desktop PulseAudio Wacom Video player]]></summary></entry><entry><title type="html">ntheorem does not work with hyperref anymore</title><link href="https://jihuan-tian.github.io/computer/2024/05/12/ntheorem-does-not-work-with-hyperref-anymore.html" rel="alternate" type="text/html" title="ntheorem does not work with hyperref anymore" /><published>2024-05-12T00:00:00+08:00</published><updated>2024-05-12T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/12/ntheorem-does-not-work-with-hyperref-anymore</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/12/ntheorem-does-not-work-with-hyperref-anymore.html"><![CDATA[<p>The following code is my previous configuration for loading the <code class="language-plaintext highlighter-rouge">ntheorem</code> package in LaTeX.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">% Mathematical environment</span>
<span class="c">%% standard: enable the standard set of theorems.</span>
<span class="c">%% thmmarks: enable the automatic placement of endmarks, which should be used</span>
<span class="c">%% together with the option amsmath when the amsmath package has been loaded.</span>
<span class="c">%% thref: enables the extended reference features.</span>
<span class="k">\usepackage</span><span class="p">{</span>framed<span class="p">}</span>
<span class="k">\makeatletter</span>
<span class="k">\@</span>ifclassloaded<span class="p">{</span>beamer<span class="p">}{</span><span class="k">\newtheorem</span><span class="p">{</span>remark<span class="p">}{</span>Remark<span class="p">}}</span>
<span class="p">{</span>
  <span class="c">%% When the document class is not beamer, define the following theorem environments.</span>
  <span class="k">\usepackage</span><span class="na">[standard, framed, amsmath, hyperref, thmmarks, thref]</span><span class="p">{</span>ntheorem<span class="p">}</span>
  <span class="c">% Define new mathematical environment.</span>
  <span class="k">\newtheorem</span><span class="p">{</span>mynote<span class="p">}{</span>Note<span class="p">}</span>
  <span class="k">\newtheorem</span><span class="p">{</span>mycomment<span class="p">}{</span>Comment<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>After upgrading to Debian Bookworm with Texlive version 2022.20230122, my LaTeX documents could not be compiled successfully with the error as below. In addition, all hyperlinks for cross references were lost.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: Argument of \@fifthoffive has an extra }.

--- TeX said ---
&lt;inserted text&gt; 
                \par 
l.5595       \State {\hyperref[algo:mmr]{MMR}
                                             ($M, M, M_1, M_2$)}
--- HELP ---
From the .log file...

I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.
</code></pre></div></div>

<p>Initially, I though this was caused by the <code class="language-plaintext highlighter-rouge">hyperref</code> package (included in the <code class="language-plaintext highlighter-rouge">texlive-latex-base</code> Debian package), since it often conflicts with some other packages and the usual solution is to change their loading order. However, after I downloaded its latest version as a TDS zip file (it is convenient to use the TDS zip file format of a LaTeX package, because it can be installed by simply unzip the file to the desired <code class="language-plaintext highlighter-rouge">texmf</code> root folder.), new problems arose.</p>

<p>After a morning of trial-and-error, the culprit is the <code class="language-plaintext highlighter-rouge">thref</code> option used with the <code class="language-plaintext highlighter-rouge">ntheorem</code> package (included in the <code class="language-plaintext highlighter-rouge">texlive-latex-extra</code> package). Removing it solves the problem.</p>

<p><em>Lessons learned: for a beginner or even an experienced user (but not a developer), the error messages reported by LaTeX interpreter are even more esoteric than those from the C++ compiler.</em></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LaTeX" /><summary type="html"><![CDATA[The following code is my previous configuration for loading the ntheorem package in LaTeX.]]></summary></entry><entry><title type="html">Use lstlisting environments for formatting source code in Beamer</title><link href="https://jihuan-tian.github.io/computer/2024/05/11/use-lstlisting-environments-for-formatting-source-code-in-beamer.html" rel="alternate" type="text/html" title="Use lstlisting environments for formatting source code in Beamer" /><published>2024-05-11T00:00:00+08:00</published><updated>2024-05-11T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/11/use-lstlisting-environments-for-formatting-source-code-in-beamer</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/11/use-lstlisting-environments-for-formatting-source-code-in-beamer.html"><![CDATA[<p>My old <code class="language-plaintext highlighter-rouge">lstlisting</code> setting related to source code style is as below.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\lstset</span><span class="p">{</span>
  basicstyle=<span class="k">\ttfamily</span>,
  keywordstyle=<span class="k">\color</span><span class="p">{</span>blue<span class="p">}</span><span class="k">\bfseries</span>,
  commentstyle=<span class="k">\color</span><span class="p">{</span>comment-green<span class="p">}</span>,
  stringstyle=<span class="k">\color</span><span class="p">{</span>magenta<span class="p">}</span>,
  columns=fullflexible,
  frame=single,
  breaklines=true,
  postbreak=<span class="k">\mbox</span><span class="p">{</span><span class="k">\textcolor</span><span class="p">{</span>red<span class="p">}{$</span><span class="nv">\hookrightarrow</span><span class="p">$}</span><span class="k">\space</span><span class="p">}</span>,
<span class="p">}</span>
</code></pre></div></div>

<p>We can see an <code class="language-plaintext highlighter-rouge">mbox</code> (which can also be <code class="language-plaintext highlighter-rouge">hbox</code>) is used as the <code class="language-plaintext highlighter-rouge">postbreak</code> for line wrapping. When this setting is used in Beamer, there will be a compilation error, which provides no useful information about the cause.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: Missing number, treated as zero.

--- TeX said ---
&lt;to be read again&gt; 
                   \kern 
l.23     auto 
              obj_func =
</code></pre></div></div>

<p>Solution: define a new box as below.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\newsavebox\redarrow</span>
<span class="k">\sbox\redarrow</span><span class="p">{</span><span class="k">\raisebox</span><span class="p">{</span>0ex<span class="p">}</span>[0ex][0ex]<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span><span class="k">\color</span><span class="p">{</span>red<span class="p">}</span><span class="k">\hookrightarrow\space</span><span class="p">}}}</span>
<span class="k">\lstset</span><span class="p">{</span>postbreak=<span class="k">\usebox\redarrow</span><span class="p">}</span>
</code></pre></div></div>

<p>My final configuration is like this, which depends on the document class type, since the said problem does not appear when the document class is different from <code class="language-plaintext highlighter-rouge">beamer</code>, such as <code class="language-plaintext highlighter-rouge">article</code>.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\makeatletter</span>
<span class="k">\@</span>ifclassloaded<span class="p">{</span>beamer<span class="p">}{</span>
  <span class="k">\newsavebox\redarrow</span>
  <span class="k">\sbox\redarrow</span><span class="p">{</span><span class="k">\raisebox</span><span class="p">{</span>0ex<span class="p">}</span>[0ex][0ex]<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span><span class="k">\color</span><span class="p">{</span>red<span class="p">}</span><span class="k">\hookrightarrow\space</span><span class="p">}}}</span>
  <span class="k">\lstset</span><span class="p">{</span>postbreak=<span class="k">\usebox\redarrow</span><span class="p">}</span>
<span class="p">}{</span><span class="k">\lstset</span><span class="p">{</span>postbreak=<span class="k">\hbox</span><span class="p">{</span><span class="k">\textcolor</span><span class="p">{</span>red<span class="p">}{$</span><span class="nv">\hookrightarrow</span><span class="p">$}</span><span class="k">\space</span><span class="p">}}}</span>
<span class="k">\makeatother</span>
</code></pre></div></div>

<p>Meanwhile, there should be no indent for the source code within a <code class="language-plaintext highlighter-rouge">lstlisting</code> environment, because it formats the source code in a verbatim way. However, this can be remedied by manually specifying the amount of indent in the <code class="language-plaintext highlighter-rouge">gobble</code> option of the <code class="language-plaintext highlighter-rouge">lstlisting</code> environment, such as</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{lstlisting}</span>[gobble=2, language=lang]
  #include &lt;iostream&gt;

  int main()
  <span class="p">{</span>
    return 0;
  <span class="p">}</span>
<span class="nt">\end{lstlisting}</span>
</code></pre></div></div>

<p>We can also use the package <code class="language-plaintext highlighter-rouge">lstautogobble</code> to automatically detect the indent in the source code. To enable it, add <code class="language-plaintext highlighter-rouge">autogobble=true</code> to the arguments of the <code class="language-plaintext highlighter-rouge">\lstset</code> macro.</p>

<p><strong>CAVEAT: when <code class="language-plaintext highlighter-rouge">lstlisting</code> environments are used in a frame, <code class="language-plaintext highlighter-rouge">fragile</code> or <code class="language-plaintext highlighter-rouge">containverbatim</code> should be added to the frame property list.</strong> For example,</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{lstlisting}</span>[autogobble=true, language=C++]
  auto obj<span class="p">_</span>func =
    [this, <span class="p">&amp;</span>opt<span class="p">_</span>control, <span class="p">&amp;</span>opt<span class="p">_</span>variables, <span class="p">&amp;</span>opt<span class="p">_</span>parameters, <span class="p">&amp;</span>factors](
      const std::vector&lt;double&gt; <span class="p">&amp;</span>x, std::vector&lt;double&gt; <span class="p">&amp;</span>grad) -&gt; double <span class="p">{}</span>;
<span class="nt">\end{lstlisting}</span>
</code></pre></div></div>

<p>Otherwise, the following error appears.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: Paragraph ended before \lstag@countleadingspaces was complete.

--- TeX said ---
&lt;to be read again&gt; 
                   \par 
l.141 \end{frame}
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LaTeX" /><category term="Beamer" /><category term="lstlistings" /><summary type="html"><![CDATA[My old lstlisting setting related to source code style is as below.]]></summary></entry><entry><title type="html">Cannot send encrypted email from Thunderbird</title><link href="https://jihuan-tian.github.io/computer/2024/05/01/cannot-send-encrypted-email-from-thunderbird.html" rel="alternate" type="text/html" title="Cannot send encrypted email from Thunderbird" /><published>2024-05-01T00:00:00+08:00</published><updated>2024-05-01T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/05/01/cannot-send-encrypted-email-from-thunderbird</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/05/01/cannot-send-encrypted-email-from-thunderbird.html"><![CDATA[<p>Saving draft and receiving emails are normal, but encrypted emails cannot be sent out via Hotmail (even though after turning off the digital signature, they can be sent). The configuration for the SMTP server is correct:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Server name: smtp.office365.com:587
User name: full email address
Connection security: STARTTLS
Authentication method: OAuth2
</code></pre></div></div>

<p>Initially, I thought the problem was caused by Microsoft authorization, since two weeks ago, a similar phenomenon occurred that neither normal nor encrypted emails could be sent. That problem was then solved by deleting saved password and cookies, deleting and recreating the email account in Thunderbird. This time, however, the cause is actually due to my updating the expiry date of the GPG keys once imported into Thunderbird.</p>

<p>About three weeks ago, after updating the expiry date using <code class="language-plaintext highlighter-rouge">gpg</code>, I manually uploaded the public key to a key server, since uploading directly via <code class="language-plaintext highlighter-rouge">gpg</code> command was not successful. Then in Thunderbird key manager, I refreshed the key and I could actually see the new expiry date. However, according to my current guess, this operation can only update the public key information not the private key stored in Thunderbird.</p>

<p>Hence, the final solution is to re-import public and private keys generated by <code class="language-plaintext highlighter-rouge">gpg</code> into Thunderbird, which override the existing ones. Then everything returns to normal again.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Thunderbird" /><category term="gpg" /><summary type="html"><![CDATA[Saving draft and receiving emails are normal, but encrypted emails cannot be sent out via Hotmail (even though after turning off the digital signature, they can be sent). The configuration for the SMTP server is correct:]]></summary></entry><entry><title type="html">Install and start Steam on Debian Linux</title><link href="https://jihuan-tian.github.io/computer/2024/04/06/install-and-start-steam-on-debian-linux.html" rel="alternate" type="text/html" title="Install and start Steam on Debian Linux" /><published>2024-04-06T00:00:00+08:00</published><updated>2024-04-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/04/06/install-and-start-steam-on-debian-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/04/06/install-and-start-steam-on-debian-linux.html"><![CDATA[<ol>
  <li>Download and install the <code class="language-plaintext highlighter-rouge">deb</code> file from Steam’s official website.</li>
  <li>After installation of the <code class="language-plaintext highlighter-rouge">deb</code> file and start steam, it says some additional packages (most of them are i386 related) should be installed. Confirm and proceed, steam will start normally. However, for the next run, it still complains lacking those packages. Actually, these packages should be manually installed via <code class="language-plaintext highlighter-rouge">apt-get</code> or <code class="language-plaintext highlighter-rouge">aptitude</code>.</li>
  <li>
    <p>Because I’m using 4K monitor, to enable high DPI support, steam should be started with the command line option <code class="language-plaintext highlighter-rouge">-forcedesktopscaling</code> according to <a href="https://www.dedoimedo.com/computers/steam-linux-4k-scaling.html">here</a>. For example,</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/bin/steam -forcedesktopscaling=2 %U
</code></pre></div>    </div>

    <p>Using <code class="language-plaintext highlighter-rouge">kmenuedit</code>, the item for steam in the start menu can be modified accordingly.</p>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="游戏" /><summary type="html"><![CDATA[Download and install the deb file from Steam’s official website. After installation of the deb file and start steam, it says some additional packages (most of them are i386 related) should be installed. Confirm and proceed, steam will start normally. However, for the next run, it still complains lacking those packages. Actually, these packages should be manually installed via apt-get or aptitude. Because I’m using 4K monitor, to enable high DPI support, steam should be started with the command line option -forcedesktopscaling according to here. For example, /usr/bin/steam -forcedesktopscaling=2 %U Using kmenuedit, the item for steam in the start menu can be modified accordingly.]]></summary></entry><entry><title type="html">Noise reduction for recording using PulseAudio</title><link href="https://jihuan-tian.github.io/computer/2024/04/06/noise-reduction-for-recording-using-pulseaudio.html" rel="alternate" type="text/html" title="Noise reduction for recording using PulseAudio" /><published>2024-04-06T00:00:00+08:00</published><updated>2024-04-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/04/06/noise-reduction-for-recording-using-pulseaudio</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/04/06/noise-reduction-for-recording-using-pulseaudio.html"><![CDATA[<p>When I perform sound recording using the microphone on my Logitech H151 headset as well as the default HDA Intel PCH sound card on my PC, there is too much noise. Then I use the following steps to reduce the noise level.</p>

<ul>
  <li>
    <p>Check if <code class="language-plaintext highlighter-rouge">module-echo-cancel</code> is loaded by <code class="language-plaintext highlighter-rouge">PulseAudio</code>. Usually, it is not enabled by default. Therefore, the following command will return nothing.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pacmd list-modules | <span class="nb">grep </span>module-echo-cancel
</code></pre></div>    </div>
  </li>
  <li>
    <p>At the moment, there are two audio input devices on my PC. Besides the input of the said sound card HDA Intel PCH, the other is the microphone in my Logitech C930C webcam. Therefore, I need to know the ALSA device name of HDA Intel PCH’s input by executing this command:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pacmd list-sources  | <span class="nb">grep </span>name: | <span class="nb">grep </span>input
</code></pre></div>    </div>
  </li>
  <li>
    <p>Add the following lines in <code class="language-plaintext highlighter-rouge">/etc/pulseaudio/default.pa</code> to enable echo and noise cancellation for HDA Intel PCH.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## When analog_gain_control=1, there will be distortion. Therefore, set it to 0.
## When digital_gain_control=1, automatic gain control is done in post processing by CPU.
.ifexists module-echo-cancel.so
load-module module-echo-cancel source_master=alsa_input.pci-0000_00_1b.0.analog-stereo aec_method=webrtc aec_args="analog_gain_control=0 digital_gain_control=1" source_name=echoCancel_source sink_name=echoCancel_sink
.endif
    
### Make some devices default
## set-default-sink echoCancel_sink
set-default-source echoCancel_source
</code></pre></div>    </div>

    <p>N.B.</p>

    <ol>
      <li>In <code class="language-plaintext highlighter-rouge">PulseAudio</code>, a <code class="language-plaintext highlighter-rouge">source</code> is a device that can emit digital audio stream to <code class="language-plaintext highlighter-rouge">PulseAudio</code>, e.g. microphone, line input, or some entity which is not a physical audio device but can still generate the audio stream. On the other hand, a <code class="language-plaintext highlighter-rouge">sink</code> is a device that can output digital audio stream from <code class="language-plaintext highlighter-rouge">PulseAudio</code>, such as speaker signal, headphone output, etc. Still, a <code class="language-plaintext highlighter-rouge">sink</code> may not be a physical audio device.</li>
      <li><code class="language-plaintext highlighter-rouge">source_master</code> in the above configuration specifies the sound <code class="language-plaintext highlighter-rouge">source</code>, which is the ALSA input device in the HDA Intel PCH sound card.</li>
      <li><code class="language-plaintext highlighter-rouge">source_name</code> in the above configuration is the <code class="language-plaintext highlighter-rouge">PulseAudio</code> device name. The audio stream from this device will be filtered to a small noise level.</li>
    </ol>
  </li>
  <li>
    <p>Restart <code class="language-plaintext highlighter-rouge">PulseAudio</code> server</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pulseaudio <span class="nt">-k</span>
pulseaudio <span class="nt">--start</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>References</p>
    <ul>
      <li><a href="https://wiki.archlinux.org/title/PulseAudio">https://wiki.archlinux.org/title/PulseAudio</a></li>
      <li><a href="https://www.linuxuprising.com/2020/09/how-to-enable-echo-noise-cancellation.html">https://www.linuxuprising.com/2020/09/how-to-enable-echo-noise-cancellation.html</a></li>
      <li>About beamforming
        <ul>
          <li><a href="https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#index45h3">https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/Modules/#index45h3</a></li>
          <li><a href="https://arunraghavan.net/2016/06/beamforming-in-pulseaudio/">https://arunraghavan.net/2016/06/beamforming-in-pulseaudio/</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="audio" /><category term="multimedia" /><category term="PulseAudio" /><summary type="html"><![CDATA[When I perform sound recording using the microphone on my Logitech H151 headset as well as the default HDA Intel PCH sound card on my PC, there is too much noise. Then I use the following steps to reduce the noise level.]]></summary></entry><entry><title type="html">Use sox to further remove noise in the microphone recording</title><link href="https://jihuan-tian.github.io/computer/2024/04/06/use-sox-to-further-remove-noise-in-the-microphone-recording.html" rel="alternate" type="text/html" title="Use sox to further remove noise in the microphone recording" /><published>2024-04-06T00:00:00+08:00</published><updated>2024-04-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/04/06/use-sox-to-further-remove-noise-in-the-microphone-recording</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/04/06/use-sox-to-further-remove-noise-in-the-microphone-recording.html"><![CDATA[<ul>
  <li>Install Debian package <code class="language-plaintext highlighter-rouge">sox</code>.</li>
  <li>
    <p>Load the kernel module <code class="language-plaintext highlighter-rouge">snd_aloop</code> to create an ALSA loopback device.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo modprobe snd_aloop
</code></pre></div>    </div>
  </li>
  <li>
    <p>Record a noise and generate noise profile using <code class="language-plaintext highlighter-rouge">sox</code>.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sox noise-from-headset.wav -n noiseprof noise-from-headset.prof
</code></pre></div>    </div>
  </li>
  <li>
    <p>Use <code class="language-plaintext highlighter-rouge">pacmd</code> to get the device name of the newly created loopback device for output, which should be <code class="language-plaintext highlighter-rouge">alsa_output.platform-snd_aloop.0.analog-stereo</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pactl list | <span class="nb">grep</span> <span class="nt">-E</span> <span class="nt">-A2</span> <span class="s1">'(Source|Sink) #'</span> | <span class="nb">grep</span> <span class="s1">'Name: '</span> | <span class="nb">grep</span> <span class="nt">-v</span> monitor | <span class="nb">cut</span> <span class="nt">-d</span><span class="s2">" "</span> <span class="nt">-f2</span> | <span class="nb">grep </span>output.<span class="k">*</span>aloop
</code></pre></div>    </div>
  </li>
  <li>
    <p>Pipe the audio stream from the microphone through <code class="language-plaintext highlighter-rouge">sox</code>.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pacat -r -d echoCancel_source --latency=1msec | sox -v 0.8 -b 16 -c 2 -e signed -t raw -r 48000 - -C 0.5 -b 16 -c 2 -e signed -r 48000 -t raw - noisered /home/jihuan/文档/Documents/computer/linux/experiment/2024-04-03-reduce-noise-from-microphone/noise-from-headset.prof 0.21 | pacat -p -d alsa_output.platform-snd_aloop.0.analog-stereo --latency=1msec
</code></pre></div>    </div>
  </li>
  <li>
    <p>Record in Audacity or some other tool using the loopback ALSA input source <code class="language-plaintext highlighter-rouge">alsa_input.platform-snd_aloop.0.analog-stereo</code>. This device name can be obtained by running this command:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pactl list | <span class="nb">grep</span> <span class="nt">-E</span> <span class="nt">-A2</span> <span class="s1">'(Source|Sink) #'</span> | <span class="nb">grep</span> <span class="s1">'Name: '</span> | <span class="nb">grep</span> <span class="nt">-v</span> monitor | <span class="nb">cut</span> <span class="nt">-d</span><span class="s2">" "</span> <span class="nt">-f2</span> | <span class="nb">grep </span>input.<span class="k">*</span>aloop
</code></pre></div>    </div>
  </li>
</ul>

<p>N.B. <code class="language-plaintext highlighter-rouge">alsa_input.platform-snd_aloop.0.analog-stereo</code> is a virtual device in the loopback sound card, which is to be connected to a recording application. Meanwhile, <code class="language-plaintext highlighter-rouge">echoCancel_source</code> is the actual <code class="language-plaintext highlighter-rouge">PulseAudio</code> device to receive physical audio stream collected from the microphone. Therefore, the default source of <code class="language-plaintext highlighter-rouge">PulseAudio</code> should be set to <code class="language-plaintext highlighter-rouge">echoCancel_source</code>, but not <code class="language-plaintext highlighter-rouge">alsa_input.platform-snd_aloop.0.analog-stereo</code>.</p>

<p>References</p>

<ul>
  <li><a href="https://askubuntu.com/a/608211">https://askubuntu.com/a/608211</a></li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="audio" /><category term="multimedia" /><category term="PulseAudio" /><summary type="html"><![CDATA[Install Debian package sox. Load the kernel module snd_aloop to create an ALSA loopback device. sudo modprobe snd_aloop Record a noise and generate noise profile using sox. sox noise-from-headset.wav -n noiseprof noise-from-headset.prof Use pacmd to get the device name of the newly created loopback device for output, which should be alsa_output.platform-snd_aloop.0.analog-stereo. pactl list | grep -E -A2 '(Source|Sink) #' | grep 'Name: ' | grep -v monitor | cut -d" " -f2 | grep output.*aloop]]></summary></entry><entry><title type="html">Add EXIF date and time to scanned documents</title><link href="https://jihuan-tian.github.io/computer/2024/03/10/add-exif-date-and-time-to-scanned-documents.html" rel="alternate" type="text/html" title="Add EXIF date and time to scanned documents" /><published>2024-03-10T00:00:00+08:00</published><updated>2024-03-10T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/03/10/add-exif-date-and-time-to-scanned-documents</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/03/10/add-exif-date-and-time-to-scanned-documents.html"><![CDATA[<p>The following method is only applicable to the first transfer of scanned documents from CamScanner on my iPhone to my Linux workstation.</p>

<p>I rely on CamScanner to automatically crop and adjust color of my scanned documents. They are firstly processed by CamScanner, then automatically saved to iPhone’s photo album. After that, I manually upload them to my Linux Samba server. These processed images do not have date/time information in the EXIF metadata, which makes them not be sorted by time in an image viewer such as Gwenview. Therefore, after first transfer of these images to my Linux workstation, I need to use the modification time of these files as their approximate EXIF date/time.</p>

<p>Procedures</p>

<ol>
  <li>Use <code class="language-plaintext highlighter-rouge">stat</code> to get the modification time in the format since epoch.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">date</code> to generate the date/time string used for EXIF.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">exiftool</code> to set the <code class="language-plaintext highlighter-rouge">AllDates</code> field in EXIF.</li>
</ol>

<p>Bash script</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">file_modification_time_stamp</span><span class="o">=</span><span class="sb">`</span><span class="nb">stat</span> <span class="nt">-c</span> %Y <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span><span class="sb">`</span>
<span class="c"># Modification time string is in the EXIF time format</span>
<span class="nv">file_modification_time_string</span><span class="o">=</span><span class="sb">`</span><span class="nb">date</span> <span class="nt">-d</span> <span class="s2">"@</span><span class="nv">$file_modification_time_stamp</span><span class="s2">"</span> <span class="s2">"+%Y:%m:%d %H:%M:%S"</span><span class="sb">`</span>

exiftool <span class="nt">-overwrite_original</span> <span class="nt">-AllDates</span><span class="o">=</span><span class="s2">"</span><span class="nv">$file_modification_time_string</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>
</code></pre></div></div>

<p>Run the script for all files in a folder:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> | xargs <span class="nt">-I</span> <span class="s1">'{}'</span> add-time-to-scanning.sh <span class="s1">'{}'</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="command" /><category term="scanner" /><summary type="html"><![CDATA[The following method is only applicable to the first transfer of scanned documents from CamScanner on my iPhone to my Linux workstation.]]></summary></entry><entry><title type="html">General work flow of writing a test case for the Galerkin BEM project</title><link href="https://jihuan-tian.github.io/computer/2024/03/07/general-work-flow-of-writing-a-test-case-for-the-galerkin-bem-project.html" rel="alternate" type="text/html" title="General work flow of writing a test case for the Galerkin BEM project" /><published>2024-03-07T00:00:00+08:00</published><updated>2024-03-07T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/03/07/general-work-flow-of-writing-a-test-case-for-the-galerkin-bem-project</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/03/07/general-work-flow-of-writing-a-test-case-for-the-galerkin-bem-project.html"><![CDATA[<p>With the help of my college classmate, we’ve setup <code class="language-plaintext highlighter-rouge">Catch2</code> based unit test platform for the Galerkin BEM project. This is crucial for guaranteeing the correctness of a scientific software library which is gradually growing and becoming complicated. After several months of getting familiar with it, the work flow of writing and using a C++ test case becomes solidified, which is introduced in this article.</p>

<p>Assume the test case name is <code class="language-plaintext highlighter-rouge">foo</code>, which is created inside the folder <code class="language-plaintext highlighter-rouge">tests/foo</code>.</p>

<ul>
  <li>
    <p>Call <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/gen_data.m</code> Octave script from C++ to produce the input data of the test case in the file <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/foo.input</code>. This is optional.</p>

    <p>N.B. The value of <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}</code> can be accessed from C++ via the constant <code class="language-plaintext highlighter-rouge">SOURCE_DIR</code>. This is setup in the <code class="language-plaintext highlighter-rouge">CMakeLists.txt</code> file of the test case <code class="language-plaintext highlighter-rouge">foo</code>. Then C++ can locate the Octave script <code class="language-plaintext highlighter-rouge">gen_data.m</code> and execute it.</p>
  </li>
  <li>Test case generate results into the file <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/foo.output</code> in the format which can be loaded by Octave.</li>
  <li>Call <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/process.m</code> Octave script from C++. In <code class="language-plaintext highlighter-rouge">process.m</code>,
    <ul>
      <li>Load the result file <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/foo.output</code>.</li>
      <li>Run the Octave implementation of the C++ algorithm.</li>
      <li>Compare the C++ and Octave results. Usually, relative error is computed.</li>
    </ul>
  </li>
  <li>C++ check the relative error computed by <code class="language-plaintext highlighter-rouge">process.m</code> via <code class="language-plaintext highlighter-rouge">Catch2</code>.</li>
</ul>

<p>After each compilation of the test case, <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/process.m</code> and <code class="language-plaintext highlighter-rouge">${CMAKE\_CURRENT\_SOURCE\_DIR}/draw.m</code> will be automatically copied into the folder of the test case binary file by CMake. Then, the test case can be manually run in this folder, then manually run <code class="language-plaintext highlighter-rouge">process.m</code> and <code class="language-plaintext highlighter-rouge">draw.m</code> therefore for checking and visualization.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="BEM" /><category term="算法开发" /><category term="CMake" /><category term="unit-test" /><summary type="html"><![CDATA[With the help of my college classmate, we’ve setup Catch2 based unit test platform for the Galerkin BEM project. This is crucial for guaranteeing the correctness of a scientific software library which is gradually growing and becoming complicated. After several months of getting familiar with it, the work flow of writing and using a C++ test case becomes solidified, which is introduced in this article.]]></summary></entry><entry><title type="html">Solved the issue of anki-editor not working</title><link href="https://jihuan-tian.github.io/computer/2024/03/07/solved-the-issue-of-anki-editor-not-working.html" rel="alternate" type="text/html" title="Solved the issue of anki-editor not working" /><published>2024-03-07T00:00:00+08:00</published><updated>2024-03-07T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/03/07/solved-the-issue-of-anki-editor-not-working</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/03/07/solved-the-issue-of-anki-editor-not-working.html"><![CDATA[<p>Environment</p>

<ul>
  <li>Anki version 2.1.49 (dc80804a), Python 3.8.1 Qt 5.15.1 PyQt 5.15.1</li>
  <li>Newest version of AnkiConnect, installed via the plugin code <code class="language-plaintext highlighter-rouge">2055492159</code></li>
</ul>

<p><a id="orgb418634"></a></p>

<h1 id="problem-1-unable-to-start-ankiconnect">Problem 1: Unable to start AnkiConnect</h1>

<p>Phenomenon</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>from anki.scheduler.base import ScheduleCardsAsNew ImportError: cannot import name 'ScheduleCardsAsNew' from 'anki.scheduler.base' (/usr/local/share/anki/scheduler/base.pyc)
</code></pre></div></div>

<p>Solution: Download Anki Connect version 23.10.29.0 and use its contents to replace those in the folder <code class="language-plaintext highlighter-rouge">~/.local/share/Anki2/addons21/2055492159</code>.</p>

<p>Reference: <a href="https://www.youtube.com/watch?v=vxNJzoueK9M">https://www.youtube.com/watch?v=vxNJzoueK9M</a></p>

<p><a id="org6cfb6c2"></a></p>

<h1 id="problem-2-cannot-run-anki-editor">Problem 2: Cannot run anki-editor</h1>

<p>Phenomenon</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[error] request--curl-sync: semaphore never called
anki-editor--anki-connect-invoke: Wrong number of arguments: (3 . 3), 2
</code></pre></div></div>

<p>Cause: coding system error.</p>

<p>Solution: In the commit message of <code class="language-plaintext highlighter-rouge">084ffad14fa700ad1ba95d8cbfe4a8f6052e2408</code> of <code class="language-plaintext highlighter-rouge">anki-editor</code>, the <code class="language-plaintext highlighter-rouge">request</code> package must be upgraded to 0.3.1. My previous version is <code class="language-plaintext highlighter-rouge">20211107.1907</code>, which produces the above error.</p>

<p>Reference: <a href="https://github.com/louietan/anki-editor/issues/51#issuecomment-533876400">https://github.com/louietan/anki-editor/issues/51#issuecomment-533876400</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="Anki" /><category term="bug" /><summary type="html"><![CDATA[Environment]]></summary></entry><entry><title type="html">Usage of anki-editor in Emacs Org mode</title><link href="https://jihuan-tian.github.io/computer/2024/03/07/usage-of-anki-editor-in-emacs-org-mode.html" rel="alternate" type="text/html" title="Usage of anki-editor in Emacs Org mode" /><published>2024-03-07T00:00:00+08:00</published><updated>2024-03-07T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/03/07/usage-of-anki-editor-in-emacs-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/03/07/usage-of-anki-editor-in-emacs-org-mode.html"><![CDATA[<ul>
  <li>
    <p>When editing a new Anki note from Emacs Org mode, execute <code class="language-plaintext highlighter-rouge">M-x anki-editor-mode</code> then <code class="language-plaintext highlighter-rouge">M-x anki-editor-insert-note</code>.</p>

    <p>Because my Anki notes coexist with my formal notes and work journals, I need a way to quickly differentiate them. Adding a <code class="language-plaintext highlighter-rouge">anki</code> tag to the Anki note heading in Org mode is not perfect, since this tag will also be assigned to Anki cards. Therefore, I choose to always use “anki:” as the prefix of my Anki note heading, so that it can be easily filtered out by executing the command <code class="language-plaintext highlighter-rouge">helm-org-in-buffer-headings</code>.</p>

    <p>After writing the anki note, execute <code class="language-plaintext highlighter-rouge">M-x anki-editor-push-notes</code> to transfer the note to Anki.</p>
  </li>
  <li>Enable MathJax mode instead of LaTeX mode in Anki card by setting <code class="language-plaintext highlighter-rouge">anki-editor-use-math-jax</code> to <code class="language-plaintext highlighter-rouge">t</code>, because the vertical alignment of equations rendered in LaTeX mode is not correct.</li>
  <li><strong>Since MathJax is used, display equations as well as math environments should be wrapped between double dollars.</strong> Otherwise, a bare math environment cannot be recognized by MathJax. When a display equation contains an inner math environment, such as <code class="language-plaintext highlighter-rouge">aligned</code>, <strong>the two pairs of double dollars should be in a same line with <code class="language-plaintext highlighter-rouge">\begin{aligned}</code> and <code class="language-plaintext highlighter-rouge">\end{aligned}</code></strong>. Otherwise, there will be many empty lines inserted between them in the exported content, which disable MathJax rendering of this equation.</li>
  <li>Because Anki and Org mode now share a common system of tags, tag names should follow the stricter rules required by Org mode. For example, dash “-” and plus “+” are not allowed in a tag.</li>
  <li>Do not specify deck in higher level heading in Org mode. Specify the deck for each note.</li>
  <li>Sometimes, <code class="language-plaintext highlighter-rouge">anki-editor-push-notes</code> need to run several times to take effect.</li>
  <li>I’ve started using org-roam as my interconnected note system, so I will also add a link to related org-roam notes in an Anki note. These links should be placed before the “Front” heading and should not be placed within a “Reference” heading as I usually do. Otherwise, when the anki note is being pushed, there will be an error coming from <code class="language-plaintext highlighter-rouge">anki-editor--map-fields</code>, which says “Failed to map all named fields”. This is because the added “Reference” heading breaks the Anki note template.</li>
  <li>Not supported latex macros
    <ul>
      <li><code class="language-plaintext highlighter-rouge">\coloneq</code></li>
    </ul>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Anki" /><category term="Org-mode" /><category term="MathJax" /><category term="LaTeX" /><summary type="html"><![CDATA[When editing a new Anki note from Emacs Org mode, execute M-x anki-editor-mode then M-x anki-editor-insert-note. Because my Anki notes coexist with my formal notes and work journals, I need a way to quickly differentiate them. Adding a anki tag to the Anki note heading in Org mode is not perfect, since this tag will also be assigned to Anki cards. Therefore, I choose to always use “anki:” as the prefix of my Anki note heading, so that it can be easily filtered out by executing the command helm-org-in-buffer-headings. After writing the anki note, execute M-x anki-editor-push-notes to transfer the note to Anki.]]></summary></entry><entry><title type="html">The purpose of a pure virtual function with a default implementation</title><link href="https://jihuan-tian.github.io/computer/2024/03/05/the-purpose-of-a-pure-virtual-function-with-a-default-implementation.html" rel="alternate" type="text/html" title="The purpose of a pure virtual function with a default implementation" /><published>2024-03-05T00:00:00+08:00</published><updated>2024-03-05T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/03/05/the-purpose-of-a-pure-virtual-function-with-a-default-implementation</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/03/05/the-purpose-of-a-pure-virtual-function-with-a-default-implementation.html"><![CDATA[<ul>
  <li>A pure virtual function can have its implementation. But the implementation should be outside the class body.</li>
  <li>In a derived class, the pure virtual function must be explicitly reimplemented. Otherwise, the child class will also be an abstract class.</li>
  <li>If an implementation has been given in the parent class for the pure virtual function, it can be called from the child class as <code class="language-plaintext highlighter-rouge">Parent::foo()</code>.</li>
</ul>

<p>Therefore, a pure virtual function with an implementation has two design purposes:</p>

<ol>
  <li>The derived class, if not abstract, should has its own implementation of the virtual function.</li>
  <li>The provided implementation of the pure virtual function in the parent class can be used by derived classes as a common method.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><category term="C++" /><summary type="html"><![CDATA[A pure virtual function can have its implementation. But the implementation should be outside the class body. In a derived class, the pure virtual function must be explicitly reimplemented. Otherwise, the child class will also be an abstract class. If an implementation has been given in the parent class for the pure virtual function, it can be called from the child class as Parent::foo().]]></summary></entry><entry><title type="html">Eigen matrix data transfer between C++ and LabView</title><link href="https://jihuan-tian.github.io/computer/2024/02/24/eigen-matrix-data-transfer-between-cpp-and-labview.html" rel="alternate" type="text/html" title="Eigen matrix data transfer between C++ and LabView" /><published>2024-02-24T00:00:00+08:00</published><updated>2024-02-24T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/02/24/eigen-matrix-data-transfer-between-cpp-and-labview</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/02/24/eigen-matrix-data-transfer-between-cpp-and-labview.html"><![CDATA[<p>When interfacing C++ and LabView, I need to process and manipulate the data array created in LabView with Eigen. There is no need to copy the whole array and wrapping the existing array into an Eigen object is enough and efficient. <code class="language-plaintext highlighter-rouge">Eigen::Map</code> should be used for this purpose.</p>

<p>On the other hand, before integrating C++ with LabView, I need to test algorithms implemented in C++ and Eigen’s matrix type will be used instead of raw data array from LabView. Therefore, the C++ function should accept both scenarios. Hence, <code class="language-plaintext highlighter-rouge">Eigen::Ref</code> is used.</p>

<p>Convert a data pointer to an array to <code class="language-plaintext highlighter-rouge">Eigen::Map</code></p>

<pre><code class="language-C++">#include &lt;Eigen/Core&gt;
#include &lt;Eigen/Dense&gt;

using namespace Eigen;

// @p mat is a pointer to an array created in LabView, which is wrapped in an
// @p Eigen::Map object @p mat_out.
void
read_matrix_labview(const char        *filename,
                    double            *mat,
                    const unsigned int n_rows,
                    const unsigned int n_cols,
                    const char        *comment_symbol)
{
  Map&lt;MatrixXd, Unaligned&gt; mat_out(mat, n_rows, n_cols);
  TSC::read_matrix(std::string(filename),
                   mat_out,
                   n_rows,
                   n_cols,
                   std::string(comment_symbol));
}
</code></pre>

<p>In the following function declaration, <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;</code> can either accept a mutable <code class="language-plaintext highlighter-rouge">VectorXd</code> object or a <code class="language-plaintext highlighter-rouge">Map&lt;VectorXd&gt;</code> object. If the argument is read-only, we should use <code class="language-plaintext highlighter-rouge">const Ref&lt;const VectorXd&gt;&amp;</code>.</p>

<pre><code class="language-C++">void
tsc_electronic_trap(Ref&lt;VectorXd&gt;              trap_energies,
                    Ref&lt;VectorXd&gt;              trap_densities,
                    const Ref&lt;const VectorXd&gt; &amp;temperatures,
                    const Ref&lt;const VectorXd&gt; &amp;currents,
                    const double               temperature_ramp_rate,
                    const double               electrode_diameter,
                    const double               sample_thickness,
                    const double               attemp_to_jump_frequency,
                    const double               carrier_penetration_depth,
                    const double               valence_band_depth,
                    const unsigned int         energy_level_num,
                    const bool                 is_near_measurement_electrode);
</code></pre>

<p>The reason for the difference between mutable and const is described as follows.</p>

<ul>
  <li>The basic situation: usually we don’t already have a <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;</code> object to be passed to the function, but only pass a <code class="language-plaintext highlighter-rouge">VectorXd</code> or <code class="language-plaintext highlighter-rouge">Map&lt;VectorXd&gt;</code> to the above function. Then a temporary <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;</code> object will be created. Because it is an rvalue, it is const.</li>
  <li>If the function argument type is <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;&amp;</code>, it requires a mutable reference to the const temporary object, which is invalid. Hence, only <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;</code> is allowed.</li>
  <li>If the function argument type is <code class="language-plaintext highlighter-rouge">const Ref&lt;const VectorXd&gt;</code> or <code class="language-plaintext highlighter-rouge">const Ref&lt;const VectorXd&gt;&amp;</code>, both are grammatically correct. The former is pass-by-value with respect to the object <code class="language-plaintext highlighter-rouge">Ref&lt;const VectorXd&gt;</code>, while the latter is pass-by-reference. Here the <code class="language-plaintext highlighter-rouge">Ref</code> object is created for <code class="language-plaintext highlighter-rouge">VectorXd</code>, the memory of which has already been dynamically allocated. Therefore, <code class="language-plaintext highlighter-rouge">Ref&lt;VectorXd&gt;</code> itself is a small object. For <code class="language-plaintext highlighter-rouge">Ref&lt;Vector3d&gt;</code>, the memory for <code class="language-plaintext highlighter-rouge">Vector3d</code> is fixed and statically created, the entirety of which is a member of <code class="language-plaintext highlighter-rouge">Ref&lt;Vector3d&gt;</code>. Therefore, <code class="language-plaintext highlighter-rouge">Ref&lt;Vector3d&gt;</code> is relatively a large object and pass-by-reference is preferred. So we should use <code class="language-plaintext highlighter-rouge">const Ref&lt;const Vector3d&gt;&amp;</code>. For simplicity, for any type <code class="language-plaintext highlighter-rouge">T</code>, we only use <code class="language-plaintext highlighter-rouge">const Ref&lt;const T&gt;&amp;</code>.</li>
</ul>

<p>Reference: <a href="https://stackoverflow.com/a/21138316">https://stackoverflow.com/a/21138316</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Eigen" /><category term="C++" /><category term="LabView" /><summary type="html"><![CDATA[When interfacing C++ and LabView, I need to process and manipulate the data array created in LabView with Eigen. There is no need to copy the whole array and wrapping the existing array into an Eigen object is enough and efficient. Eigen::Map should be used for this purpose.]]></summary></entry><entry><title type="html">Check hard disk SMART status</title><link href="https://jihuan-tian.github.io/computer/2024/01/28/check-hard-disk-smart-status.html" rel="alternate" type="text/html" title="Check hard disk SMART status" /><published>2024-01-28T00:00:00+08:00</published><updated>2024-01-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2024/01/28/check-hard-disk-smart-status</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2024/01/28/check-hard-disk-smart-status.html"><![CDATA[<ul>
  <li>
    <p>From command line</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo smartctl -a &lt;device-name&gt;
</code></pre></div>    </div>

    <p>where <code class="language-plaintext highlighter-rouge">&lt;device-name&gt;</code> can be <code class="language-plaintext highlighter-rouge">/dev/sda</code>.</p>
  </li>
  <li>
    <p>From GUI in KDE</p>

    <p>Go to “Info Center” → “Devices” → “SMART Status” and open “Partition Manager” of the target disk.</p>

    <p><img src="/figures/2024-01-28_11-47-51-smart-status-in-kde-info-center.png" alt="img" /></p>

    <p>In the opened “KDE Partition Manager”, the SMART status can be checked and exported to an HTML file.</p>

    <p><img src="/figures/2024-01-28_11-49-45-smart-status-parameters.png" alt="img" /></p>

    <p>At the moment, the “Read Error Rate” of my newly purchased Ironwolf 4TB disk registers a very high value <code class="language-plaintext highlighter-rouge">213,121,160</code>, in hexadecimal is <code class="language-plaintext highlighter-rouge">0x00000cb3f888</code>. According to <a href="https://www.reddit.com/r/DataHoarder/comments/x9xb4d/comment/inqvrq2/?utm_source=share&amp;utm_medium=web2x&amp;context=3">here</a>, the lowest 32 bits of this value represents the number of operations, while the highest 16 bits are the number of errors. Therefore, there is no problem with my new disk. By running Seagate’s own disk health diagnostic tool, the reported disk status is also OK.</p>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="hard-disk" /><category term="command" /><summary type="html"><![CDATA[From command line sudo smartctl -a &lt;device-name&gt; where &lt;device-name&gt; can be /dev/sda. From GUI in KDE Go to “Info Center” → “Devices” → “SMART Status” and open “Partition Manager” of the target disk. In the opened “KDE Partition Manager”, the SMART status can be checked and exported to an HTML file. At the moment, the “Read Error Rate” of my newly purchased Ironwolf 4TB disk registers a very high value 213,121,160, in hexadecimal is 0x00000cb3f888. According to here, the lowest 32 bits of this value represents the number of operations, while the highest 16 bits are the number of errors. Therefore, there is no problem with my new disk. By running Seagate’s own disk health diagnostic tool, the reported disk status is also OK.]]></summary></entry><entry><title type="html">Performance of LAPACK and its parallelism</title><link href="https://jihuan-tian.github.io/computer/2023/12/16/performance-of-lapack-and-its-parallelism.html" rel="alternate" type="text/html" title="Performance of LAPACK and its parallelism" /><published>2023-12-16T00:00:00+08:00</published><updated>2023-12-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/12/16/performance-of-lapack-and-its-parallelism</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/12/16/performance-of-lapack-and-its-parallelism.html"><![CDATA[<ul>
  <li>LAPACK was originally targeted to achieve good performance on <strong>single-processor vector machines</strong> and on <strong>shared memory multiprocessor machines</strong> with a modest number of powerful processors.</li>
  <li>Vectorization in linear algebra algorithms cannot be implemented in Fortran 77, because its compiler cannot minimize the number of memory references, i.e. the number of vector load and store operations.</li>
  <li>
    <p>Data movement between different levels of machine memory limits the performance of vector or scalar floating point computations. Typical types of data movement include</p>

    <ul>
      <li>Transfer of vector operands in and out of <strong>vector registers</strong></li>
      <li>Transfer of scalar operands in and out of a <strong>high speed scalar processor</strong></li>
      <li>Movement of data between <strong>main memory</strong> and <strong>high speed cache</strong> or <strong>local memory</strong></li>
      <li><strong>Paging</strong> between actual memory and disk storage in a <strong>virtual memory system</strong></li>
    </ul>

    <p><strong>The key philosophy is to reuse data as much as possible, while it is stored in the higher levels of the memory hierarchy.</strong> Here, the so-called <strong>higher levels</strong> means memory access is faster there.</p>
  </li>
  <li>Principal type of parallelism exploited by LAPACK: nested loop-based parallelism.</li>
  <li>LAPACK relies on BLAS as its building blocks for portability. BLAS is the low-level interface between LAPACK and different machine architectures. Hence, the efficiency of LAPACK depends on the implementation of BLAS.</li>
  <li>
    <p>Different levels of operations in BLAS</p>

    <ul>
      <li>Level 1: vector operations, such as \(y \leftarrow \alpha x + y\), which cannot achieve high efficiency on most modern supercomputers. However, they comprise only a insignificant fraction in a typical linear algebra computation task.</li>
      <li>Level 2: matrix-vector operations, such as \(y \leftarrow \alpha Ax + \beta y\). On computers with one more levels of cache, such as PC, RISC workstation, the performance is limited by the rate of data movement between different levels of memory.</li>
      <li>Level 3: matrix-matrix operations, such as \(C \leftarrow \alpha AB + \beta C\). The data movement issues in Level 2 is solved in this level and \(O(n^3)\) floating-point operations can be achieved o1n \(O(n^2)\) data.</li>
    </ul>

    <p><em>Therefore, LAPACK itself can run in parallel. Compared to the high level task based parallelism provided by TBB, this is a parallelism at the kernel function level.</em></p>
  </li>
  <li>More complicated linear algebra algorithms such as Cholesky and LU factorization are implemented as <strong>block algorithms</strong> by LAPACK to achieve the highest performance which is commensurate with the peak performance for matrix-matrix multiplication, i.e. BLAS level 3.</li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LAPACK" /><category term="HPC" /><summary type="html"><![CDATA[LAPACK was originally targeted to achieve good performance on single-processor vector machines and on shared memory multiprocessor machines with a modest number of powerful processors. Vectorization in linear algebra algorithms cannot be implemented in Fortran 77, because its compiler cannot minimize the number of memory references, i.e. the number of vector load and store operations. Data movement between different levels of machine memory limits the performance of vector or scalar floating point computations. Typical types of data movement include Transfer of vector operands in and out of vector registers Transfer of scalar operands in and out of a high speed scalar processor Movement of data between main memory and high speed cache or local memory Paging between actual memory and disk storage in a virtual memory system The key philosophy is to reuse data as much as possible, while it is stored in the higher levels of the memory hierarchy. Here, the so-called higher levels means memory access is faster there. Principal type of parallelism exploited by LAPACK: nested loop-based parallelism. LAPACK relies on BLAS as its building blocks for portability. BLAS is the low-level interface between LAPACK and different machine architectures. Hence, the efficiency of LAPACK depends on the implementation of BLAS. Different levels of operations in BLAS Level 1: vector operations, such as \(y \leftarrow \alpha x + y\), which cannot achieve high efficiency on most modern supercomputers. However, they comprise only a insignificant fraction in a typical linear algebra computation task. Level 2: matrix-vector operations, such as \(y \leftarrow \alpha Ax + \beta y\). On computers with one more levels of cache, such as PC, RISC workstation, the performance is limited by the rate of data movement between different levels of memory. Level 3: matrix-matrix operations, such as \(C \leftarrow \alpha AB + \beta C\). The data movement issues in Level 2 is solved in this level and \(O(n^3)\) floating-point operations can be achieved o1n \(O(n^2)\) data. Therefore, LAPACK itself can run in parallel. Compared to the high level task based parallelism provided by TBB, this is a parallelism at the kernel function level. More complicated linear algebra algorithms such as Cholesky and LU factorization are implemented as block algorithms by LAPACK to achieve the highest performance which is commensurate with the peak performance for matrix-matrix multiplication, i.e. BLAS level 3.]]></summary></entry><entry><title type="html">Problems of preview-latex</title><link href="https://jihuan-tian.github.io/computer/2023/10/21/problems-of-preview-latex.html" rel="alternate" type="text/html" title="Problems of preview-latex" /><published>2023-10-21T00:00:00+08:00</published><updated>2023-10-21T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/10/21/problems-of-preview-latex</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/10/21/problems-of-preview-latex.html"><![CDATA[<p><code class="language-plaintext highlighter-rouge">preview-latex</code> is a handy function provided by AUCTeX for directly rendering LaTeX equations and inserted figures in a Emacs buffer under the <code class="language-plaintext highlighter-rouge">latex-mode</code>. <code class="language-plaintext highlighter-rouge">lstlistings</code> is LaTeX package for highlighting source code. According to my experience, when <code class="language-plaintext highlighter-rouge">lstlistings</code> package is used, <code class="language-plaintext highlighter-rouge">preview-latex</code> have the following problems, some of which can be overcome actually.</p>

<ul>
  <li>
    <p>When <code class="language-plaintext highlighter-rouge">\lstlistofalgorithms</code> appears at the end of a LaTeX document, <code class="language-plaintext highlighter-rouge">preview-latex</code> will get stuck and consume 100% CPU.</p>

    <p>Solution: remove <code class="language-plaintext highlighter-rouge">sections</code> from the variable <code class="language-plaintext highlighter-rouge">preview-default-option-list</code> in <code class="language-plaintext highlighter-rouge">preview-latex</code>, which will stop processing <code class="language-plaintext highlighter-rouge">\lstlistofalgorithms</code>.</p>
  </li>
  <li>Preview of math symbols in a <code class="language-plaintext highlighter-rouge">lstlistings</code> algorithm is a mess.</li>
  <li>Math symbols in an environment introduced by <code class="language-plaintext highlighter-rouge">ntheorem</code>, such as <code class="language-plaintext highlighter-rouge">Theorem</code>, <code class="language-plaintext highlighter-rouge">Definition</code>, <code class="language-plaintext highlighter-rouge">Remark</code>, etc., will become bold face in the preview.</li>
  <li>
    <p>A <code class="language-plaintext highlighter-rouge">\mbox</code> command appearing in the <code class="language-plaintext highlighter-rouge">postbreak</code> property of <code class="language-plaintext highlighter-rouge">lstlistings</code> configuration will make <code class="language-plaintext highlighter-rouge">preview-latex</code> fail.</p>

    <p>As shown below, the <code class="language-plaintext highlighter-rouge">\mbox</code> command should be replaced with <code class="language-plaintext highlighter-rouge">\hbox</code>. The difference between <code class="language-plaintext highlighter-rouge">\mbox</code> and <code class="language-plaintext highlighter-rouge">\hbox</code> is <a href="https://tex.stackexchange.com/a/118169">here</a>.</p>

    <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\makeatletter</span>
<span class="k">\@</span>ifclassloaded<span class="p">{</span>beamer<span class="p">}{</span>
  <span class="k">\newsavebox\redarrow</span>
  <span class="k">\sbox\redarrow</span><span class="p">{</span><span class="k">\raisebox</span><span class="p">{</span>0ex<span class="p">}</span>[0ex][0ex]<span class="p">{</span><span class="k">\ensuremath</span><span class="p">{</span><span class="k">\color</span><span class="p">{</span>red<span class="p">}</span><span class="k">\hookrightarrow\space</span><span class="p">}}}</span>
  <span class="k">\lstset</span><span class="p">{</span>postbreak=<span class="k">\usebox\redarrow</span><span class="p">}</span>
<span class="p">}{</span><span class="k">\lstset</span><span class="p">{</span>postbreak=<span class="k">\mbox</span><span class="p">{</span><span class="k">\textcolor</span><span class="p">{</span>red<span class="p">}{$</span><span class="nv">\hookrightarrow</span><span class="p">$}</span><span class="k">\space</span><span class="p">}}}</span>
<span class="k">\makeatother</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LaTeX" /><category term="preview-latex" /><category term="AUCTeX" /><category term="lstlistings" /><summary type="html"><![CDATA[preview-latex is a handy function provided by AUCTeX for directly rendering LaTeX equations and inserted figures in a Emacs buffer under the latex-mode. lstlistings is LaTeX package for highlighting source code. According to my experience, when lstlistings package is used, preview-latex have the following problems, some of which can be overcome actually.]]></summary></entry><entry><title type="html">My Wacom Intuos 4100</title><link href="https://jihuan-tian.github.io/computer/2023/09/26/my-wacom-intuos-4100.html" rel="alternate" type="text/html" title="My Wacom Intuos 4100" /><published>2023-09-26T00:00:00+08:00</published><updated>2023-09-26T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/09/26/my-wacom-intuos-4100</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/09/26/my-wacom-intuos-4100.html"><![CDATA[<p>Upgrading to GoodNotes version 6 needs an additional payment, even though I’ve already purchased version 5. Therefore, the once claimed permanent software license is only valid for a single version, not the whole software life time. Meanwhile, CamScanner Pro for scanning documents which I purchased years ago cannot run on recent iPad OS anymore.</p>

<p>Considering building up a digital knowledge and information database which can last in a stable format at least for my whole life time, I find it mandatory to discard these seemingly well commercially supported and user friendly software tools and platforms. Instead, I will switch to more fundamental and general hardware and software. For writing with a pen directly on a digital device, I’ve abandoned iPad + Apple Pencil and started to use Wacom tablet. The following photo shows my Wacom Intuos 4100 tablet that was purchased on <span class="timestamp-wrapper"><span class="timestamp">&lt;2023-09-17 Sun&gt;</span></span>.</p>

<p><img src="/figures/2023-09-18-wacom-intuos-4000.JPG" alt="img" /> To make it supported by Debian Linux, the following packages should be installed:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">libwacom2</code>: driver for identifying Wacom tablets</li>
  <li><code class="language-plaintext highlighter-rouge">xserver-xorg-input-wacom</code>: X.Org driver for Wacom tablets</li>
</ul>

<p>Then plug in the USB cable and the tablet just works without any problem.</p>

<p>We can use the <code class="language-plaintext highlighter-rouge">xsetwacom</code> command to check device information and customize tablet parameters. For example,</p>

<ul>
  <li>
    <p>Show all devices</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom list devices
</code></pre></div>    </div>

    <p>It shows four devices:</p>

    <ul>
      <li>Wacom Intuos S Pad pad id: 20 type: PAD: The pad tool is the physical tablet itself excluding the drawing area, including the buttons and the scroll ring or scroll strips (if applicable).</li>
      <li>Wacom Intuos S Pen stylus id: 21 type: STYLUS</li>
      <li>Wacom Intuos S Pen eraser id: 22 type: ERASER: not available on Intuos 4100</li>
      <li>Wacom Intuos S Pen cursor id: 23 type: CURSOR: not available on Intuos 4100</li>
    </ul>
  </li>
  <li>
    <p>Show device parameters. N.B. Each time the Wacom tablet is connected to the computer, the device id may change. Therefore, using the device’s full name is a better choice.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom get &lt;device-id/device-full-name&gt; all
</code></pre></div>    </div>

    <p>Default stylus device parameters are</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Option "Area" "0 0 15200 9500"
Button: Actions are not supported by xorg.conf. Try shell format (-s) instead.
Button: Actions are not supported by xorg.conf. Try shell format (-s) instead.
Button: Actions are not supported by xorg.conf. Try shell format (-s) instead.
Button: Actions are not supported by xorg.conf. Try shell format (-s) instead.
Button: Actions are not supported by xorg.conf. Try shell format (-s) instead.
Option "DebugLevel" "0"
Option "CommonDBG" "0"
Option "Suppress" "2"
Option "RawSample" "4"
Option "PressCurve" "0 0 100 100"
Option "Mode" "Absolute"
Option "TPCButton" "off"
Option "Touch" "off"
Property 'Wacom Hardware Touch Switch' does not exist on device.
Option "Gesture" "off"
Option "ZoomDistance" "0"
Option "ScrollDistance" "0"
Option "TapTime" "250"
Property 'Wacom Proximity Threshold' does not exist on device.
Option "Rotate" "none"
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Wheel Buttons' does not exist on device.
Property 'Wacom Strip Buttons' does not exist on device.
Property 'Wacom Strip Buttons' does not exist on device.
Property 'Wacom Strip Buttons' does not exist on device.
Property 'Wacom Strip Buttons' does not exist on device.
Option "Threshold" "26"
Option "Serial" "0"
Option "PressureRecalibration" "on"
</code></pre></div>    </div>

    <p>It can be seen that in the above information, configuration for the buttons is not shown, which should be checked by adding the <code class="language-plaintext highlighter-rouge">-s</code> option as suggested. Then we have the following</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom set "21" "Button" "1" "button +1 "
xsetwacom set "21" "Button" "2" "button +2 "
xsetwacom set "21" "Button" "3" "button +3 "
xsetwacom set "21" "Button" "8" "button +8 "
xsetwacom set "21" "Button" "9" "button +9 "
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the tablet to an area on the screen:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom <span class="nb">set</span> &lt;device-id/device-full-name&gt; MapToOutput 3840x2160+0+0
</code></pre></div>    </div>
  </li>
  <li>
    <p>Adjust the effective input area on the tablet, which should have the same aspect ratio as the mapped screen area. The meaning of the <code class="language-plaintext highlighter-rouge">Area</code> parameter:</p>

    <blockquote>
      <p>Area x1 y1 x2 y2 Set the tablet input area in device coordinates in the form top left x/y and bottom right x/y. Top left and bottom right are defined in the device’s native orientation, regardless of the actual rotation currently applied. Input outside of these coordinates will be clipped to the edges of the area defined. Default: 0 0 x2 y2; with x2 and y2 tablet specific.</p>
    </blockquote>

    <p>As seen from above device parameters, the top left corner position and dimension of the original maximum input area is “0 0 15200 9500”. The resolution of the Wacom Intuos 4100 is 2540 dpi, hence the physical dimension of the input area is 152*95 mm. The aspect ratio of my screen is 1.7778 and that of the Wacom tablet is 1.6, which is a little narrower. Therefore, use the width of the effective input area as the basis to derive the height of the input area using the aspect ratio of the screen.</p>

    <p>Use the command below to set the input area for the stylus.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xsetwacom <span class="nb">set</span> &lt;device-full-name&gt; Area 0 0 15200 8550
</code></pre></div>    </div>
  </li>
</ul>

<p>I’ve defined collections of <code class="language-plaintext highlighter-rouge">xsetwacom</code> commands for different applications that I often use.</p>

<ul>
  <li>
    <p>Map the effective input area to the full main screen</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 0 0 15200 8550
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 3840x2160+0+0
<span class="c"># Do note rotate the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate none
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the effective input area to the left half of the full main screen with rotation</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 4512 0 15200 9500
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 1920x2160+0+0
<span class="c"># Rotate the tablet couterclockwise by 90 degrees.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate cw
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the effective input area to the left half of the full main screen without rotation</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 0 0 8445 9500
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 1920x2160+0+0
<span class="c"># Rotate the tablet couterclockwise by 90 degrees.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate none
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the effective input area to the right half of the full main screen with rotation</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 4512 0 15200 9500
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 1920x2160+1920+0
<span class="c"># Rotate the tablet couterclockwise by 90 degrees.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate cw
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the effective input area to the right half of the full main screen without rotation</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 0 0 8445 9500
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 1920x2160+1920+0
<span class="c"># Rotate the tablet couterclockwise by 90 degrees.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate none
</code></pre></div>    </div>
  </li>
  <li>
    <p>Map the effective input area to the second screen</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set effective input area on the tablet.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Area 0 0 15200 8550
<span class="c"># Map the tablet's effective input area to the physical screen.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> MapToOutput 1080x1920+3840+0
<span class="c"># Rotate the tablet couterclockwise by 90 degrees.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Rotate cw
</code></pre></div>    </div>
  </li>
  <li>
    <p>Default configuration for buttons</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Set default buttons on the pen stylus.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 2 <span class="s2">"button +2"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 3 <span class="s2">"button +3"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 8 <span class="s2">"button +8"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 9 <span class="s2">"button +9"</span>
    
<span class="c"># Set default buttons on the pad.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 2 <span class="s2">"button +2"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 3 <span class="s2">"button +3"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 8 <span class="s2">"button +8"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Configuration for Xournal++, which is used for taking notes.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Draw line</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 1 <span class="s2">"key +control 6 -control"</span>
<span class="c"># Draw rectangle</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 2 <span class="s2">"key +control 2 -control"</span>
<span class="c"># Draw ellipse</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 3 <span class="s2">"key +control 3 -control"</span>
<span class="c"># Draw arrow</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 8 <span class="s2">"key +control 4 -control"</span>
    
<span class="c"># Set default buttons on the pen stylus.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 2 <span class="s2">"button +2"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 3 <span class="s2">"button +3"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 8 <span class="s2">"button +8"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 9 <span class="s2">"button +9"</span>
</code></pre></div>    </div>

    <p>In Xournal++ preferences, the stylus buttons are configured to “Eraser” and “Select region”:</p>

    <p><img src="/figures/2023-09-26_22-41-42-stylus-buttons-in-xournalpp.png" alt="img" /></p>
  </li>
  <li>
    <p>Configuration for Okular in presentation mode, with which I can mark my Beamer slides.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Red pen</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 1 <span class="s2">"key +control +shift 1 -shift -control"</span>
<span class="c"># Blue pen</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 2 <span class="s2">"key +control +shift 2 -shift -control"</span>
<span class="c"># Yellow pen</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 3 <span class="s2">"key +control +shift 5 -shift -control"</span>
<span class="c"># Erase all drawing on the screen</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 8 <span class="s2">"key +control +shift 8 -shift -control"</span>
<span class="c"># Eraser</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 2 <span class="s2">"key +control +shift 7 -shift -control"</span>
    
<span class="c"># Set other default bindings in case they are modified elsewhere.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 3 <span class="s2">"button +3"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 8 <span class="s2">"button +8"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 9 <span class="s2">"button +9"</span>
</code></pre></div>    </div>

    <p><img src="/figures/2023-09-26_22-45-23-drawing-in-okular-presentation-mode.png" alt="img" /> In the definition of key combinations that are bound to Wacom tablet buttons, <code class="language-plaintext highlighter-rouge">+control</code> means pressing down the Ctrl key, while <code class="language-plaintext highlighter-rouge">-control</code> means release it. N.B. These key combinations should firstly be associated with related actions in Okular as shown below, then we can use Wacom tablet to trigger them.</p>

    <p><img src="/figures/2023-09-26_22-43-02-okular-fast-keys-for-drawing.png" alt="img" /></p>
  </li>
  <li>
    <p>Configuration for Okular in reading and annotation mode, with which I can take notes directly in PDF files.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Highlighter</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 1 <span class="s2">"key +alt 1 -alt"</span>
<span class="c"># Freehand line</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 2 <span class="s2">"key +alt 8 -alt"</span>
<span class="c"># Stright line</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 3 <span class="s2">"key +control +shift 9 -shift -control"</span>
<span class="c"># Rectangle</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 8 <span class="s2">"key +alt 0 -alt"</span>
<span class="c"># Ellipse</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 2 <span class="s2">"key +control +shift 0 -shift -control"</span>
    
<span class="c"># Set other default bindings in case they are modified elsewhere.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 3 <span class="s2">"button +3"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 8 <span class="s2">"button +8"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 9 <span class="s2">"button +9"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Configuration for Inkscape</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Freehand line</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 1 <span class="s2">"key p"</span>
<span class="c"># Calligraphic line</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 2 <span class="s2">"key c"</span>
<span class="c"># Rectangle and square</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 3 <span class="s2">"key r"</span>
<span class="c"># Circle and ellipse</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pad pad'</span> Button 8 <span class="s2">"key e"</span>
<span class="c"># Erase existing paths</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 2 <span class="s2">"key +shift e -shift"</span>
<span class="c"># Pick color from image</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 3 <span class="s2">"key d"</span>
    
<span class="c"># Set other default bindings in case they are modified elsewhere.</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 1 <span class="s2">"button +1"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 8 <span class="s2">"button +8"</span>
xsetwacom <span class="nb">set</span> <span class="s1">'Wacom Intuos S Pen stylus'</span> Button 9 <span class="s2">"button +9"</span>
</code></pre></div>    </div>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Wacom" /><category term="GoodNotes" /><category term="iPad" /><summary type="html"><![CDATA[Upgrading to GoodNotes version 6 needs an additional payment, even though I’ve already purchased version 5. Therefore, the once claimed permanent software license is only valid for a single version, not the whole software life time. Meanwhile, CamScanner Pro for scanning documents which I purchased years ago cannot run on recent iPad OS anymore.]]></summary></entry><entry><title type="html">Link to a target within a LibreOffice file from Org mode</title><link href="https://jihuan-tian.github.io/computer/2023/09/16/link-to-a-target-within-a-libreoffice-file-from-org-mode.html" rel="alternate" type="text/html" title="Link to a target within a LibreOffice file from Org mode" /><published>2023-09-16T00:00:00+08:00</published><updated>2023-09-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/09/16/link-to-a-target-within-a-libreoffice-file-from-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/09/16/link-to-a-target-within-a-libreoffice-file-from-org-mode.html"><![CDATA[<p>In Org mode, to create a hyperlink which points to an internal target, such as heading, table, bookmark, etc., in a local LibreOffice document, should be an URL instead of an absolute or relative file system path, otherwise it cannot be opened by the <code class="language-plaintext highlighter-rouge">libreoffice</code> program. To generate such an URL, the path to the local LibreOffice file should be converted to an absolute one and prefixed with <code class="language-plaintext highlighter-rouge">file://</code>. The target in the LibreOffice document for linking should be appended to the URL in the form <code class="language-plaintext highlighter-rouge">#&lt;target-name&gt;|&lt;target-category&gt;</code>. The <code class="language-plaintext highlighter-rouge">&lt;target-name&gt;</code> can be checked within LibreOffice’s navigator. The <code class="language-plaintext highlighter-rouge">&lt;target-category&gt;</code> can be <code class="language-plaintext highlighter-rouge">outline</code>, <code class="language-plaintext highlighter-rouge">table</code>, <code class="language-plaintext highlighter-rouge">figure</code>, etc. Then special characters within the URL should be converted to URL encoding. For example, a white space should be represented as <code class="language-plaintext highlighter-rouge">%20</code>.</p>

<p>A new link type <code class="language-plaintext highlighter-rouge">libreoffice</code> can be created in Org as below.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Open a LibreOffice file with specified internal target, i.e. with pinpoint</span>
<span class="c1">;; accuracy.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/open-libreoffice-file-target</span> <span class="p">(</span><span class="nv">url</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">start-process</span> <span class="s">"LibreOffice file target"</span> <span class="no">nil</span> <span class="s">"libreoffice"</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"file://"</span> <span class="p">(</span><span class="nv">url-encode-url</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">url</span><span class="p">)))))</span>

<span class="c1">;; Completion for inserting the LibreOffice link, which is copied from</span>
<span class="c1">;; org-link-complete-file.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">libreoffice-link-complete-file</span> <span class="p">(</span><span class="k">&amp;optional</span> <span class="nv">arg</span><span class="p">)</span>
  <span class="s">"Create a file link using completion."</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">file</span> <span class="p">(</span><span class="nv">read-file-name</span> <span class="s">"LibreOffice: "</span><span class="p">))</span>
        <span class="p">(</span><span class="nv">pwd</span> <span class="p">(</span><span class="nv">file-name-as-directory</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="s">"."</span><span class="p">)))</span>
        <span class="p">(</span><span class="nv">pwd1</span> <span class="p">(</span><span class="nv">file-name-as-directory</span> <span class="p">(</span><span class="nv">abbreviate-file-name</span>
                                       <span class="p">(</span><span class="nv">expand-file-name</span> <span class="s">"."</span><span class="p">)))))</span>
    <span class="p">(</span><span class="nb">cond</span> <span class="p">((</span><span class="nb">equal</span> <span class="nv">arg</span> <span class="o">'</span><span class="p">(</span><span class="mi">16</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">concat</span> <span class="s">"libreoffice:"</span>
                   <span class="p">(</span><span class="nv">abbreviate-file-name</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file</span><span class="p">))))</span>
          <span class="p">((</span><span class="nv">string-match</span>
            <span class="p">(</span><span class="nv">concat</span> <span class="s">"^"</span> <span class="p">(</span><span class="nv">regexp-quote</span> <span class="nv">pwd1</span><span class="p">)</span> <span class="s">"\\(.+\\)"</span><span class="p">)</span> <span class="nv">file</span><span class="p">)</span>
           <span class="p">(</span><span class="nv">concat</span> <span class="s">"libreoffice:"</span> <span class="p">(</span><span class="nv">match-string</span> <span class="mi">1</span> <span class="nv">file</span><span class="p">)))</span>
          <span class="p">((</span><span class="nv">string-match</span>
            <span class="p">(</span><span class="nv">concat</span> <span class="s">"^"</span> <span class="p">(</span><span class="nv">regexp-quote</span> <span class="nv">pwd</span><span class="p">)</span> <span class="s">"\\(.+\\)"</span><span class="p">)</span>
            <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file</span><span class="p">))</span>
           <span class="p">(</span><span class="nv">concat</span> <span class="s">"libreoffice:"</span>
                   <span class="p">(</span><span class="nv">match-string</span> <span class="mi">1</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file</span><span class="p">))))</span>
          <span class="c1">;; N.B. Since a local LibreOffice document is linked, the relative</span>
          <span class="c1">;; path is preferred.</span>
          <span class="p">(</span><span class="no">t</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"libreoffice:"</span> <span class="p">(</span><span class="nv">file-relative-name</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file</span><span class="p">)))))))</span>

<span class="c1">;; Set the behavior of opening the LibreOffice link and inserting the link with</span>
<span class="c1">;; completion.</span>
<span class="p">(</span><span class="nv">org-link-set-parameters</span>
 <span class="s">"libreoffice"</span>
 <span class="ss">:follow</span> <span class="ss">'tjh/open-libreoffice-file-target</span>
 <span class="ss">:complete</span> <span class="ss">'libreoffice-link-complete-file</span><span class="p">)</span>
</code></pre></div></div>

<p>N.B. For me there is no need to modify the link’s <code class="language-plaintext highlighter-rouge">export</code> behavior, because when I export the Org file to LaTeX PDF, the link format generated by the default export back-end is effective when it is clicked from a PDF viewer.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="LibreOffice" /><summary type="html"><![CDATA[In Org mode, to create a hyperlink which points to an internal target, such as heading, table, bookmark, etc., in a local LibreOffice document, should be an URL instead of an absolute or relative file system path, otherwise it cannot be opened by the libreoffice program. To generate such an URL, the path to the local LibreOffice file should be converted to an absolute one and prefixed with file://. The target in the LibreOffice document for linking should be appended to the URL in the form #&lt;target-name&gt;|&lt;target-category&gt;. The &lt;target-name&gt; can be checked within LibreOffice’s navigator. The &lt;target-category&gt; can be outline, table, figure, etc. Then special characters within the URL should be converted to URL encoding. For example, a white space should be represented as %20.]]></summary></entry><entry><title type="html">Compile ffmpeg with CUDA</title><link href="https://jihuan-tian.github.io/computer/2023/09/08/compile-ffmpeg-with-cuda.html" rel="alternate" type="text/html" title="Compile ffmpeg with CUDA" /><published>2023-09-08T00:00:00+08:00</published><updated>2023-09-08T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/09/08/compile-ffmpeg-with-cuda</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/09/08/compile-ffmpeg-with-cuda.html"><![CDATA[<p>It is very helpful for us to compile our own ffmpeg, if we own a NVIDIA graphics card. Then those routine tasks such as screen recording using VokoscreenNG, video conference using Wemeet, movie editing using Kdenlive, animation export from Paraview, etc. can all be accelerated and relieve the burden on CPU.</p>

<p>My graphics card is NVIDIA RTX A2000. I’ve installed the NVIDIA driver version 515.65.01 and CUDA version 11.7, which can be checked by calling the command <code class="language-plaintext highlighter-rouge">nvidia-smi</code>. With this information, I went to <a href="https://git.videolan.org/?p=ffmpeg.git;a=summary">ffmpeg Git repository</a>, checked the commit messages, from which I knew <a href="https://git.videolan.org/?p=ffmpeg.git;a=commit;h=ac0408522aa68444be28e4e691bfa61ab963c617">this commit</a> supports CUDA SDK 11.1. So I checked out this version of <code class="language-plaintext highlighter-rouge">ffmpeg</code>. Next, I visited <a href="https://git.videolan.org/?p=ffmpeg/nv-codec-headers.git;a=summary">nv-codec-headers git repository</a> and found the right version for me <a href="https://git.videolan.org/?p=ffmpeg/nv-codec-headers.git;a=commit;h=b641a195edbe3ac9788e681e22c2e2fad8aacddb">here</a>.</p>

<p>Before the compiling <code class="language-plaintext highlighter-rouge">ffmpeg</code>, I installed the following development packages on my Debian Bullseye:</p>

<ul>
  <li>libchromaprint-dev</li>
  <li>frei0-plugins-dev</li>
  <li>flite1-dev</li>
  <li>libgme-dev</li>
  <li>libgsm1-dev</li>
  <li>libjack-dev</li>
  <li>libjack0</li>
  <li>libmysofa-dev</li>
  <li>librabbitmq-dev</li>
  <li>librsvg2-dev</li>
  <li>librubberband-dev</li>
  <li>libshine-dev</li>
  <li>libsnappy-dev</li>
  <li>libspeex-dev</li>
  <li>libomxil-bellagio-dev</li>
  <li>libssh-dev</li>
  <li>libtwolame-dev</li>
  <li>libvidstab-dev</li>
  <li>libxvidcore-dev</li>
  <li>libzmq3-dev</li>
  <li>libzvbi-dev</li>
  <li>lv2-dev</li>
  <li>libpocketsphinx-dev</li>
  <li>libmfx-dev</li>
  <li>libdc1394-dev</li>
  <li>libdrm-dev</li>
  <li>libiec61883-dev: N.B. after installing it, the configure script of <code class="language-plaintext highlighter-rouge">ffmpeg</code> still cannot find it.</li>
</ul>

<p>Then I ran the old <code class="language-plaintext highlighter-rouge">ffmpeg</code> installed from Debian package, which displayed its configure options. Using these as template, I added CUDA related options, such as <code class="language-plaintext highlighter-rouge">--enable-cuds-nvcc</code>, <code class="language-plaintext highlighter-rouge">--enable-libnpp</code>. The complete configure options are given below.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>./configure <span class="nt">--libdir</span><span class="o">=</span>/usr/lib/x86_64-linux-gnu <span class="nt">--incdir</span><span class="o">=</span>/usr/include/x86_64-linux-gnu <span class="nt">--arch</span><span class="o">=</span>amd64 <span class="nt">--enable-cuda-nvcc</span> <span class="nt">--enable-libnpp</span> <span class="nt">--extra-cflags</span><span class="o">=</span><span class="nt">-I</span>/usr/local/cuda/include <span class="nt">--extra-ldflags</span><span class="o">=</span><span class="nt">-L</span>/usr/local/cuda/lib64 <span class="nt">--enable-libfdk-aac</span> <span class="nt">--enable-nonfree</span> <span class="nt">--enable-gpl</span> <span class="nt">--disable-stripping</span> <span class="nt">--enable-gnutls</span> <span class="nt">--enable-ladspa</span> <span class="nt">--enable-libaom</span> <span class="nt">--enable-libass</span> <span class="nt">--enable-libbluray</span> <span class="nt">--enable-libbs2b</span> <span class="nt">--enable-libcaca</span> <span class="nt">--enable-libcdio</span> <span class="nt">--enable-libcodec2</span> <span class="nt">--enable-libdav1d</span> <span class="nt">--enable-libflite</span> <span class="nt">--enable-libfontconfig</span> <span class="nt">--enable-libfreetype</span> <span class="nt">--enable-libfribidi</span> <span class="nt">--enable-libgme</span> <span class="nt">--enable-libgsm</span> <span class="nt">--enable-libjack</span> <span class="nt">--enable-libmp3lame</span> <span class="nt">--enable-libmysofa</span> <span class="nt">--enable-libopenjpeg</span> <span class="nt">--enable-libopenmpt</span> <span class="nt">--enable-libopus</span> <span class="nt">--enable-libpulse</span> <span class="nt">--enable-librabbitmq</span> <span class="nt">--enable-librsvg</span> <span class="nt">--enable-librubberband</span> <span class="nt">--enable-libshine</span> <span class="nt">--enable-libsnappy</span> <span class="nt">--enable-libsoxr</span> <span class="nt">--enable-libspeex</span> <span class="nt">--enable-libsrt</span> <span class="nt">--enable-libssh</span> <span class="nt">--enable-libtheora</span> <span class="nt">--enable-libtwolame</span> <span class="nt">--enable-libvidstab</span> <span class="nt">--enable-libvorbis</span> <span class="nt">--enable-libvpx</span> <span class="nt">--enable-libwebp</span> <span class="nt">--enable-libx265</span> <span class="nt">--enable-libxml2</span> <span class="nt">--enable-libxvid</span> <span class="nt">--enable-libzmq</span> <span class="nt">--enable-libzvbi</span> <span class="nt">--enable-lv2</span> <span class="nt">--enable-omx</span> <span class="nt">--enable-openal</span> <span class="nt">--enable-opengl</span> <span class="nt">--enable-sdl2</span> <span class="nt">--enable-pocketsphinx</span> <span class="nt">--enable-libmfx</span> <span class="nt">--enable-libdc1394</span> <span class="nt">--enable-libdrm</span> <span class="nt">--enable-chromaprint</span> <span class="nt">--enable-frei0r</span> <span class="nt">--enable-libx264</span> <span class="nt">--enable-shared</span>
</code></pre></div></div>

<p>After compilation and installation, we can check available CUDA related codecs by running the command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/local/bin/ffmpeg <span class="nt">-codecs</span> | <span class="nb">grep </span>cuvid
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DEV.L. av1                  Alliance for Open Media AV1 (decoders: libdav1d libaom-av1 av1 av1_cuvid av1_qsv ) (encoders: libaom-av1 )
DEV.LS h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_v4l2m2m h264_qsv h264_cuvid ) (encoders: libx264 libx264rgb h264_nvenc h264_omx h264_qsv h264_v4l2m2m )
DEV.L. hevc                 H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_qsv hevc_v4l2m2m hevc_cuvid ) (encoders: libx265 hevc_nvenc hevc_qsv hevc_v4l2m2m )
DEVIL. mjpeg                Motion JPEG (decoders: mjpeg mjpeg_cuvid mjpeg_qsv ) (encoders: mjpeg mjpeg_qsv )
DEV.L. mpeg1video           MPEG-1 video (decoders: mpeg1video mpeg1_v4l2m2m mpeg1_cuvid )
DEV.L. mpeg2video           MPEG-2 video (decoders: mpeg2video mpegvideo mpeg2_v4l2m2m mpeg2_qsv mpeg2_cuvid ) (encoders: mpeg2video mpeg2_qsv )
DEV.L. mpeg4                MPEG-4 part 2 (decoders: mpeg4 mpeg4_v4l2m2m mpeg4_cuvid ) (encoders: mpeg4 libxvid mpeg4_omx mpeg4_v4l2m2m )
D.V.L. vc1                  SMPTE VC-1 (decoders: vc1 vc1_qsv vc1_v4l2m2m vc1_cuvid )
DEV.L. vp8                  On2 VP8 (decoders: vp8 vp8_v4l2m2m libvpx vp8_cuvid vp8_qsv ) (encoders: libvpx vp8_v4l2m2m )
DEV.L. vp9                  Google VP9 (decoders: vp9 vp9_v4l2m2m libvpx-vp9 vp9_cuvid vp9_qsv ) (encoders: libvpx-vp9 vp9_qsv )
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="CUDA" /><category term="ffmpeg" /><summary type="html"><![CDATA[It is very helpful for us to compile our own ffmpeg, if we own a NVIDIA graphics card. Then those routine tasks such as screen recording using VokoscreenNG, video conference using Wemeet, movie editing using Kdenlive, animation export from Paraview, etc. can all be accelerated and relieve the burden on CPU.]]></summary></entry><entry><title type="html">Control figure size and text size in GNU Octave</title><link href="https://jihuan-tian.github.io/computer/2023/09/02/control-figure-size-and-text-size-in-gnu-octave.html" rel="alternate" type="text/html" title="Control figure size and text size in GNU Octave" /><published>2023-09-02T00:00:00+08:00</published><updated>2023-09-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/09/02/control-figure-size-and-text-size-in-gnu-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/09/02/control-figure-size-and-text-size-in-gnu-octave.html"><![CDATA[<p>The following graphics object properties should be clarified.</p>

<ul>
  <li>Properties of the figure displayed on the screen
    <ul>
      <li>
        <p><code class="language-plaintext highlighter-rouge">position</code> specifies the position and size in unit of pixel for the figure window’s effective plot area, which is shown below. The default values are <code class="language-plaintext highlighter-rouge">[300 200 560 420]</code>.</p>

        <p><img src="/figures/2023-09-01_18-25-06-octave-figure-position@octave.png" alt="img" /></p>
      </li>
    </ul>
  </li>
  <li>Properties of the figure to be printed
    <ul>
      <li>
        <p><code class="language-plaintext highlighter-rouge">paperposition</code> in unit of inch. The default values <code class="language-plaintext highlighter-rouge">[2.5131 4.2035 3.4739 2.5930]</code> are determined from the figure’s default display size <code class="language-plaintext highlighter-rouge">[300 200 560 420]</code> using the monitor’s actual DPI, which can be acquired by <code class="language-plaintext highlighter-rouge">get(0, 'screenpixelsperinch')</code>.</p>

        <ul>
          <li>For paged formats (such as PS, PDF, EPS, etc.), it specifies the position and size of the printed figure on the page.</li>
          <li>For non-paged formats (such as JPG, PNG, BMP, etc.), only <code class="language-plaintext highlighter-rouge">paperposition(3)</code> and <code class="language-plaintext highlighter-rouge">paperposition(4)</code> have effect.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Properties of the paper onto which the figure is to be printed, which is only applicable to paged formats</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">papersize</code> specifies the size with the unit specified by <code class="language-plaintext highlighter-rouge">paperunits</code> (the default unit is inch) of the paper onto which the figure will be printed. The default paper size is <code class="language-plaintext highlighter-rouge">8.5*11</code> inches, which is the US letter page.</li>
      <li><code class="language-plaintext highlighter-rouge">paperorientation</code> specifies the orientation of the paper. The default orientation is portrait, which is consistent with the paper size <code class="language-plaintext highlighter-rouge">8.5*11</code> inches.</li>
    </ul>

    <p>Usually, there is no need to manually set the paper size, because it can be automatically deduced from the displayed figure size by the <code class="language-plaintext highlighter-rouge">print</code> function. This can be confirmed by checking the generated <code class="language-plaintext highlighter-rouge">*.tex</code> file below, if the <code class="language-plaintext highlighter-rouge">epslatexstandalone</code> engine is adopted:</p>

    <div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\usepackage</span><span class="na">[papersize={250.00bp,186.00bp},text={250.00bp,186.00bp}]</span><span class="p">{</span>geometry<span class="p">}</span>
</code></pre></div>    </div>

    <p>When the figure’s display size changes, the above values <code class="language-plaintext highlighter-rouge">papersize</code> and <code class="language-plaintext highlighter-rouge">text</code> will change accordingly. These values have the unit bp, i.e. big point, which is 1/72 inch. <code class="language-plaintext highlighter-rouge">250 bp*186 bp</code> are computed from the figure’s display size in unit of pixel, which are stored in <code class="language-plaintext highlighter-rouge">position(3)</code> and <code class="language-plaintext highlighter-rouge">position(4)</code>. The transformation shown below is based on the monitor’s DPI detected by Octave.</p>

    <pre><code class="language-octave">dpi = get(0, 'screenpixelsperinch')
pointsize_inch = 1/72
figure;
position = get(gcf, 'position');
floor(position(3:4) / dpi / pointsize_inch)
</code></pre>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dpi = 161.20
pointsize_inch = 0.013889
octave&gt; octave&gt; ans =
    
   250   187
</code></pre></div>    </div>
  </li>
  <li>Line width, marker size, etc. have the unit of point.</li>
</ul>

<p>Any font size specified for the figure axe or other object such as legend and text has the <code class="language-plaintext highlighter-rouge">point</code> unit for both the displayed figure and the paged format figure. However, by a direct measurement of the text height on the screen, the displayed font size on the screen actually has the <strong>pixel</strong> unit. When the figure is printed, this font size value will be treated directly as <strong>point</strong>. This explains why the text looks much smaller in a figure window than its printed version. When there are lots of text to be displayed, even though everything looks fine in the displayed figure, in the printed figure, the font size seems too large and the characters clump together. This is because the figure size is not large enough, while the font size is always the specified value in point unit. To enlarge the printed size, modify the <code class="language-plaintext highlighter-rouge">paperposition</code> property.</p>

<p><img src="/figures/2023-09-01-clumped-text-in-octave-figure.png" alt="img" /></p>

<p>Options of the <code class="language-plaintext highlighter-rouge">print</code> function which overrides some figure properties:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">-S&lt;XSIZE&gt;,&lt;YSIZE&gt;</code> specifies the plot size in pixels for raster formats including PNG, JPEG, PNG, and unusually SVG. For all vector formats, the plot size is specified in points. N.B. this option must be wrapped by double quote to prevent Octave recognizing the comma. This option overwrites <code class="language-plaintext highlighter-rouge">paperposition(3)</code> and <code class="language-plaintext highlighter-rouge">paperposition(4)</code>. This option is useful when the characters in the figure clump together and we need a larger printed figure size.</p>

    <ul>
      <li>size in pixels for raster formats such as png, jpg, etc.</li>
      <li>size in points for vector formats such as pdf, eps, etc.</li>
    </ul>

    <p><strong>If this option is used, the font size in the generated LaTeX file will be totally incorrect.</strong></p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">-F:&lt;SIZE&gt;</code> specifies font size for all text in the figure. Not recommended.</p>
  </li>
</ul>

<p>When measuring figure size on the screen, I’ve also found only <code class="language-plaintext highlighter-rouge">gv</code> can correctly display the actual (physical) size of an EPS image. Neither Okular nor Gwenview can. For viewing PNG files, Gwenview, Gimp and Okular will display the 100% scale by using the monitor’s DPI such as 161, without considering the actual ppi used by the PNG file. Usually, I print a PNG file with a high resolution, such as 500. Therefore, the image viewed with 100% scale looks more than 3 (500dpi/161dpi) times larger than its physical size.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[The following graphics object properties should be clarified.]]></summary></entry><entry><title type="html">Review on GNU Octave</title><link href="https://jihuan-tian.github.io/computer/2023/08/30/review-on-gnu-octave.html" rel="alternate" type="text/html" title="Review on GNU Octave" /><published>2023-08-30T00:00:00+08:00</published><updated>2023-08-30T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/08/30/review-on-gnu-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/08/30/review-on-gnu-octave.html"><![CDATA[<p>GNU Octave is the best choice for numerical computation and experiment!</p>

<p>I’ve kept using GNU Octave since 2004, from being a PhD candidate, to working in a corporate company and now independently developing simulation software. GNU Octave can satisfy all of my needs in doing math homework and physics simulation, writing simulation code in the early stage of company projects, and verifying mathematical theories and algorithms before implementing them for production in C++.</p>

<p>Compared to the numerical simulation environment setup from Python libraries including numpy, scipy and matplotlib, GNU Octave’s scripting language is much more natural to mathematical thinking. Meanwhile, it frees us from remembering a bunch of names for hierarchical classes and packages as those in Python. For most of the time, we don’t need to do everything in a universal and comprehensive Python ecological system. Although this seems an attractive prospect, what we actually want is simply to play with math, perform some calculations and quantitatively verify our ideas. For sure GNU Octave is the best choice for such purpose.</p>

<p>Many thanks to GNU Octave’s authors, developers and contributors!</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[GNU Octave is the best choice for numerical computation and experiment!]]></summary></entry><entry><title type="html">新的 Kindle 阅读模式</title><link href="https://jihuan-tian.github.io/computer/2023/08/27/%E6%96%B0%E7%9A%84kindle%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F.html" rel="alternate" type="text/html" title="新的 Kindle 阅读模式" /><published>2023-08-27T00:00:00+08:00</published><updated>2023-08-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/08/27/%E6%96%B0%E7%9A%84kindle%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/08/27/%E6%96%B0%E7%9A%84kindle%E9%98%85%E8%AF%BB%E6%A8%A1%E5%BC%8F.html"><![CDATA[<p>通过 Kindle 上的集中式阅读取代手机上的碎片化阅读。相对于在电脑或手机上的浏览，使用 Kindle 更容易实现“慢阅读”，而非走马观花。同时，由于 Amazon Kindle 服务已退出中国，原先通过微信推送网文到 Kindle 设备的功能已不能使用，所以需要有新的流程收集和阅读网络文章。</p>

<p>新的流程如下：</p>

<ol>
  <li>针对专业理论与技术、业余爱好领域，在 Thunderbird 中订阅 RSS 或者 News letter。</li>
  <li>每周末浏览本周更新的文章列表，将有价值的文章在 Thunderbird 中标上星号，以便今后快速列出。</li>
  <li>将这些文章在 Firefox 中打开，用 Joplin 收集为笔记。</li>
  <li>
    <p>将 Joplin 笔记批量导出为 markdown+front matter 文件，基于 GNU Make ，将其批量转换为 mobi 格式，然后通过 USB 拷贝至 Kindle 。</p>

    <p>由于 Joplin 会将导出的文件放入相应的以 Notebook 名称命名的子文件夹中，所以在选定的导出文件夹中创建顶层 Makefile ，将指定的子文件夹引入为 phony 目标。使用 <code class="language-plaintext highlighter-rouge">-C</code> 选项使 make 命令能够递归处理子文件夹中的内容。</p>

    <div class="language-makefile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">SUBDIRS</span> <span class="o">=</span> Reading Technology
    
<span class="nl">.PHONY</span><span class="o">:</span> <span class="nf">subdirs $(SUBDIRS)</span>
    
<span class="nl">subdirs</span><span class="o">:</span> <span class="nf">$(SUBDIRS)</span>
    
<span class="nl">$(SUBDIRS)</span><span class="o">:</span>
        <span class="err">$(MAKE)</span> <span class="err">-C</span> <span class="err">$@</span>
</code></pre></div>    </div>

    <p>在子文件夹中的 Makefile 如下。其中，调用了脚本 <code class="language-plaintext highlighter-rouge">md2mobi.sh</code> 转换文件格式。</p>

    <div class="language-makefile highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">mobi_files</span> <span class="o">:=</span> <span class="nf">$(</span><span class="nb">patsubst</span> %.md,%.mobi,<span class="nf">$(</span><span class="nb">wildcard</span> <span class="k">*</span>.md<span class="nf">))</span>
    
<span class="nl">all</span><span class="o">:</span> <span class="nf">$(mobi_files)</span>
    
<span class="nl">%.mobi </span><span class="o">:</span> <span class="nf">%.md</span>
        <span class="err">md2mobi.sh</span> <span class="err">../en-gb-metadata.xml</span> <span class="s2">"$&lt;"</span>
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">md2mobi.sh</code> 先使用 pandoc 将 Markdown 转为 epub 格式。然后使用 Calibre 提供的 <code class="language-plaintext highlighter-rouge">ebook-convert</code> 命令将 epub 格式转为 mobi 格式（注：目前 Kindle 已不支持 epub 格式）。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>md2epub.sh <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span>
ebook-convert <span class="s2">"</span><span class="k">${</span><span class="nv">2</span><span class="p">%md</span><span class="k">}</span><span class="s2">epub"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">2</span><span class="p">%md</span><span class="k">}</span><span class="s2">mobi"</span>
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">md2epub.sh</code> 内容如下。</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">https_proxy</span><span class="o">=</span>http://192.168.0.100:1080<span class="p">;</span> <span class="nb">export </span><span class="nv">http_proxy</span><span class="o">=</span>http://192.168.0.100:1080<span class="p">;</span> pandoc <span class="nt">-f</span> markdown <span class="nt">-t</span> epub <span class="nt">--epub-metadata</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="nt">-o</span> <span class="s2">"</span><span class="k">${</span><span class="nv">2</span><span class="p">%md</span><span class="k">}</span><span class="s2">epub"</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span>
</code></pre></div>    </div>

    <p>可看到，上面设定了 http 与 https 代理，用于下载无法正常访问的图片资源。脚本的第一个参数是一个 XML 文件，用于指定 epub 文件的语言。其内容如下：</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dc:language&gt;</span>en-GB<span class="nt">&lt;/dc:language&gt;</span>
</code></pre></div>    </div>

    <p>对于英语文章如果不作此设定，则最终生成的 mobi 文件在 Kindle 上阅读时，字体样式和大小无法自动重排并调整，往往会字体过小或者笔划太细，看起来很不舒服。</p>

    <p>脚本的第二个参数则为 markdown 文件名。</p>
  </li>
  <li>在下周逐个阅读文章。在此过程中记好笔记，及时查单词与短语。</li>
  <li>下周末整理单词至欧路词典，整理短语与例句到 Anki 卡片。将 Kindle 中的 <code class="language-plaintext highlighter-rouge">documents/My Clippings.txt</code> 同步到电脑，归整到读书笔记中。</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Kindle" /><category term="阅读" /><summary type="html"><![CDATA[通过 Kindle 上的集中式阅读取代手机上的碎片化阅读。相对于在电脑或手机上的浏览，使用 Kindle 更容易实现“慢阅读”，而非走马观花。同时，由于 Amazon Kindle 服务已退出中国，原先通过微信推送网文到 Kindle 设备的功能已不能使用，所以需要有新的流程收集和阅读网络文章。]]></summary></entry><entry><title type="html">Xorg occupies 100% CPU usage which makes Linux system freeze</title><link href="https://jihuan-tian.github.io/computer/2023/08/20/xorg-occupies-100-percent-cpu-usage-which-makes-linux-system-freeze.html" rel="alternate" type="text/html" title="Xorg occupies 100% CPU usage which makes Linux system freeze" /><published>2023-08-20T00:00:00+08:00</published><updated>2023-08-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/08/20/xorg-occupies-100-percent-cpu-usage-which-makes-linux-system-freeze</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/08/20/xorg-occupies-100-percent-cpu-usage-which-makes-linux-system-freeze.html"><![CDATA[<p>This phenomenon appears randomly and seems more frequent when the system is idle. For example, if I wait and let the monitor in power saving mode, or if I simply lock the screen for a while, when I come back again, the system is more probable to freeze.</p>

<p>I checked the system log <code class="language-plaintext highlighter-rouge">/var/log/syslog</code> and found the message “GPU has fallen off the bus” with the error code <code class="language-plaintext highlighter-rouge">Xid=79</code>. This code implies power issues. However, my NVIDIA card only consumes less than 30W power and for most of the time, it works properly and the said problem only appear while system is idle. Therefore, I’m quite sure that my NVIDIA card and power supply unit have no power issues.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Aug 16 19:25:51 QuantumHome kernel: [85385.218434] NVRM: GPU at PCI:0000:01:00: GPU
-cf1e233c-f6d6-2924-c14e-5a7dd3f34016
Aug 16 19:25:51 QuantumHome kernel: [85385.218456] NVRM: Xid (PCI:0000:01:00): 79,
pid='&lt;unknown&gt;', name=&lt;unknown&gt;, GPU has fallen off the bus.
Aug 16 19:25:51 QuantumHome kernel: [85385.218460] NVRM: GPU 0000:01:00.0: GPU has
fallen off the bus.
Aug 16 19:25:51 QuantumHome kernel: [85385.218490] NVRM: GPU 0000:01:00.0: GPU seri
al number is &lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;
&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;
&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;
&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;
&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;&lt;FF&gt;.
Aug 16 19:25:51 QuantumHome kernel: [85385.218505] NVRM: A GPU crash dump has been
created. If possible, please run
Aug 16 19:25:51 QuantumHome kernel: [85385.218505] NVRM: nvidia-bug-report.sh as ro
ot to collect this data before
Aug 16 19:25:51 QuantumHome kernel: [85385.218505] NVRM: the NVIDIA kernel module is unloaded.
Aug 16 19:26:30 QuantumHome kernel: [85423.585708] nvidia-modeset: ERROR: GPU:0: Failed to query display engine channel state: 0x0000c67e:0:0:0x0000000f
</code></pre></div></div>

<p>I executed <code class="language-plaintext highlighter-rouge">sudo nvidia-bug-report.sh</code>. In the generated report, I could see several DKMS builds of NVIDIA kernel module after recent Linux kernel upgrades:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>*** /var/lib/dkms/nvidia/515.65.01/5.10.0-21-amd64/x86_64/log/make.log
*** ls: -rw-r--r-- 1 root root 28813 2023-01-24 20:28:41.040959053 +0800 /var/lib/d
kms/nvidia/515.65.01/5.10.0-21-amd64/x86_64/log/make.log
DKMS make.log for nvidia-515.65.01 for kernel 5.10.0-21-amd64 (x86_64)

*** /var/lib/dkms/nvidia/515.65.01/5.10.0-23-amd64/x86_64/log/make.log
*** ls: -rw-r--r-- 1 root root 28813 2023-05-14 06:17:10.852339523 +0800 /var/lib/dkms/nvidia/515.65.01/5.10.0-23-amd64/x86_64/log/make.log
DKMS make.log for nvidia-515.65.01 for kernel 5.10.0-23-amd64 (x86_64)

*** /var/lib/dkms/nvidia/515.65.01/5.10.0-24-amd64/x86_64/log/make.log
*** ls: -rw-r--r-- 1 root root 28813 2023-08-12 06:49:38.949305502 +0800 /var/lib/dkms/nvidia/515.65.01/5.10.0-24-amd64/x86_64/log/make.log
DKMS make.log for nvidia-515.65.01 for kernel 5.10.0-24-amd64 (x86_64)
</code></pre></div></div>

<p>Then I booted the system into the older kernels 5.10.0-21 and 5.10.0-23, both of them performed even worse: as long as I locked the screen, the system would immediately freeze. However, in the first half of this year, I did not meet such system freeze problem. Meanwhile, the NVIDIA driver 515.65.01 have been installed since last December without any update. Therefore, I guess the cause of the problem may not be the Linux kernel or NVIDIA driver.</p>

<p>Focusing on the power factor, the culprit may be some PCI power management strategy. According to <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/power_management_guide/aspm">here</a>, it is probably due to ASPM:</p>

<blockquote>
  <p>Active-State Power Management (ASPM) saves power in the Peripheral Component Interconnect Express (PCI Express or PCIe) subsystem by setting a lower power state for PCIe links when the devices to which they connect are not in use. ASPM controls the power state at both ends of the link, and saves power in the link even when the device at the end of the link is in a fully powered-on state.</p>
</blockquote>

<p>So I executed <code class="language-plaintext highlighter-rouge">sudo vi /etc/default/grub</code> and appended <code class="language-plaintext highlighter-rouge">pcie_aspm=off</code> to <code class="language-plaintext highlighter-rouge">GRUB_CMDLINE_LINUX_DEFAULT</code>. Then I ran <code class="language-plaintext highlighter-rouge">sudo update-grub</code> and rebooted the system. Now the system have run for a whole day smoothly. Hope such boot option modification will solve the problem.</p>

<p>Other tried solutions which now I think may not be related:</p>

<ol>
  <li>Run <code class="language-plaintext highlighter-rouge">nvidia-settings</code>, set the PowerMizer preferred mode as “maximum”.</li>
  <li>Turn off the <code class="language-plaintext highlighter-rouge">nvidia-suspend</code> service.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="NVIDIA" /><category term="bug" /><summary type="html"><![CDATA[This phenomenon appears randomly and seems more frequent when the system is idle. For example, if I wait and let the monitor in power saving mode, or if I simply lock the screen for a while, when I come back again, the system is more probable to freeze.]]></summary></entry><entry><title type="html">Preserve tags, comments and ratings for files on Linux</title><link href="https://jihuan-tian.github.io/computer/2023/08/01/preserve-tags-comments-and-ratings-for-files-on-linux.html" rel="alternate" type="text/html" title="Preserve tags, comments and ratings for files on Linux" /><published>2023-08-01T00:00:00+08:00</published><updated>2023-08-01T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/08/01/preserve-tags-comments-and-ratings-for-files-on-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/08/01/preserve-tags-comments-and-ratings-for-files-on-linux.html"><![CDATA[<p>Tags, comments and ratings information for files on Linux are stored as the file extended attributes instead of in a centralized database. Such information can be set and modified directly within the Dolphin file manager, which is internally handled by the <code class="language-plaintext highlighter-rouge">baloo-kf5</code> Debian package.</p>

<p>Such information can also be acquired via the <code class="language-plaintext highlighter-rouge">getfattr</code> command. For example,</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>getfattr -d 2013-10-13.odt 
# file: 2013-10-13.odt
user.baloo.rating="8"
user.xdg.comment="This is a test comment."
user.xdg.tags="education,reading"
</code></pre></div></div>

<p>Unluckily, file copying and pasting within Dolphin does not preserve the above extended file attributes. We can only achieve this by using <code class="language-plaintext highlighter-rouge">cp</code> with the <code class="language-plaintext highlighter-rouge">--preserve=xattr</code> option in the command line. For me, I also regularly use <code class="language-plaintext highlighter-rouge">rsync</code> to perform file backup and synchronization, then the <code class="language-plaintext highlighter-rouge">-X</code> option should be appended to <code class="language-plaintext highlighter-rouge">rsync</code> in order to copy the extended file attributes.</p>

<h1 id="references">References</h1>

<ul>
  <li><a href="https://vhanda.in/blog/2014/07/tagging-your-files/">Tagging your files</a></li>
  <li><a href="https://www.freedesktop.org/wiki/CommonExtendedAttributes/">Guidelines for extended attributes</a></li>
  <li><a href="https://www.lesbonscomptes.com/pages/extattrs.html">https://www.lesbonscomptes.com/pages/extattrs.html</a></li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="rsync" /><category term="KDE" /><category term="command" /><category term="Dolphin" /><summary type="html"><![CDATA[Tags, comments and ratings information for files on Linux are stored as the file extended attributes instead of in a centralized database. Such information can be set and modified directly within the Dolphin file manager, which is internally handled by the baloo-kf5 Debian package.]]></summary></entry><entry><title type="html">Write LaTeX display equations with no numbering in Org mode</title><link href="https://jihuan-tian.github.io/computer/2023/07/28/write-latex-display-equations-with-no-numbering-in-org-mode.html" rel="alternate" type="text/html" title="Write LaTeX display equations with no numbering in Org mode" /><published>2023-07-28T00:00:00+08:00</published><updated>2023-07-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/07/28/write-latex-display-equations-with-no-numbering-in-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/07/28/write-latex-display-equations-with-no-numbering-in-org-mode.html"><![CDATA[<p>The variable <code class="language-plaintext highlighter-rouge">org-format-latex-options</code>’s <code class="language-plaintext highlighter-rouge">:matchers</code> field is used to configure how Org mode detects a LaTeX fragment. However, according to the comment of the function <code class="language-plaintext highlighter-rouge">org-inside-LaTeX-fragment-p</code>,</p>

<blockquote>
  <p>Even though the matchers for math are configurable, this function assumes that \\begin, \\(, \\[, and $$ are always used. Only the single dollar delimiters are skipped when they have been removed by customization.</p>
</blockquote>

<p>Therefore, Org mode always tries to recognize the outer-most <code class="language-plaintext highlighter-rouge">\begin{environment-name}...\end{environment-name}</code> as a display equation and everything between them as the environment contents. This behavior makes Org mode unable to correctly render the following equation.</p>

<p>Example 1: the first environment name <code class="language-plaintext highlighter-rouge">pmatrix</code> happens to be the same as the second one, then the LaTeX fragment image can be generated, but still <code class="language-plaintext highlighter-rouge">\[ ... \]</code> are left behind.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">\[</span><span class="nb">
  </span><span class="nv">\begin</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb">a </span><span class="p">&amp;</span><span class="nb"> b </span><span class="nv">\\</span><span class="nb"> c </span><span class="p">&amp;</span><span class="nb"> d </span><span class="nv">\end</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb"> </span><span class="o">+</span><span class="nb"> 
  </span><span class="nv">\begin</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb">a </span><span class="p">&amp;</span><span class="nb"> b </span><span class="nv">\\</span><span class="nb"> c </span><span class="p">&amp;</span><span class="nb"> d </span><span class="nv">\end</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div></div>

<p><img src="/figures/2023-07-28_14-51-59-display-equation-in-org-mode-example1.png" alt="img" /></p>

<p>Example 2: the first environment name <code class="language-plaintext highlighter-rouge">pmatrix</code> does match the second one <code class="language-plaintext highlighter-rouge">bmatrix</code>, Org mode then reports an error and does not produce any image.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">\[</span><span class="nb">
  </span><span class="nv">\begin</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb">a </span><span class="p">&amp;</span><span class="nb"> b </span><span class="nv">\\</span><span class="nb"> c </span><span class="p">&amp;</span><span class="nb"> d </span><span class="nv">\end</span><span class="p">{</span><span class="nb">pmatrix</span><span class="p">}</span><span class="nb"> </span><span class="o">+</span><span class="nb"> 
  </span><span class="nv">\begin</span><span class="p">{</span><span class="nb">bmatrix</span><span class="p">}</span><span class="nb">a </span><span class="p">&amp;</span><span class="nb"> b </span><span class="nv">\\</span><span class="nb"> c </span><span class="p">&amp;</span><span class="nb"> d </span><span class="nv">\end</span><span class="p">{</span><span class="nb">bmatrix</span><span class="p">}</span><span class="nb">
</span><span class="p">\]</span>
</code></pre></div></div>

<p>Open the temporary LaTeX file, we can see there nothing after <code class="language-plaintext highlighter-rouge">\begin{pmatrix}</code>.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="k">\color</span><span class="p">{</span>fg<span class="p">}</span>
<span class="nt">\begin{pmatrix}</span><span class="c">%</span>
<span class="p">}</span>

<span class="nt">\end{document}</span>
</code></pre></div></div>

<p>Solution to the above problem: always use <code class="language-plaintext highlighter-rouge">\begin{equation*} ... \end{equation*}</code> to write display equations with no numbering in Org mode.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{equation*}</span>
  <span class="nt">\begin{pmatrix}</span>a <span class="p">&amp;</span> b <span class="k">\\</span> c <span class="p">&amp;</span> d <span class="nt">\end{pmatrix}</span> + 
  <span class="nt">\begin{bmatrix}</span>a <span class="p">&amp;</span> b <span class="k">\\</span> c <span class="p">&amp;</span> d <span class="nt">\end{bmatrix}</span>
<span class="nt">\end{equation*}</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LaTeX" /><category term="Org-mode" /><category term="Emacs" /><summary type="html"><![CDATA[The variable org-format-latex-options’s :matchers field is used to configure how Org mode detects a LaTeX fragment. However, according to the comment of the function org-inside-LaTeX-fragment-p,]]></summary></entry><entry><title type="html">Insert images to Freeplane using relative links</title><link href="https://jihuan-tian.github.io/computer/2023/07/23/insert-images-to-freeplane-using-relative-links.html" rel="alternate" type="text/html" title="Insert images to Freeplane using relative links" /><published>2023-07-23T00:00:00+08:00</published><updated>2023-07-23T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/07/23/insert-images-to-freeplane-using-relative-links</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/07/23/insert-images-to-freeplane-using-relative-links.html"><![CDATA[<p>Purpose: insert images into Freeplane mindmaps using relative links to local files, so that the mindmaps are portable to a different folder or computer.</p>

<p>The behavior of inserting images in Freeplane is as below.</p>

<ul>
  <li>Right clicking on a node and then adding a local image to it will insert an absolute link, even though in the “Environment” preferences, hyperlink types has been set to <code class="language-plaintext highlighter-rouge">relative</code>. This issue can be solved by manually editing the <code class="language-plaintext highlighter-rouge">.mm</code> file and replacing all absolute links with relative ones.
    <p align="center"><img src="/figures/2023-07-23_17-06-56-relative-hyperlink-type@freeplane.png" alt="Freeplane configuration for hyperlink types" /></p>
    <p align="center">Freeplane configuration for hyperlink types</p>
  </li>
  <li>For an image copied from the internet and directly pasted into Freeplane, Freeplane will first make a local copy, then insert it using relative path, which is desired.</li>
  <li>For an local image pasted directly into Freeplane, Freeplane will link to this image file using relative path, which is desired.</li>
  <li>The above function provided by Freeplane is enough and the <code class="language-plaintext highlighter-rouge">InsertInlineImage</code> add-on is not needed anymore.</li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Freeplane" /><summary type="html"><![CDATA[Purpose: insert images into Freeplane mindmaps using relative links to local files, so that the mindmaps are portable to a different folder or computer.]]></summary></entry><entry><title type="html">Convert Joplin Markdown notes without math to mobi for reading on Kindle</title><link href="https://jihuan-tian.github.io/computer/2023/07/18/convert-joplin-markdown-notes-without-math-to-mobi-for-reading-on-kindle.html" rel="alternate" type="text/html" title="Convert Joplin Markdown notes without math to mobi for reading on Kindle" /><published>2023-07-18T00:00:00+08:00</published><updated>2023-07-18T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/07/18/convert-joplin-markdown-notes-without-math-to-mobi-for-reading-on-kindle</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/07/18/convert-joplin-markdown-notes-without-math-to-mobi-for-reading-on-kindle.html"><![CDATA[<p>When there are no mathematical symbols or equations in Joplin notes, we had better use the mobi format to read them on Kindle. At present, the conversion is performed in three steps.</p>

<ol>
  <li>Export Joplin notes to <code class="language-plaintext highlighter-rouge">Markdown + Front Matter</code>.</li>
  <li>
    <p>Convert the exported Markdown files to the epub format.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="c"># @file: md2epub.sh</span>
<span class="nb">export </span><span class="nv">https_proxy</span><span class="o">=</span>http://192.168.0.100:1080<span class="p">;</span> <span class="nb">export </span><span class="nv">http_proxy</span><span class="o">=</span>http://192.168.0.100:1080<span class="p">;</span> pandoc <span class="nt">-f</span> markdown <span class="nt">-t</span> epub <span class="nt">--epub-metadata</span><span class="o">=</span><span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span> <span class="nt">-o</span> <span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">%md</span><span class="k">}</span><span class="s2">epub"</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>
</code></pre></div>    </div>

    <p>In the above Bash script, before executing <code class="language-plaintext highlighter-rouge">pandoc</code>, https and http proxy servers are specified, which are used for downloading images from abroad. The pandoc option <code class="language-plaintext highlighter-rouge">--epub-metadata</code> is used to specify the language information in the converted document. According to <a href="https://pandoc.org/chunkedhtml-demo/11.1-epub-metadata.html">here</a>, the language should be in the <a href="https://www.rfc-editor.org/info/bcp47">BCP7</a> format, such as <code class="language-plaintext highlighter-rouge">en-US</code>, <code class="language-plaintext highlighter-rouge">en-GB</code>, <code class="language-plaintext highlighter-rouge">zh-CN</code>, <code class="language-plaintext highlighter-rouge">zh-TW</code>, etc. From <a href="https://en.wikipedia.org/wiki/IETF_language_tag">Wikipedia</a>, a list of common language tags can be found. The metadata file is in XML format as below.</p>

    <div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dc:language&gt;</span>en-GB<span class="nt">&lt;/dc:language&gt;</span>
</code></pre></div>    </div>

    <p>The above language configuration is very important. Otherwise, when the finally obtained mobi file is opened in Kindle, assume it is an English article, no English fonts can be configured but only Chinese fonts.</p>
  </li>
  <li>
    <p>Convert the epub files to mobi format by using the <code class="language-plaintext highlighter-rouge">ebook-convert</code> command provided by Calibre.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ebook-convert <span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">%md</span><span class="k">}</span><span class="s2">epub"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">%md</span><span class="k">}</span><span class="s2">mobi"</span> <span class="nt">--no-inline-toc</span>
</code></pre></div>    </div>
  </li>
</ol>

<p>Combine step 2 and step 3 into a single script:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>
<span class="c"># @file: md2mobi.sh</span>
md2epub.sh <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$2</span><span class="s2">"</span>
ebook-convert <span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">%md</span><span class="k">}</span><span class="s2">epub"</span> <span class="s2">"</span><span class="k">${</span><span class="nv">1</span><span class="p">%md</span><span class="k">}</span><span class="s2">mobi"</span> <span class="nt">--no-inline-toc</span>
</code></pre></div></div>

<p>To convert all the Markdown files in the current folder, execute this command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> <span class="k">*</span>.md | xargs <span class="nt">-I</span> <span class="s2">"{}"</span> md2mobi.sh <span class="s2">"{}"</span> ../en-gb-metadata.xml
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Kindle" /><category term="Joplin" /><category term="Pandoc" /><summary type="html"><![CDATA[When there are no mathematical symbols or equations in Joplin notes, we had better use the mobi format to read them on Kindle. At present, the conversion is performed in three steps.]]></summary></entry><entry><title type="html">Setup SSH server using public key authentication</title><link href="https://jihuan-tian.github.io/computer/2023/07/02/setup-ssh-server-using-public-key-authentication.html" rel="alternate" type="text/html" title="Setup SSH server using public key authentication" /><published>2023-07-02T00:00:00+08:00</published><updated>2023-07-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/07/02/setup-ssh-server-using-public-key-authentication</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/07/02/setup-ssh-server-using-public-key-authentication.html"><![CDATA[<p>Before setting up a SSH server at home for access from outside, such as from our mobile phones, we need to apply a dynamic public IP from the ISP. Because the server is usually hidden from the public network by NAT (Network address translation), we should create a set of port mapping rules in the optical modem and/or WIFI router(s) until reaching our SSH server port.</p>

<p>To prevent malicious brute-force password breaking, use public key authentication is safer than the traditional password authentication. The procedures are as follows.</p>

<ol>
  <li>
    <p>Edit SSH server configuration file <code class="language-plaintext highlighter-rouge">/etc/ssh/sshd_config</code> with the following modifications:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Port &lt;port&gt;
PermitRootLogin no
PubkeyAuthentication yes
PasswordAuthentication no
ClientAliveInterval 300
X11Forwarding no
AllowUsers &lt;system-user-name&gt;
</code></pre></div>    </div>
  </li>
  <li>
    <p>Restart SSH server</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo</span> /etc/init.d/ssh restart
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create a pair of keys on the client. N.B. <code class="language-plaintext highlighter-rouge">ed25519</code> is safer and efficient than RSA encryption. If the client runs Linux, simply execute the <code class="language-plaintext highlighter-rouge">ssh-keygen</code> command:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh-keygen <span class="nt">-t</span> ed25519
</code></pre></div>    </div>

    <p>After running this command, a file <code class="language-plaintext highlighter-rouge">id_ed25519.pub</code> will be generated.</p>

    <p>Since I will also control my Linux server via Shortcut SSH commands on iOS, the above keys can be automatically generated by iOS if I select the authentication method as “SSH key”.</p>
  </li>
  <li>Send the <code class="language-plaintext highlighter-rouge">id_ed25519.pub</code> file generated by <code class="language-plaintext highlighter-rouge">ssh-keygen</code> or copy the public key generated by iOS to the server.</li>
  <li>
    <p>Add the public key from the client to <code class="language-plaintext highlighter-rouge">~/.ssh/authorized_keys</code> on the server.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">touch</span> ~/.ssh/authorized_keys
<span class="nb">cat </span>id_ed25519.pub <span class="o">&gt;&gt;</span> ~/.ssh/authorized_keys
<span class="nb">rm </span>id_ed25519.pub
</code></pre></div>    </div>
  </li>
</ol>

<p>Up to now, the configuration for public key authentication is complete. We can login to the server as below:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ssh <span class="nt">-p</span> &lt;port&gt; <span class="nt">-l</span> &lt;username&gt; &lt;ip&gt;
</code></pre></div></div>

<p>Or we can directly use <code class="language-plaintext highlighter-rouge">scp</code> to transfer files between the server and the client:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>scp <span class="o">[</span><span class="nt">-r</span><span class="o">]</span> <span class="nt">-P</span> &lt;port&gt; &lt;local-path&gt; &lt;username&gt;@&lt;server-ip&gt;:&lt;remote-path&gt;
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="network" /><category term="Linux" /><summary type="html"><![CDATA[Before setting up a SSH server at home for access from outside, such as from our mobile phones, we need to apply a dynamic public IP from the ISP. Because the server is usually hidden from the public network by NAT (Network address translation), we should create a set of port mapping rules in the optical modem and/or WIFI router(s) until reaching our SSH server port.]]></summary></entry><entry><title type="html">Definitive solution for Eclipse indexer getting stuck</title><link href="https://jihuan-tian.github.io/computer/2023/06/28/definitive-solution-for-eclipse-indexer-getting-stuck.html" rel="alternate" type="text/html" title="Definitive solution for Eclipse indexer getting stuck" /><published>2023-06-28T00:00:00+08:00</published><updated>2023-06-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/06/28/definitive-solution-for-eclipse-indexer-getting-stuck</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/06/28/definitive-solution-for-eclipse-indexer-getting-stuck.html"><![CDATA[<p>When I work on CUDA C++ project in Eclipse, the indexer often gets stuck in two situations:</p>

<ol>
  <li>when it parses a <code class="language-plaintext highlighter-rouge">*.hcu</code> file;</li>
  <li>it hangs with the message “waiting for exclusive index access”.</li>
</ol>

<p>Before solving the indexer problem, make sure all necessary include paths have been added to Eclipse’s project settings, i.e. <code class="language-plaintext highlighter-rouge">Project Properties</code> → <code class="language-plaintext highlighter-rouge">Paths and Symbols</code> → <code class="language-plaintext highlighter-rouge">Includes</code>. Even though some user defined include paths in the project have been correctly setup in <code class="language-plaintext highlighter-rouge">CMakeLists.txt</code>, for example, in my BEM project, I have defined</p>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">INCLUDE_DIRECTORIES</span><span class="p">(</span><span class="si">${</span><span class="nv">CMAKE_SOURCE_DIR</span><span class="si">}</span>/include<span class="p">)</span>
</code></pre></div></div>

<p>this path cannot be recognized by Eclipse, which should be manually added to the project settings.</p>

<p>For the first issue, I have verified that a successful solution is to separate the source code indexing into two stages: 1. index those pure C++ files, 2. index CUDA files. The detailed procedures are:</p>

<ol>
  <li>Close Eclipse.</li>
  <li>Remove all CUDA files, i.e. <code class="language-plaintext highlighter-rouge">*.hcu</code> files or even <code class="language-plaintext highlighter-rouge">*.cu</code> files, from the project.</li>
  <li>Go to the folder <code class="language-plaintext highlighter-rouge">$workspace/.metadata/.plugins/org.eclipse.cdt.core/</code> (where <code class="language-plaintext highlighter-rouge">$workspace</code> is the Eclipse workspace folder), delete the project’s <code class="language-plaintext highlighter-rouge">pdom</code> file. <em>This step only ensures that everything starts anew, which is optional.</em></li>
  <li>Restart Eclipse and let the indexer rebuild the index. Because there are no CUDA source code in the project, the indexer should finish in a short time.</li>
  <li>Close Eclipse.</li>
  <li>Move back CUDA <code class="language-plaintext highlighter-rouge">*.hcu</code> and <code class="language-plaintext highlighter-rouge">*.cu</code> files into the project.</li>
  <li>Restart Eclipse.</li>
  <li>Right click on the project name in the Project Explorer, select <code class="language-plaintext highlighter-rouge">Index</code> → <code class="language-plaintext highlighter-rouge">Search for Unresolved Includes</code>. This will list all those unresolved header files in the <code class="language-plaintext highlighter-rouge">Search</code> panel.</li>
  <li>To let the indexer process these just added <code class="language-plaintext highlighter-rouge">*.hcu</code> files, select <code class="language-plaintext highlighter-rouge">Index</code> → <code class="language-plaintext highlighter-rouge">Update with Modified Files</code>. We can see that Eclipse treats these newly added files as “Modified Files”. N.B. Do not select <code class="language-plaintext highlighter-rouge">Index</code> → <code class="language-plaintext highlighter-rouge">Re-resolve Unresolved Includes</code>, which does not work.</li>
</ol>

<p>For the second situation that the indexer “waiting for exclusive index access”, close all opened editors will release locks on those files and the indexer should continue its work.</p>

<p>If the problem is still unsolved, restart Eclipse may help. If the problem is still unsolved, try these solutions several times with patience.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Eclipse" /><summary type="html"><![CDATA[When I work on CUDA C++ project in Eclipse, the indexer often gets stuck in two situations:]]></summary></entry><entry><title type="html">Encrypted communication via Jami</title><link href="https://jihuan-tian.github.io/computer/2023/06/11/encrypted-communication-via-jami.html" rel="alternate" type="text/html" title="Encrypted communication via Jami" /><published>2023-06-11T00:00:00+08:00</published><updated>2023-06-11T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/06/11/encrypted-communication-via-jami</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/06/11/encrypted-communication-via-jami.html"><![CDATA[<p>Jami is a GPL licensed communication tool with end-to-end encryption, which can be used for sending instant messages, making audio calls and holding video conferences with family members or friends. For those users concerned about data safety and communication privacy, Jami is an ideal and definitive choice.</p>

<p>Even though Jami claims to be a p2p communication tool, it still needs to join a public distributed network, i.e. <a href="https://en.wikipedia.org/wiki/Distributed_hash_table">distributed hash table</a> (DHT), as an independent node to announce the availability and connectivity of our accounts as well as acquiring the knowledge about other nodes. When a Jami client starts for the first time, it tries to connect to a bootstrap node <code class="language-plaintext highlighter-rouge">bootstrap.jami.net:4222</code>, from which a persistent cache will be built storing the node information. In case this server is not accessible in the future, I need to setup my own <a href="https://github.com/savoirfairelinux/opendht">OpenDHT</a> server.</p>

<p>Another issue is peers communicating via Jami are usually hidden from one another behind their respective firewalls or Wifi routers. Then another server with a public IP is necessary to bridge the peers by relaying the data stream during communication. This is called the TURN server. The default TURN server provided by Jami is <code class="language-plaintext highlighter-rouge">turn.jami.net</code>, with username <code class="language-plaintext highlighter-rouge">ring</code>, password <code class="language-plaintext highlighter-rouge">ring</code>, and realm <code class="language-plaintext highlighter-rouge">ring</code>. However, using this third-party server cannot ensure communication quality, especially when we need high resolution video calls. Meanwhile, the accessibility to this server cannot be ensured in the long run. Therefore, I also need to setup my own TURN server.</p>

<p>I have two cascading Wifi routers in my home, one is provided by the ISP, whose Wifi functionality is not stable and is actually disabled; the other is my own router providing the actual Wifi network across the room. Because the WLAN port has been assigned a dynamic public IP by the ISP, setting up the said TURN server is feasible. Even though my server is behind the two routers, port mapping can be enabled to expose my server to the outside world.</p>

<h1 id="setup-opendht-server">Setup OpenDHT server</h1>

<ul>
  <li>Install the <code class="language-plaintext highlighter-rouge">dhtnode</code> package from Debian.</li>
  <li>
    <p>Edit <code class="language-plaintext highlighter-rouge">/etc/default/dhtnode</code>, let the local OpenDHT node as a daemon listen at the port <code class="language-plaintext highlighter-rouge">&lt;opendht-port&gt;</code>, without connecting to another bootstrap server, i.e. without specifying the <code class="language-plaintext highlighter-rouge">-b</code> option. This option should only be used from an <code class="language-plaintext highlighter-rouge">opendht</code> node as a client.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DHT_ARGS=-p &lt;opendht-port&gt;
</code></pre></div>    </div>

    <p>Other command line options for <code class="language-plaintext highlighter-rouge">dhtnode</code> which may be useful:</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">-p</code>: local UDP port to bind. The default value is 4222.</li>
      <li><code class="language-plaintext highlighter-rouge">-n</code>: specify a network id (integer). Nodes with different network ids won’t talk to each other. Defaults to the main public network (network id 0). However, there is no place to specify this argument in Jami, I do not use it in my configuration.</li>
      <li><code class="language-plaintext highlighter-rouge">-v</code>: enables logging, to standard output by default</li>
      <li><code class="language-plaintext highlighter-rouge">-L</code>: logs to syslog</li>
      <li><code class="language-plaintext highlighter-rouge">-l</code>: logs to a specific file</li>
    </ul>
  </li>
  <li>
    <p>Start the <code class="language-plaintext highlighter-rouge">dhtnode</code></p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl start dhtnode
</code></pre></div>    </div>
  </li>
  <li>
    <p>Automatically start at system boot:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo systemctl enable dhtnode
</code></pre></div>    </div>
  </li>
</ul>

<p>More information can be found here:</p>

<ul>
  <li><a href="https://github.com/savoirfairelinux/opendht/wiki/Running-a-node-with-dhtnode">https://github.com/savoirfairelinux/opendht/wiki/Running-a-node-with-dhtnode</a></li>
  <li><a href="https://stackoverflow.com/questions/60425311/how-to-connect-to-peers-in-opendht">https://stackoverflow.com/questions/60425311/how-to-connect-to-peers-in-opendht</a></li>
</ul>

<h1 id="setup-turn-server">Setup TURN server</h1>

<ul>
  <li>Install the <code class="language-plaintext highlighter-rouge">coturn</code> package from Debian.</li>
  <li>
    <p>Edit configuration file <code class="language-plaintext highlighter-rouge">/etc/turnserver.conf</code>, where I disabled TCP and UDP protocol and only keep TLS and DTLS, which are safer. The <code class="language-plaintext highlighter-rouge">min-port</code> and <code class="language-plaintext highlighter-rouge">max-port</code> specify the port range for UDP relay end points, which are used locally by Jami and need not be opened in iptables.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># listening-port=3478
no-udp
no-tcp
tls-listening-port=&lt;turn-tls-port&gt;
min-port=63100
max-port=63200
fingerprint
lt-cred-mech
realm=&lt;realm-name&gt;
syslog
no-cli
</code></pre></div>    </div>

    <p>The log is written to <code class="language-plaintext highlighter-rouge">syslog</code>, which can be checked by <code class="language-plaintext highlighter-rouge">sudo journalctl -u coturn</code>.</p>
  </li>
  <li>
    <p>Add a TURN server user, which will be used by Jami clients.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo turnadmin -a -u jihuan -p &lt;password&gt; -r quantumman
</code></pre></div>    </div>
  </li>
</ul>

<p>More information can be found here:</p>

<ul>
  <li><a href="https://docs.jami.net/developer/setting-up-your-own-turn-server.html">https://docs.jami.net/developer/setting-up-your-own-turn-server.html</a></li>
  <li><a href="https://matrix-org.github.io/synapse/latest/setup/turn/coturn.html">https://matrix-org.github.io/synapse/latest/setup/turn/coturn.html</a></li>
</ul>

<h1 id="port-mapping-in-wifi-routers">Port mapping in Wifi routers</h1>

<p>The port numbers exposed to the public in the Wifi routers should be mapped to the internal ports adopted by the OpenDHT and TURN servers.</p>

<h1 id="enable-iptables-rules">Enable iptables rules</h1>

<p>Edit <code class="language-plaintext highlighter-rouge">/etc/iptables.up.rules</code>:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Allow TURN server connections
-A INPUT -p tcp -m state --state NEW --dport &lt;turn-tls-port&gt; -j ACCEPT
-A INPUT -p udp -m state --state NEW --dport &lt;turn-tls-port&gt; -j ACCEPT

# Allow OpenDHT node connections
-A INPUT -p udp -m state --state NEW --dport &lt;opendht-port&gt; -j ACCEPT
</code></pre></div></div>

<h1 id="communication-quality-verification">Communication quality verification</h1>

<p>I’ve verified that 1920x1080 video resolution at 30 fps and screen sharing at 120 fps are well supported.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Jami" /><category term="network" /><category term="security" /><summary type="html"><![CDATA[Jami is a GPL licensed communication tool with end-to-end encryption, which can be used for sending instant messages, making audio calls and holding video conferences with family members or friends. For those users concerned about data safety and communication privacy, Jami is an ideal and definitive choice.]]></summary></entry><entry><title type="html">Installation and configuration of Raspberry Pi</title><link href="https://jihuan-tian.github.io/computer/2023/04/29/installation-and-configuration-of-raspberry-pi.html" rel="alternate" type="text/html" title="Installation and configuration of Raspberry Pi" /><published>2023-04-29T00:00:00+08:00</published><updated>2023-04-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/04/29/installation-and-configuration-of-raspberry-pi</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/04/29/installation-and-configuration-of-raspberry-pi.html"><![CDATA[<p>Recently, I’ve bought a Raspberry Pi 4b with 4GB RAM for setting up
my family network drive. It is expected to free the space of my old
laptop’s Windows C drive and share multimedia files over the local
network. The procedures are summarized below as a memorandum.</p>

<h1 id="system-installation">System installation</h1>

<ul>
  <li>Download the Raspbian operating system image into the SD card using <a href="https://www.raspberrypi.com/software/">Raspberry Pi Imager</a>.</li>
  <li>
    <p>Use <a href="https://mirrors.tuna.tsinghua.edu.cn/help/raspbian/">Tsinghua</a> source list:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># /etc/apt/sources.list
deb http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi
# deb-src http://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ bullseye main non-free contrib rpi
    
# /etc/apt/sources.list.d/raspi.list
deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ bullseye main ui
</code></pre></div>    </div>
  </li>
</ul>

<p>Install the following packages</p>

<ul>
  <li>samba: for sharing file over local network</li>
  <li>cifs-utils (installed by default): for mounting NTFS disk partition</li>
  <li>git: for software backup</li>
  <li>rsync (installed by default): for file synchronization and backup</li>
  <li>gdisk (installed by default): for creating GUID partition, which is needed when the disk space is larger than 2 TB.</li>
  <li>cryptsetup: for encrypting disks using LUKS</li>
  <li>
    <p>veracrypt: for disk encryption, which can be downloaded from the <a href="https://www.veracrypt.fr/en/Downloads.html">official site</a>. For Raspberry Pi, select the <code class="language-plaintext highlighter-rouge">armhf</code> hardward architecture. This information can be acquired by executing <code class="language-plaintext highlighter-rouge">dpkg --print-architectures</code>.</p>

    <p>Before insllation, its dependency <code class="language-plaintext highlighter-rouge">libfuse2</code> should be installed from the source list.</p>
  </li>
</ul>

<h1 id="configurations">Configurations</h1>

<h2 id="display-chinese-characters">Display Chinese characters</h2>

<ol>
  <li>
    <p>Reconfigure <code class="language-plaintext highlighter-rouge">locales</code> and generate the <code class="language-plaintext highlighter-rouge">zh_CN.UTF-8</code> locale.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo dpkg-reconfigure locales
</code></pre></div>    </div>
  </li>
  <li>
    <p>After configuration, the Chinese characters still cannot be displayed. We should further execute</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export LC_ALL=zh_CN.UTF-8
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="start-the-system-into-console-without-auto-login">Start the system into console without auto login</h2>

<p>Execute <code class="language-plaintext highlighter-rouge">sudo raspi-config</code> and select <code class="language-plaintext highlighter-rouge">System options</code> → <code class="language-plaintext highlighter-rouge">S5 Boot / Auto Login</code> → <code class="language-plaintext highlighter-rouge">B1 Console</code>.</p>

<h2 id="configure-iptables-for-firewall-control">Configure iptables for firewall control</h2>

<p>Create iptable rules a file, such as <code class="language-plaintext highlighter-rouge">/etc/iptable_rules</code>. Then add the following line to <code class="language-plaintext highlighter-rouge">/etc/network/if-pre-up.d/iptables</code>, so that the rules will be loaded after the system start.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo iptables-restore &lt; /etc/iptable_rules
</code></pre></div></div>

<h2 id="automount-ntfs-hard-disk">Automount NTFS hard disk</h2>

<p>Edit <code class="language-plaintext highlighter-rouge">/etc/fstab</code> as below.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/dev/sda2  /media/documents ntfs-3g auto,rw,suid,exec,async,nouser,uid=1000,gid=1000,umask=002,locale=zh_CN.UTF-8 0 0
</code></pre></div></div>

<p>In the above configuration, settting the correct user ID, group ID and locale are important.</p>

<h2 id="configure-samba-server">Configure Samba server</h2>

<ol>
  <li>
    <p>Add the Linux system user <code class="language-plaintext highlighter-rouge">&lt;user name&gt;</code> as client for accessing Samba and set its password.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo smbpasswd -a &lt;user name&gt;
</code></pre></div>    </div>
  </li>
  <li>Edit <code class="language-plaintext highlighter-rouge">/etc/samba/smb.conf</code> to add folders to be shared and configure their access rights.</li>
  <li>
    <p>Reload the configuration <code class="language-plaintext highlighter-rouge">smb.conf</code></p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo smbcontrol smbd reload-config
</code></pre></div>    </div>
  </li>
</ol>

<h1 id="issues-solved">Issues solved</h1>

<ul>
  <li>Because my old hard disk to be mounted to Raspberry Pi does not supported USB3, inserting it to the USB3 port of Raspberry Pi will make the system halt. Therefore, do remember to connect the old disk to USB2 port.</li>
  <li>
    <p>When editing <code class="language-plaintext highlighter-rouge">/etc/fstab</code> for automounting the hard disk, I initially specifed UUID instead of the device name <code class="language-plaintext highlighter-rouge">/dev/sda2</code>. This made Raspberry Pi fail to boot with the message:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Cannot open access to console, the root account is locked.
</code></pre></div>    </div>

    <p>This problem can be solved as below.</p>

    <ol>
      <li>Unplug the SD card and insert it into a PC.</li>
      <li>Mount the <code class="language-plaintext highlighter-rouge">boot</code> partition and append the text <code class="language-plaintext highlighter-rouge">init=/bin/sh</code> to the file <code class="language-plaintext highlighter-rouge">cmdline.txt</code>.</li>
      <li>Reboot Raspberry Pi and get access to the console. Modify <code class="language-plaintext highlighter-rouge">/etc/fstab</code> and restore the original contents of the file <code class="language-plaintext highlighter-rouge">/boot/cmdline.txt</code>.</li>
    </ol>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Raspberry-Pi" /><summary type="html"><![CDATA[Recently, I’ve bought a Raspberry Pi 4b with 4GB RAM for setting up my family network drive. It is expected to free the space of my old laptop’s Windows C drive and share multimedia files over the local network. The procedures are summarized below as a memorandum.]]></summary></entry><entry><title type="html">Run my own scripts from KRunner</title><link href="https://jihuan-tian.github.io/computer/2023/04/17/run-my-own-scripts-from-krunner.html" rel="alternate" type="text/html" title="Run my own scripts from KRunner" /><published>2023-04-17T00:00:00+08:00</published><updated>2023-04-17T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/04/17/run-my-own-scripts-from-krunner</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/04/17/run-my-own-scripts-from-krunner.html"><![CDATA[<p>KRunner provides a fast way for us to interact with Linux and KDE environment by simply pressing <code class="language-plaintext highlighter-rouge">Alt+Space</code> to run a bunch of functionalities, such as</p>

<ul>
  <li>installed applications</li>
  <li>saved bookmarks</li>
  <li>simple calculator</li>
  <li>command line</li>
  <li>desktop search</li>
  <li>common places defined on the system</li>
  <li>search engines</li>
  <li>unit converter</li>
  <li>list and switch windows</li>
</ul>

<p>My personal scripts are placed in the folder <code class="language-plaintext highlighter-rouge">/usr/local/bin/scripts</code>, which has been added to the <code class="language-plaintext highlighter-rouge">PATH</code> environment variable. Although I can run these scripts directly from a console, they are still not accessible in KRunner. To solve this problem, these scripts should be manually added to the menu of KDE application launchers by running <code class="language-plaintext highlighter-rouge">kmenuedit</code>.</p>

<p><img src="/figures/2023-04-17_05-31-07-kmenuedit.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="KDE" /><summary type="html"><![CDATA[KRunner provides a fast way for us to interact with Linux and KDE environment by simply pressing Alt+Space to run a bunch of functionalities, such as]]></summary></entry><entry><title type="html">View large PDF files on Linux</title><link href="https://jihuan-tian.github.io/computer/2023/04/13/view-large-pdf-files-on-linux.html" rel="alternate" type="text/html" title="View large PDF files on Linux" /><published>2023-04-13T00:00:00+08:00</published><updated>2023-04-13T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/04/13/view-large-pdf-files-on-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/04/13/view-large-pdf-files-on-linux.html"><![CDATA[<p>When we make UML plots for our software project, the page size of the generated PDF file can be extremely huge, e.g. larger than 1 metre, due to the complexity in work flow or data structure. If we examine such a PDF file in Okular, even a tiny mouse scrolling will cause the page to reload, during which black blocks will flash around geometric entities.</p>

<p>Since disabling the “Enhance thin lines” function (in Settings → Configure Backends → PDF) of the PDF backend in Okular does not help, I have to resort to the classical but more lightweight PDF reader Xpdf. After testing it with my 1507 x 963 mm UML sequence graph, it can be confirmed that Xpdf performs much better and faster than Okular. When rasterizing a PDF page, Xpdf splits it into several blocks and caches a number of them. When we scroll across cached and uncached blocks, even though Xpdf needs a little time to refresh, there is no flashing black blocks anymore.</p>

<p>In addition to this good performance under extreme working conditions, Xpdf provides a bunch of commands which can be bound to user defined keys. For example, the following configuration in my <code class="language-plaintext highlighter-rouge">~/.xpdfrc</code> enables accelerated scrolling, which is especially suited for viewing large PDF pages.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bind shift-left any scrollLeft(32)
bind shift-right any scrollRight(32)
bind shift-up any scrollUp(32)
bind shift-down any scrollDown(32)
</code></pre></div></div>

<p><span class="timestamp-wrapper"><span class="timestamp">&lt;2023-04-26 Wed&gt; </span></span> The Postscript and PDF viewer GNU gv performs even better than Xpdf. After loading a large PDF file, there is no refreshing in gv when we scroll the page.</p>

<h1 id="lessons-learned">Lessons learned</h1>

<p>Some classical Linux software can be relied upon due to their better speed, extensibility and capability for extreme cases. Good examples are Xpdf, Gnuplot, less, etc.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="PDF" /><summary type="html"><![CDATA[When we make UML plots for our software project, the page size of the generated PDF file can be extremely huge, e.g. larger than 1 metre, due to the complexity in work flow or data structure. If we examine such a PDF file in Okular, even a tiny mouse scrolling will cause the page to reload, during which black blocks will flash around geometric entities.]]></summary></entry><entry><title type="html">Generate tag pages and their index for blog posts in Jekyll</title><link href="https://jihuan-tian.github.io/computer/2023/04/02/generate-tag-pages-and-their-index-for-blog-posts-in-jekyll.html" rel="alternate" type="text/html" title="Generate tag pages and their index for blog posts in Jekyll" /><published>2023-04-02T00:00:00+08:00</published><updated>2023-04-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/04/02/generate-tag-pages-and-their-index-for-blog-posts-in-jekyll</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/04/02/generate-tag-pages-and-their-index-for-blog-posts-in-jekyll.html"><![CDATA[<h1 id="generate-a-tag-page-containing-related-blog-posts">Generate a tag page containing related blog posts</h1>

<p>I use the following Jekyll page template for displaying a list of blog posts assigned with a specific tag.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: page
title: "Tag: &lt;tag-name&gt;"
exclude: true
---

&lt;div id="archives"&gt;
  &lt;div class="archive-group"&gt;
    
    &lt;a name="&lt;tag-name&gt;"&gt;&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
</code></pre></div></div>

<p>N.B. The <code class="language-plaintext highlighter-rouge">layout</code> type in the front matter for a tag page should be <code class="language-plaintext highlighter-rouge">page</code> instead of <code class="language-plaintext highlighter-rouge">post</code>. If the default navigation menu for the blog is used, which is defined in <code class="language-plaintext highlighter-rouge">&lt;site-source-root&gt;/_includes/header.html</code> as below, the option <code class="language-plaintext highlighter-rouge">exclude: true</code> in the front matter is needed to prevent tag pages from appearing as menu items.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"trigger"</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- Comment out the default sorted categories. --&gt;</span><span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>In my case, I enforce a fixed order of the categories appearing in the navigation menu, hence the option <code class="language-plaintext highlighter-rouge">exclude: true</code> is ignored.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"trigger"</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- Enforce a fixed order for my categories. --&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/math/"</span><span class="nt">&gt;</span>Math<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/physics/"</span><span class="nt">&gt;</span>Physics<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/computer/"</span><span class="nt">&gt;</span>Computer<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/methodology/"</span><span class="nt">&gt;</span>Methodology<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/thoughts/"</span><span class="nt">&gt;</span>Thoughts<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/tags/"</span><span class="nt">&gt;</span>Tags<span class="nt">&lt;/a&gt;</span>
  <span class="nt">&lt;a</span> <span class="na">class=</span><span class="s">"page-link"</span> <span class="na">href=</span><span class="s">"/about/"</span><span class="nt">&gt;</span>About<span class="nt">&lt;/a&gt;</span>
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>

<p>A bash script <code class="language-plaintext highlighter-rouge">gen-tag-pge.sh</code> is created for generating such tag page, where <code class="language-plaintext highlighter-rouge">&lt;tag-name&gt;</code> in the above template is replaced with the first Bash command line argument <code class="language-plaintext highlighter-rouge">$1</code>. The whole multi-line template is redirected to the standard input (<code class="language-plaintext highlighter-rouge">stdin</code>) of the <code class="language-plaintext highlighter-rouge">cat</code> command as <a href="https://en.wikipedia.org/wiki/Here_document">here-document</a>, i.e. the text between <code class="language-plaintext highlighter-rouge">&lt;&lt;label</code> and <code class="language-plaintext highlighter-rouge">label</code>, where <code class="language-plaintext highlighter-rouge">labbel</code> is <code class="language-plaintext highlighter-rouge">EOF</code> here.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">template</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
---
layout: page
title: "Tag: </span><span class="nv">$1</span><span class="sh">"
exclude: true
---

&lt;div id="archives"&gt;
  &lt;div class="archive-group"&gt;
    
    &lt;a name="</span><span class="nv">$1</span><span class="sh">"&gt;&lt;/a&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
</span><span class="no">EOF
</span><span class="si">)</span>

<span class="nv">tag_page_file</span><span class="o">=</span><span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span>.html

<span class="k">if</span> <span class="o">[</span> <span class="nt">-f</span> <span class="s2">"</span><span class="nv">$tag_page_file</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"The tag page has already existed!"</span>
<span class="k">else
    </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$template</span><span class="s2">"</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$tag_page_file</span><span class="s2">"</span>
<span class="k">fi</span>
</code></pre></div></div>

<h1 id="generate-an-index-page-including-all-tags">Generate an index page including all tags</h1>

<p>To create an index page including hyperlinks to all the tag pages, I’ve written a Bash script as below.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">front_matter</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
---
layout: page
title: Tags
permalink: /tags/
---

&lt;div id="archives"&gt;
  &lt;div class="archive-group"&gt;
    &lt;h4 class="tag-head"&gt;
</span><span class="no">EOF
</span><span class="si">)</span>

<span class="nv">sorted_tag_index</span><span class="o">=</span><span class="sb">`</span><span class="nb">ls</span> | xargs <span class="nt">-I</span> <span class="s1">'{}'</span> <span class="nb">basename</span> <span class="s1">'{}'</span> .html | gawk <span class="nt">-f</span> ../scripts/gen-tag-link.awk<span class="sb">`</span>

<span class="nv">back_matter</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
    &lt;/h4&gt;
  &lt;/div&gt;
&lt;/div&gt;
</span><span class="no">EOF
</span><span class="si">)</span>

<span class="nb">echo</span> <span class="s2">"</span><span class="nv">$front_matter</span><span class="s2">"</span> <span class="o">&gt;</span> ../tags.html
<span class="nb">echo</span> <span class="s2">"</span><span class="nv">$sorted_tag_index</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> ../tags.html
<span class="nb">echo</span> <span class="s2">"</span><span class="nv">$back_matter</span><span class="s2">"</span> <span class="o">&gt;&gt;</span> ../tags.html
</code></pre></div></div>

<p>Here I use the <code class="language-plaintext highlighter-rouge">ls</code> command to list all tag HTML pages in the lexicographic order. This will not only order the English tag names but also Chinese tag names according to the phonetic alphabet. Then I use <code class="language-plaintext highlighter-rouge">xargs</code> to get the base file name of each tag page. Finally, I use an <code class="language-plaintext highlighter-rouge">Awk</code> script to generate a hyperlink to each tag as well as printing out the number of related blog posts.</p>

<div class="language-awk highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="k">print</span> <span class="s2">"      &lt;a href=\""</span><span class="nv">$0</span><span class="s2">"\"&gt;"</span><span class="nv">$0</span><span class="s2">"()&lt;/a&gt;"</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Jekyll" /><category term="知识联接" /><summary type="html"><![CDATA[Generate a tag page containing related blog posts]]></summary></entry><entry><title type="html">Share files between Linux, Windows and iOS</title><link href="https://jihuan-tian.github.io/computer/2023/04/01/share-files-between-linux-windows-and-ios.html" rel="alternate" type="text/html" title="Share files between Linux, Windows and iOS" /><published>2023-04-01T00:00:00+08:00</published><updated>2023-04-01T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/04/01/share-files-between-linux-windows-and-ios</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/04/01/share-files-between-linux-windows-and-ios.html"><![CDATA[<h1 id="mount-windows-or-samba-shared-folders-from-linux">Mount Windows or Samba shared folders from Linux</h1>

<ul>
  <li>Access the shared folder directly from Dolphin: The user name should be prefixed with the domain name. For Windows on personal computers, the domain name is <code class="language-plaintext highlighter-rouge">WORKGROUP</code> by default. For company computers, it is usually the corporate name. Then the complete user name is <code class="language-plaintext highlighter-rouge">&lt;domain-name&gt;\&lt;user-name&gt;</code>. N.B. In URL encoding, the backslash is transcribed as <code class="language-plaintext highlighter-rouge">%5C</code>.</li>
  <li>
    <p>Mount a Windows shared folder to Linux directory tree from command line: Install the package <code class="language-plaintext highlighter-rouge">cifs-utils</code>. Then execute</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo mount -t cifs //&lt;server-ip-address&gt;/&lt;folder-name&gt; /&lt;mount-point&gt; -o user=&lt;user-name&gt;,uid=&lt;uid&gt;,gid=&lt;gid&gt;,rw
</code></pre></div>    </div>

    <p>Among the arguments for the <code class="language-plaintext highlighter-rouge">-o</code> option:</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">user</code> specifies the login name for Windows;</li>
      <li><code class="language-plaintext highlighter-rouge">uid</code> and <code class="language-plaintext highlighter-rouge">gid</code> are used to set the owner of the mount point on Linux;</li>
      <li><code class="language-plaintext highlighter-rouge">rw</code> sets the file access rights to read and write.</li>
    </ul>
  </li>
  <li>Mount a Samba shared folder from Linux: use the same command as above.</li>
</ul>

<h1 id="access-linux-samba-shared-folders-from-windows">Access Linux Samba shared folders from Windows</h1>

<p>Even though a Linux user account can be used as a Samba account, we need to set a new password for it using the <code class="language-plaintext highlighter-rouge">pdbedit</code> command.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pdbedit -a -u &lt;user-name&gt;
</code></pre></div></div>

<h1 id="save-files-from-ios-to-linux-samba-shared-folders">Save files from iOS to Linux Samba shared folders</h1>

<p>Using the “File” application on iOS, we can connect to a Linux samba server. However, with a default Samba server configuration, we cannot successfully save files from iOS to shared folders.</p>

<p>Solution (<a href="https://unix.stackexchange.com/a/487094">reference</a>): add the following line to the global option of Samba, i.e. in the file <code class="language-plaintext highlighter-rouge">/etc/samba/smb.conf</code>:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vfs objects = acl_xattr catia fruit streams_xattr
</code></pre></div></div>

<p>After adding the option, restart Samba:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>smbcontrol smbd reload-config
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="network" /><category term="Samba" /><summary type="html"><![CDATA[Mount Windows or Samba shared folders from Linux]]></summary></entry><entry><title type="html">Export Org agenda views from Emacs in batch</title><link href="https://jihuan-tian.github.io/computer/2023/03/31/export-org-agenda-views-from-emacs-in-batch.html" rel="alternate" type="text/html" title="Export Org agenda views from Emacs in batch" /><published>2023-03-31T00:00:00+08:00</published><updated>2023-03-31T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/31/export-org-agenda-views-from-emacs-in-batch</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/31/export-org-agenda-views-from-emacs-in-batch.html"><![CDATA[<p>As mentioned in the previous posts <a href="/thoughts/2019/04/30/%E4%BB%A5Emacs-Org-mode%E4%B8%BA%E6%A0%B8%E5%BF%83%E7%9A%84%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88.html">以 Emacs Org mode 为核心的任务管理方案</a> and <a href="/thoughts/2019/09/30/%E5%B0%86Emacs-Org-mode%E7%94%A8%E4%BA%8EGTD%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86.html">将 Emacs Org mode 用于 GTD 任务管理</a>, the basic philosophy and key procedures of GTD can be realized with Org agenda. For frequent reviewing of todo lists in inbox, finished tasks and deadlines, I need to export corresponding agenda views into HTML files and host them on my local Apache server. This export operation can be automated in batch by starting Emacs from the command line and executing the lisp function <code class="language-plaintext highlighter-rouge">org-batch-store-agenda-views</code>.</p>

<p>First, customize the variable <code class="language-plaintext highlighter-rouge">org-agenda-custom-commands</code> according to <a href="/thoughts/2019/09/30/%E5%B0%86Emacs-Org-mode%E7%94%A8%E4%BA%8EGTD%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86.html">this post</a>.</p>

<p>To start Emacs from command line for the export, do not load the default <code class="language-plaintext highlighter-rouge">~/.emacs</code> initialization file, otherwise, Emacs will wait for user input about whether killing the server if there is already an Emacs process, or whether loading desktop files. Therefore, the command line option <code class="language-plaintext highlighter-rouge">-q</code> or <code class="language-plaintext highlighter-rouge">-Q</code> should be used.</p>

<p>Furthermore, the <code class="language-plaintext highlighter-rouge">htmlize</code> package should be loaded for the HTML export. And to make the exported HTML files look similar to the Emacs color theme, such as my favorite <code class="language-plaintext highlighter-rouge">solarized-light</code>, corresponding packages must be loaded. In addition, Emacs should not be started in batch mode, i.e. the option <code class="language-plaintext highlighter-rouge">--batch</code> should not be used. Otherwise, the <code class="language-plaintext highlighter-rouge">htmlize</code> package cannot load correct faces and the generated HTML files will have a white background instead of the light yellow.</p>

<p>Write a simplified initialization file <code class="language-plaintext highlighter-rouge">~/.emacs-batch-org</code> and start Emacs as below.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>emacs -Q -l ~/.emacs-batch-org --eval='(org-batch-store-agenda-views)' --kill
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="GTD" /><summary type="html"><![CDATA[As mentioned in the previous posts 以 Emacs Org mode 为核心的任务管理方案 and 将 Emacs Org mode 用于 GTD 任务管理, the basic philosophy and key procedures of GTD can be realized with Org agenda. For frequent reviewing of todo lists in inbox, finished tasks and deadlines, I need to export corresponding agenda views into HTML files and host them on my local Apache server. This export operation can be automated in batch by starting Emacs from the command line and executing the lisp function org-batch-store-agenda-views.]]></summary></entry><entry><title type="html">Probable memory leak in Emacs 27</title><link href="https://jihuan-tian.github.io/computer/2023/03/29/probable-memory-leak-in-emacs-27.html" rel="alternate" type="text/html" title="Probable memory leak in Emacs 27" /><published>2023-03-29T00:00:00+08:00</published><updated>2023-03-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/29/probable-memory-leak-in-emacs-27</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/29/probable-memory-leak-in-emacs-27.html"><![CDATA[<h1 id="condition">Condition</h1>

<ul>
  <li>GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.24, cairo version 1.16.0) of 2023-02-23, modified by Debian</li>
  <li>
    <p>Loaded packages</p>

    <div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">custom-set-variables</span>
 <span class="o">'</span><span class="p">(</span><span class="nv">package-selected-packages</span>
   <span class="o">'</span><span class="p">(</span><span class="nv">gnuplot</span> <span class="nv">helm-org</span> <span class="nv">clang-format</span> <span class="nv">org</span> <span class="nb">use-package</span> <span class="nv">ox-gfm</span> <span class="nv">ac-helm</span> <span class="nv">edit-indirect</span> <span class="nv">org-ref</span> <span class="nv">ac-ispell</span> <span class="nv">org-latex-impatient</span> <span class="nv">ac-math</span> <span class="nv">electric-cursor</span> <span class="nv">yasnippet</span> <span class="nv">auto-complete-auctex</span> <span class="nv">auto-complete</span> <span class="nv">zotxt</span> <span class="nv">zotelo</span> <span class="nv">auctex</span> <span class="nv">cmake-font-lock</span> <span class="nv">cmake-mode</span> <span class="nv">flycheck</span> <span class="nv">maxima</span> <span class="nv">flycheck-plantuml</span> <span class="nv">plantuml-mode</span> <span class="nv">tabbar</span> <span class="nv">session</span> <span class="nv">pod-mode</span> <span class="nv">markdown-mode</span> <span class="nv">magit</span> <span class="nv">initsplit</span> <span class="nv">htmlize</span> <span class="nv">graphviz-dot-mode</span> <span class="nv">folding</span> <span class="nv">eproject</span> <span class="nv">diminish</span> <span class="nv">csv-mode</span> <span class="nv">browse-kill-ring</span> <span class="nv">boxquote</span> <span class="nv">bm</span> <span class="nv">bar-cursor</span><span class="p">)))</span>
</code></pre></div>    </div>
  </li>
</ul>

<h1 id="phenomenon">Phenomenon</h1>

<p>If I intermittently use Emacs without closing it for hours, its memory consumption can be as high as 8 GB. I tend claim this indicates a memory leak. However, which loaded package is the culprit is still unknown. I guess the suspects might be <code class="language-plaintext highlighter-rouge">helm</code> and <code class="language-plaintext highlighter-rouge">auto-complete</code> related packages.</p>

<h1 id="remedy">Remedy</h1>

<p>I’ve tried executing <code class="language-plaintext highlighter-rouge">garbage-collect</code>, which has no effect</p>

<p>Next, I’ve disabled the following packages to see if this high memory consumption can be relieved or removed.</p>

<p>Disabled packages which have been removed from the variable <code class="language-plaintext highlighter-rouge">package-selected-packages</code>:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">helm-org</code></li>
  <li><code class="language-plaintext highlighter-rouge">ac-helm</code></li>
  <li><code class="language-plaintext highlighter-rouge">ac-math</code></li>
  <li><code class="language-plaintext highlighter-rouge">auto-complete-auctex</code></li>
  <li><code class="language-plaintext highlighter-rouge">auto-complete</code></li>
</ul>

<p>Meanwhile, I run through the initialization script <code class="language-plaintext highlighter-rouge">~/.emacs</code> and comment out any unnecessary package requirements and configurations. Especially, the following lines of <code class="language-plaintext highlighter-rouge">helm</code> initialization code are commented out.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">require</span> <span class="ss">'helm-config</span><span class="p">)</span>
<span class="p">(</span><span class="nv">helm-mode</span> <span class="mi">1</span><span class="p">)</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">find-file]</span> <span class="ss">'helm-find-files</span><span class="p">)</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">occur]</span> <span class="ss">'helm-occur</span><span class="p">)</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">list-buffers]</span> <span class="ss">'helm-buffers-list</span><span class="p">)</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">dabbrev-expand]</span> <span class="ss">'helm-dabbrev</span><span class="p">)</span>
<span class="p">(</span><span class="nv">define-key</span> <span class="nv">global-map</span> <span class="nv">[remap</span> <span class="nv">execute-extended-command]</span> <span class="ss">'helm-M-x</span><span class="p">)</span>
<span class="p">(</span><span class="nb">unless</span> <span class="p">(</span><span class="nb">boundp</span> <span class="ss">'completion-in-region-function</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">define-key</span> <span class="nv">lisp-interaction-mode-map</span> <span class="nv">[remap</span> <span class="nv">completion-at-point]</span> <span class="ss">'helm-lisp-completion-at-point</span><span class="p">)</span>
  <span class="p">(</span><span class="nv">define-key</span> <span class="nv">emacs-lisp-mode-map</span>       <span class="nv">[remap</span> <span class="nv">completion-at-point]</span> <span class="ss">'helm-lisp-completion-at-point</span><span class="p">))</span>

<span class="p">(</span><span class="nv">global-set-key</span> <span class="p">(</span><span class="nv">kbd</span> <span class="s">"M-x"</span><span class="p">)</span> <span class="ss">'helm-M-x</span><span class="p">)</span>
</code></pre></div></div>

<p>After doing the above and restarting Emacs with previous desktop loaded, the initial memory consumption is 74 MB. Running Emacs for hours, the memory consumption only increases to 200 MB.</p>

<h1 id="lessons-learned">Lessons learned</h1>

<ul>
  <li>Only load those frequently used packages to reduce the probability of being confronted with errors and bugs, which are either caused by a specific package or by the symbiotic effect of some packages.</li>
  <li>It is worthy and rewarding to be patient to monitor and tune the behavior of our production tool.</li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="bug" /><summary type="html"><![CDATA[Condition]]></summary></entry><entry><title type="html">Copy and paste relative links across different files in Emacs</title><link href="https://jihuan-tian.github.io/computer/2023/03/27/copy-and-paste-relative-links-across-different-files-in-emacs.html" rel="alternate" type="text/html" title="Copy and paste relative links across different files in Emacs" /><published>2023-03-27T00:00:00+08:00</published><updated>2023-03-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/27/copy-and-paste-relative-links-across-different-files-in-emacs</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/27/copy-and-paste-relative-links-across-different-files-in-emacs.html"><![CDATA[<p>As mentioned in <a href="/computer/2021/02/28/how-to-create-relative-hyperlinks-in-org-mode.html">How to create relative hyperlinks in Org mode?</a>, relative hyperlinks are indispensable for maintaining a bunch of inter-connected documents that have a fixed relative folder structure, when the whole folder tree is to be mounted at different locations on different computers. Therefore, I’ve been pervasively using relative hyperlinks for referencing local images and files during my daily use of Org mode for summarizing numerical experiment results and taking technical notes, or use of AUCTeX for writing formal mathematical notes.</p>

<p>Quite often, the link to some local resource file has already been inserted as a relative hyperlink in another Org or LaTeX document, but the current document I’m working on usually has a different relative path to the link target, the existing relative hyperlink should be transformed to an absolute path first, then converted to a new relative path with respect to the current document. Manual conversion is cumbersome and error-prone. I need to let Emacs help me with this.</p>

<p>In Org mode, when the cursor is placed on a hyperlink, the target URL can be extracted by first calling <code class="language-plaintext highlighter-rouge">org-element-context</code> to get the smallest Org element around the cursor, then calling <code class="language-plaintext highlighter-rouge">org-element-lineage</code> to get its ancestor of the <code class="language-plaintext highlighter-rouge">link</code> type. The obtained relative link can be expanded to an absolute path by calling <code class="language-plaintext highlighter-rouge">expand-file-name</code> with respect to the directory of the current Org file. Finally, push the absolute path into the kill ring by calling <code class="language-plaintext highlighter-rouge">kill-new</code>. These operations can be combined into the following function <code class="language-plaintext highlighter-rouge">tjh/org-get-absolute-file-link</code>.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Get the absolute path of the relative file link.</span>
<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/org-get-absolute-file-link</span> <span class="p">(</span><span class="k">&amp;optional</span> <span class="nv">arg</span><span class="p">)</span>
  <span class="s">"Extract absolute file link from org-mode link and add it to kill ring."</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">"P"</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">link</span> <span class="p">(</span><span class="nv">org-element-lineage</span> <span class="p">(</span><span class="nv">org-element-context</span><span class="p">)</span> <span class="o">'</span><span class="p">(</span><span class="nv">link</span><span class="p">)</span> <span class="no">t</span><span class="p">))</span>
          <span class="p">(</span><span class="k">type</span> <span class="p">(</span><span class="nv">org-element-property</span> <span class="ss">:type</span> <span class="nv">link</span><span class="p">))</span>
          <span class="p">(</span><span class="nv">relative-path</span> <span class="p">(</span><span class="nv">org-element-property</span> <span class="ss">:path</span> <span class="nv">link</span><span class="p">))</span>
          <span class="p">(</span><span class="nv">absolute-path</span> <span class="p">(</span><span class="nv">expand-file-name</span>
                          <span class="nv">relative-path</span> <span class="p">(</span><span class="nv">file-name-directory</span> <span class="p">(</span><span class="nv">buffer-file-name</span><span class="p">)))))</span>
    <span class="p">(</span><span class="nv">kill-new</span> <span class="nv">absolute-path</span><span class="p">)</span>
    <span class="p">(</span><span class="nv">message</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"Absolute path: "</span> <span class="nv">absolute-path</span><span class="p">))))</span>
</code></pre></div></div>

<p>After getting the absolute path, insert a new relative link in another Org file by pressing <code class="language-plaintext highlighter-rouge">C-u C-c C-l</code>. It should be noted that to enforce <code class="language-plaintext highlighter-rouge">org-insert-link</code> using relative path, set <code class="language-plaintext highlighter-rouge">org-link-file-path-type</code> to <code class="language-plaintext highlighter-rouge">'relative</code>.</p>

<p>In AUCTeX, a relative hyperlink is the first argument of the <code class="language-plaintext highlighter-rouge">\href</code> macro. Therefore, extracting the contents between the pair of curly brackets will get it. This is implemented in the following function <code class="language-plaintext highlighter-rouge">tjh/latex-get-absolute-file-link</code>. To paste this absolute link as a new relative link, there is no counterpart of <code class="language-plaintext highlighter-rouge">org-insert-link</code> in AUCTeX, then the function <code class="language-plaintext highlighter-rouge">tjh/paste-absolute-file-link-as-relative</code> is written to get the absolute path from the kill ring and convert it relative to the current default directory using <code class="language-plaintext highlighter-rouge">file-relative-name</code>.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/latex-get-absolute-file-link</span> <span class="p">(</span><span class="k">&amp;optional</span> <span class="nv">arg</span><span class="p">)</span>
  <span class="s">"Extract absolute file link from href and add it to kill ring."</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">"P"</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let</span> <span class="p">(</span><span class="nv">relative-path</span> <span class="nv">absolute-path</span> <span class="nv">beg</span> <span class="nv">end</span><span class="p">)</span>
    <span class="p">(</span><span class="nv">save-excursion</span>
      <span class="p">(</span><span class="nv">re-search-forward</span> <span class="s">"}"</span><span class="p">)</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">end</span> <span class="p">(</span><span class="nb">-</span> <span class="p">(</span><span class="nv">point</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span>
      <span class="p">(</span><span class="nv">re-search-backward</span> <span class="s">"{"</span><span class="p">)</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">beg</span> <span class="p">(</span><span class="nb">+</span> <span class="p">(</span><span class="nv">point</span><span class="p">)</span> <span class="mi">1</span><span class="p">))</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">relative-path</span> <span class="p">(</span><span class="nv">buffer-substring</span> <span class="nv">beg</span> <span class="nv">end</span><span class="p">))</span>
      <span class="p">(</span><span class="k">setq</span> <span class="nv">absolute-path</span> <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">relative-path</span> <span class="p">(</span><span class="nv">file-name-directory</span> <span class="p">(</span><span class="nv">buffer-file-name</span><span class="p">))))</span>
      <span class="p">(</span><span class="nv">kill-new</span> <span class="nv">absolute-path</span><span class="p">)</span>
      <span class="p">(</span><span class="nv">message</span> <span class="nv">absolute-path</span><span class="p">))))</span>

<span class="p">(</span><span class="nb">defun</span> <span class="nv">tjh/paste-absolute-file-link-as-relative</span> <span class="p">(</span><span class="k">&amp;optional</span> <span class="nv">arg</span><span class="p">)</span>
  <span class="s">"Paste absolute file link as relative link with respect to the file in the current buffer."</span>
  <span class="p">(</span><span class="nv">interactive</span> <span class="s">"P"</span><span class="p">)</span>
  <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">absolute-path</span> <span class="p">(</span><span class="nv">current-kill</span> <span class="mi">0</span><span class="p">))</span>
         <span class="p">(</span><span class="nv">relative-path</span> <span class="p">(</span><span class="nv">file-relative-name</span> <span class="nv">absolute-path</span><span class="p">)))</span>
    <span class="p">(</span><span class="nv">insert</span> <span class="nv">relative-path</span><span class="p">)))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="AUCTeX" /><category term="LaTeX" /><summary type="html"><![CDATA[As mentioned in How to create relative hyperlinks in Org mode?, relative hyperlinks are indispensable for maintaining a bunch of inter-connected documents that have a fixed relative folder structure, when the whole folder tree is to be mounted at different locations on different computers. Therefore, I’ve been pervasively using relative hyperlinks for referencing local images and files during my daily use of Org mode for summarizing numerical experiment results and taking technical notes, or use of AUCTeX for writing formal mathematical notes.]]></summary></entry><entry><title type="html">Squash several minor Git commits into a single one</title><link href="https://jihuan-tian.github.io/computer/2023/03/27/squash-several-minor-git-commits-into-a-single-one.html" rel="alternate" type="text/html" title="Squash several minor Git commits into a single one" /><published>2023-03-27T00:00:00+08:00</published><updated>2023-03-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/27/squash-several-minor-git-commits-into-a-single-one</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/27/squash-several-minor-git-commits-into-a-single-one.html"><![CDATA[<p>In principle, it is not recommended to perform Git commits so frequently as for each minor changes, such as correcting typos, adding documentation, re-formatting the source code, etc. A good opportunity to a Git commit is when a new functionality is added or an actual performance improvement is achieved.</p>

<p>However, if there have been after all several minor changes coming from careless commits, it is necessary to combine them with a recent meaningful big change. In Git terminology, this operation is called rebase.</p>

<p>Assume we need to combine 3 recent commits into a single one, the following command should be executed.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git rebase <span class="nt">-i</span> HEAD~3
</code></pre></div></div>

<p>Then a default text editor will be opened for editing the rebase commands, where each line in the buffer represents a commit. We should replace the first keyword <code class="language-plaintext highlighter-rouge">pick</code> with <code class="language-plaintext highlighter-rouge">squash</code> <sup><a id="fnr.1" class="footref" href="#fn.1">1</a></sup> for each line except the first line, which means all the other two commits will be merged into the first.</p>

<p>After finishing the above edit, Git prompts us to write a new commit message. In the opened editor, the messages for all the three old commits will be presented, and we just need to comment out unnecessary messages or add new information. Then a new commit will be created and the squashing operation finishes.</p>

<h2 id="footnotes">Footnotes</h2>

<p><sup><a id="fn.1" class="footnum" href="#fnr.1">1</a></sup> squash v. to stop sth from
continuing; to destroy sth because it is a problem for you</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Git" /><summary type="html"><![CDATA[In principle, it is not recommended to perform Git commits so frequently as for each minor changes, such as correcting typos, adding documentation, re-formatting the source code, etc. A good opportunity to a Git commit is when a new functionality is added or an actual performance improvement is achieved.]]></summary></entry><entry><title type="html">Create link to Info node and help document in Emacs Org mode</title><link href="https://jihuan-tian.github.io/computer/2023/03/17/create-link-to-info-node-and-help-doc.html" rel="alternate" type="text/html" title="Create link to Info node and help document in Emacs Org mode" /><published>2023-03-17T00:00:00+08:00</published><updated>2023-03-17T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/17/create-link-to-info-node-and-help-doc</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/17/create-link-to-info-node-and-help-doc.html"><![CDATA[<p>It is convenient to browse Info documents about various programs and libraries on Linux in Emacs. If we want to refer to a particular Info node from an Org note, it is possible to create a hyperlink to it using the link type <code class="language-plaintext highlighter-rouge">elisp:</code>.</p>

<p>First, we should get a copy of the Info node name by pressing <code class="language-plaintext highlighter-rouge">c</code> in an <code class="language-plaintext highlighter-rouge">Info</code> session. Then back in Org mode, we create a hyperlink as <code class="language-plaintext highlighter-rouge">[[elisp:(info "&lt;info-node-name&gt;")][&lt;link-name&gt;]]</code>.</p>

<p>Similarly, a hyperlink can also be created in Org which jumps to the help of a function, variable or key-bindings, etc. For example,</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-function 'car)][elisp function car]]</code> links to the help document of the elisp function <code class="language-plaintext highlighter-rouge">car</code>;</li>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-variable 'debug-on-error)][elisp variable debug-on-error]]</code> links to the help document of the lisp variable <code class="language-plaintext highlighter-rouge">debug-on-error</code>;</li>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-key (kbd "C-c C-c"))][Key binding C-c C-c]]</code> links to the help document of the key binding <code class="language-plaintext highlighter-rouge">C-c C-c</code>.</li>
</ul>

<p>In addition to using the link type <code class="language-plaintext highlighter-rouge">elisp:</code>, a simpler method is to use the hyperlink type <code class="language-plaintext highlighter-rouge">info:</code> for Info document and <code class="language-plaintext highlighter-rouge">help:</code> for help document. For example, <code class="language-plaintext highlighter-rouge">[[info:elisp#Introduction][Elisp Introduction section]]</code> links to the “Introduction” section in the Elisp Info document and <code class="language-plaintext highlighter-rouge">[[help:debug-on-error][debug-on-error]]</code> links to the help document for the elisp variable <code class="language-plaintext highlighter-rouge">debug-on-error</code>.</p>

<p>Read more</p>
<ul>
  <li><a href="/computer/2022/06/05/create-hyperlinks-in-org-mode.html">Create hyperlinks in Org mode</a></li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="知识联接" /><summary type="html"><![CDATA[It is convenient to browse Info documents about various programs and libraries on Linux in Emacs. If we want to refer to a particular Info node from an Org note, it is possible to create a hyperlink to it using the link type elisp:.]]></summary></entry><entry><title type="html">Old Dired+ does not work in Emacs 27</title><link href="https://jihuan-tian.github.io/computer/2023/03/16/old-diredp-does-not-work-in-emacs27.html" rel="alternate" type="text/html" title="Old Dired+ does not work in Emacs 27" /><published>2023-03-16T00:00:00+08:00</published><updated>2023-03-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/16/old-diredp-does-not-work-in-emacs27</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/16/old-diredp-does-not-work-in-emacs27.html"><![CDATA[<h1 id="conditions">Conditions</h1>

<ul>
  <li>GNU Emacs 27.1 (build 1, x86_64-pc-linux-gnu, GTK+ Version 3.24.24, cairo version 1.16.0) of 2023-02-23, modified by Debian</li>
  <li>Dired+ version 21.2</li>
</ul>

<h1 id="phenomenon">Phenomenon</h1>

<p>Pressing <code class="language-plaintext highlighter-rouge">R</code> in Dired mode produces the following error message.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dired-do-create-files: Wrong number of arguments: (lambda (&amp;optional localp arg filter distinguish-one-marked) "Return names of the marked files as a list of strings.
The list is in the same order as the buffer, that is, the car is the
first marked file.
Values returned are normally absolute file names.
Optional arg LOCALP as in `dired-get-filename'.
Optional second argument ARG specifies files to use instead of marked.
Usually ARG comes from the command's prefix arg.
If ARG is an integer, use the next ARG files (previous -ARG, if &lt; 0).
If ARG is a cons with element 16, 64, or 256, corresponding to
`C-u C-u', `C-u C-u C-u', or `C-u C-u C-u C-u', then use all files
in the Dired buffer, where:
16 includes NO directories (including `.' and `..')
64 includes directories EXCEPT `.' and `..'
256 includes ALL directories (including `.' and `..')
If ARG is otherwise non-nil, use the current file.
Optional third argument FILTER, if non-nil, is a function to select
some of the files: those for which (funcall FILTER FILENAME) is
non-nil.
If DISTINGUISH-ONE-MARKED is non-nil, then return (t FILENAME) instead
of (FILENAME), if only one file is marked.  Do not use non-nil
DISTINGUISH-ONE-MARKED together with FILTER." (let ((all-of-them (save-excursion (prog1 (let ((inhibit-read-only t) (newarg arg) multi-C-u case-fold-search found results) (if (and (consp newarg) (&gt; ... 4)) (progn (setq newarg ... multi-C-u t))) (if (and newarg (not multi-C-u)) (if (integerp newarg) (progn ... ...) (list ...)) (let (... next-position) (save-excursion ... ... ...) (if ... ...) (if found results ...)))) (dired-move-to-filename)))) result) (if (not filter) (if (and distinguish-one-marked (eq (car all-of-them) t)) all-of-them (nreverse all-of-them)) (let ((--dolist-tail-- all-of-them) file) (while --dolist-tail-- (setq file (car --dolist-tail--)) (if (funcall filter file) (progn (setq result (cons file result)))) (setq --dolist-tail-- (cdr --dolist-tail--)))) result))), 5
</code></pre></div></div>

<p>Initially, I searched on <a href="https://stackoverflow.com/a/52067576">Stack Overflow</a> and thought my problem might originate from the same cause. However, the solution did not work after all, because the reported phenomenon was different from mine.</p>

<p>Then I started Emacs by executing <code class="language-plaintext highlighter-rouge">emacs -Q</code> from the command line, which disabled loading all configurations. This time, the file name could be changed in the default Dired mode. This meant Dired mode itself in Emacs 27.1 worked normally.</p>

<p>Next, I ran though my <code class="language-plaintext highlighter-rouge">~/.emacs</code> to check configurations related to Dired. Then I noticed the configuration for Dired+.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">require</span> <span class="ss">'dired+</span><span class="p">)</span>
<span class="p">(</span><span class="nv">toggle-diredp-find-file-reuse-dir</span> <span class="no">t</span><span class="p">)</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">dired+.el</code> in my Emacs had not been updated for a long time. Maybe it was the culprit behind the scene. This thought was then verified by offloading it.</p>

<p>Finally, I downloaded a new version of <a href="https://www.emacswiki.org/emacs/download/dired%2b.el">dired+.el</a> and the problem was solved.</p>

<h1 id="lessons-learned">Lessons learned</h1>

<ol>
  <li>The phenomenon reported in Stack Overflow is different from mine. Hence the answer should not be taken for granted.</li>
  <li>Starting an application without loading any extensions or modules is helpful to localize bug or exclude suspected causes.</li>
  <li>Nowadays, a fully-fledged software program, such as Emacs, LibreOffice, Eclipse, etc. is already a complicated system or platform, which integrated a panoply of plugins and extensions. As the main software program upgrades with time, the complementary gadgetry should also be maintained alongside.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[Conditions]]></summary></entry><entry><title type="html">Toolbar icons cannot be displayed in Emacs 27</title><link href="https://jihuan-tian.github.io/computer/2023/03/16/toolbar-icons-cannot-be-displayed-in-emacs27.html" rel="alternate" type="text/html" title="Toolbar icons cannot be displayed in Emacs 27" /><published>2023-03-16T00:00:00+08:00</published><updated>2023-03-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/16/toolbar-icons-cannot-be-displayed-in-emacs27</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/16/toolbar-icons-cannot-be-displayed-in-emacs27.html"><![CDATA[<p>After I upgraded my Linux system to Debian Bullseyes, the toolbar icons in Emacs 27 were not visible anymore with only toolbar text left. Since the installed Emacs on my system was compiled with GTK+, I naturally tried to reconfigure the GNOME/GTK application style in KDE settings. However, this operation could only temporarily make the toolbar icons reappear. After restarting Emacs, the problem was still there.</p>

<p>Then I checked the configuration of GTK theme and icon theme in the file <code class="language-plaintext highlighter-rouge">~/.config/gtk-3.0/settings.ini</code>,</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gtk-theme-name=Breeze
gtk-icon-theme-name=breeze
gtk-fallback-icon-theme=breeze
</code></pre></div></div>

<p>which seemed correct.</p>

<p>Finally, according to this <a href="https://www.reddit.com/r/kde/comments/slizni/changing_gnomegtk_application_style_theme_from/?utm_source=share&amp;utm_medium=web2x&amp;context=3">post</a>, the solution for restoring Emacs toolbar GTK icons is to execute the following command after Emacs has fully started.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>dbus-send --session --dest=org.kde.GtkConfig --type=method_call /GtkConfig org.kde.GtkConfig.setGtkTheme 'string:Adwaita'
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><summary type="html"><![CDATA[After I upgraded my Linux system to Debian Bullseyes, the toolbar icons in Emacs 27 were not visible anymore with only toolbar text left. Since the installed Emacs on my system was compiled with GTK+, I naturally tried to reconfigure the GNOME/GTK application style in KDE settings. However, this operation could only temporarily make the toolbar icons reappear. After restarting Emacs, the problem was still there.]]></summary></entry><entry><title type="html">Inspect large variables in Eclipse GDB</title><link href="https://jihuan-tian.github.io/computer/2023/03/09/inspect-large-variables-in-eclipse-gdb.html" rel="alternate" type="text/html" title="Inspect large variables in Eclipse GDB" /><published>2023-03-09T00:00:00+08:00</published><updated>2023-03-09T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/09/inspect-large-variables-in-eclipse-gdb</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/09/inspect-large-variables-in-eclipse-gdb.html"><![CDATA[<p>Eclipse is my workhorse for developing numerical libraries. Because debugging a boundary element method (BEM) algorithm usually involves large vectors or matrices, the debugger (<code class="language-plaintext highlighter-rouge">GDB</code>) called by Eclipse will frequently crash, which prevents me from further investigating into the inner code.</p>

<p>According to the documentation of GDB, for printing the value of a variable involving a large dynamically allocated memory, configure the variable <code class="language-plaintext highlighter-rouge">max-value-size</code> in the file <code class="language-plaintext highlighter-rouge">~/.gdbinit</code> (<a href="https://sourceware.org/gdb/current/onlinedocs/gdb/Value-Sizes.html">reference</a>).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(gdb) set max-value-size bytes
(gdb) set max-value-size unlimited
</code></pre></div></div>

<p>However, the above configuration is not honoured by Eclipse by default, even after I set it in its preferences: <code class="language-plaintext highlighter-rouge">C/C++</code> → <code class="language-plaintext highlighter-rouge">Debug</code> → <code class="language-plaintext highlighter-rouge">GDB</code> → <code class="language-plaintext highlighter-rouge">GDB command file</code>.</p>

<p>According to Eclipse documentation on <code class="language-plaintext highlighter-rouge">GDB command file</code>:</p>

<blockquote>
  <p>Specifies the GDB debugger command file that will be used by default for each newly created debug launch. This can be useful if you often/always want to use a GDB command file for your launches. Each launch configuration allows to override this setting in the Debugger tab.</p>
</blockquote>

<p>we know that the configuration for debug launch of each executable may override the setting in <code class="language-plaintext highlighter-rouge">GDB command file</code>. After checking the Debugger setting for my tester, I found out it only specified <code class="language-plaintext highlighter-rouge">.gdbinit</code> in the working directory as the command file instead of the one in my home directory <code class="language-plaintext highlighter-rouge">~/.gdbinit</code>.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="GDB" /><category term="Eclipse" /><summary type="html"><![CDATA[Eclipse is my workhorse for developing numerical libraries. Because debugging a boundary element method (BEM) algorithm usually involves large vectors or matrices, the debugger (GDB) called by Eclipse will frequently crash, which prevents me from further investigating into the inner code.]]></summary></entry><entry><title type="html">Use top command to monitor process status in Linux</title><link href="https://jihuan-tian.github.io/computer/2023/03/09/use-top-command-to-monitor-process-status-in-linux.html" rel="alternate" type="text/html" title="Use top command to monitor process status in Linux" /><published>2023-03-09T00:00:00+08:00</published><updated>2023-03-09T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/09/use-top-command-to-monitor-process-status-in-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/09/use-top-command-to-monitor-process-status-in-linux.html"><![CDATA[<p align="center"><img src="/figures/2022-12-07_11-57-17-customize-top-command.png" alt="Customized top command" /></p>

<h1 id="typical-operations">Typical operations</h1>

<p>General</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">s</code>: set the update interval</li>
  <li><code class="language-plaintext highlighter-rouge">W</code>: Save the option</li>
</ul>

<p>Task list manipulation</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">u</code>: Filter the task list by user name</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">o</code>: Filter the task list by entering an expression, such as</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>COMMAND=...
%MEM&gt;10
</code></pre></div>    </div>
  </li>
  <li><code class="language-plaintext highlighter-rouge">=</code>: Clear the filter for the task list</li>
  <li><code class="language-plaintext highlighter-rouge">f</code>: Customize the columns</li>
</ul>

<p>Visualization effect</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">z</code>: toggle color and mono mode</li>
  <li><code class="language-plaintext highlighter-rouge">x</code>: highlight the sort field, i.e. the whole corresponding column will be highlighted.</li>
  <li><code class="language-plaintext highlighter-rouge">y</code>: highlight running tasks</li>
  <li><code class="language-plaintext highlighter-rouge">b</code>: reverse the highlighting effect for the sorting field and running tasks</li>
</ul>

<h1 id="clarification-of-the-time-since-program-start">Clarification of the time since program start</h1>

<ul>
  <li><code class="language-plaintext highlighter-rouge">TIMES+</code>: Total CPU time the task has used since it started. It has the granularity of hundredth of a second, i.e. its accuracy is 1/100 second. Its display format is, for example, <code class="language-plaintext highlighter-rouge">6000:25.03</code>, which means 6000 minutes, 25 seconds and 3 hundredths second. Also note that this is the total CPU time. If the process runs in n threads, the actual program execution time is about <code class="language-plaintext highlighter-rouge">TIMES+/n</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">TIMES</code>: same as <code class="language-plaintext highlighter-rouge">TIMES+</code> but with second accuracy.</li>
</ul>

<p>N.B. The time in <code class="language-plaintext highlighter-rouge">top</code> is the CPU time not the elapsed time. To get the latter, <code class="language-plaintext highlighter-rouge">ps</code> command with the option <code class="language-plaintext highlighter-rouge">etime</code> should be used instead (<a href="https://www.2daygeek.com/how-to-check-how-long-a-process-has-been-running-in-linux/">reference</a>). The returned result has the date and time format <code class="language-plaintext highlighter-rouge">Days-Hours:Minutes:Seconds</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ps <span class="nt">-p</span> 12698 <span class="nt">-o</span> etime
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   ELAPSED
2-03:50:03
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="command" /><category term="Linux" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Use ddcutil to control external monitor</title><link href="https://jihuan-tian.github.io/computer/2023/03/02/use-ddcutil-to-control-external-monitor.html" rel="alternate" type="text/html" title="Use ddcutil to control external monitor" /><published>2023-03-02T00:00:00+08:00</published><updated>2023-03-02T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/03/02/use-ddcutil-to-control-external-monitor</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/03/02/use-ddcutil-to-control-external-monitor.html"><![CDATA[<p>According to <a href="https://en.wikipedia.org/wiki/Display_Data_Channel">Wikipedia</a>, DDC/CI (Command Interface) standard was introduced in August 1998, which specifies a means for a computer to send commands to the monitor, as well as receive sensor data from the monitor, over a bidirectional link. My second external monitor is Dell P2222H, which just supports this functionality. Therefore, it is possible to adjust brightness and contrast from software without bothering to manipulate a button on the back.</p>

<p>On Linux, this can be achieved via <code class="language-plaintext highlighter-rouge">ddcutil</code>. To make it work with NVIDIA graphics card, we should copy <code class="language-plaintext highlighter-rouge">/usr/share/ddcutil/data/90-nvidia-i2c.conf</code> into the folder <code class="language-plaintext highlighter-rouge">/etc/X11/xorg.conf.d/</code> and modify the device name in this file to be the same as that is specified in <code class="language-plaintext highlighter-rouge">/etc/X11/xorg.conf</code> for <code class="language-plaintext highlighter-rouge">nvidia</code> driver (if <code class="language-plaintext highlighter-rouge">xorg.conf</code> exists). For example,</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Section "Device"
Driver "nvidia"
Identifier "Device0"
Option     "RegistryDwords"  "RMUseSwI2c=0x01; RMI2cSpeed=100"
# solves problem of i2c errors with nvidia driver
# per https://devtalk.nvidia.com/default/topic/572292/-solved-does-gddccontrol-work-for-anyone-here-nvidia-i2c-monitor-display-ddc/#4309293
EndSection
</code></pre></div></div>

<p>Then restart X11 or reboot the system, we can now control the monitor using <code class="language-plaintext highlighter-rouge">ddcutil</code> on the command line. Typical usage of <code class="language-plaintext highlighter-rouge">ddcutil</code>:</p>

<ul>
  <li>
    <p>Detect connected monitors.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo ddcutil detect
</code></pre></div>    </div>

    <p>My computer reports</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Display 1
I2C bus:             /dev/i2c-1
EDID synopsis:
Mfg id:           BNQ
Model:            BenQ PD2700U
Serial number:    ETJCK80010CL0
Manufacture year: 2019
EDID version:     1.4
VCP version:         2.2
    
Display 2
I2C bus:             /dev/i2c-2
EDID synopsis:
Mfg id:           DEL
Model:            DELL P2222H
Serial number:    H35TPK3
Manufacture year: 2022
EDID version:     1.4
VCP version:         2.1
</code></pre></div>    </div>
  </li>
  <li>
    <p>Get the capabilities supported by the monitor, for example, display 2 is my Dell monitor.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo ddcutil --display 2 capabilities
    
Model: P2222H
MCCS version: 2.1
Commands:
Command: 01 (VCP Request)
Command: 02 (VCP Response)
Command: 03 (VCP Set)
Command: 07 (Timing Request)
Command: 0c (Save Settings)
Command: e3 (Capabilities Reply)
Command: f3 (Capabilities Request)
VCP Features:
Feature: 02 (New control value)
Feature: 04 (Restore factory defaults)
Feature: 05 (Restore factory brightness/contrast defaults)
Feature: 08 (Restore color defaults)
Feature: 10 (Brightness)
Feature: 12 (Contrast)
Feature: 14 (Select color preset)
Values:
05: 6500 K
08: 9300 K
0b: User 1
0c: User 2
Feature: 16 (Video gain: Red)
Feature: 18 (Video gain: Green)
Feature: 1A (Video gain: Blue)
Feature: 52 (Active control)
Feature: 60 (Input Source)
Values:
01: VGA-1
0f: DisplayPort-1
11: HDMI-1
Feature: AA (Screen Orientation)
Values:
01: 0 degrees
02: 90 degrees
04: 270 degrees
Feature: AC (Horizontal frequency)
Feature: AE (Vertical frequency)
Feature: B2 (Flat panel sub-pixel layout)
Feature: B6 (Display technology type)
Feature: C6 (Application enable key)
Feature: C8 (Display controller type)
Feature: C9 (Display firmware level)
Feature: CC (OSD Language)
Values:
02: English
03: French
04: German
06: Japanese
09: Russian
0a: Spanish
0d: Chinese (simplified / Kantai)
0e: Portuguese (Brazil)
Feature: D6 (Power mode)
Values:
01: DPM: On,  DPMS: Off
04: DPM: Off, DPMS: Off
05: Write only value to turn off display
Feature: DC (Display Mode)
Values:
00: Standard/Default mode
03: Movie
05: Games
Feature: DF (VCP Version)
Feature: E0 (manufacturer specific feature)
Feature: E1 (manufacturer specific feature)
Feature: E2 (manufacturer specific feature)
Values: 00 02 04 0E 12 14 (interpretation unavailable)
Feature: F1 (manufacturer specific feature)
Feature: F2 (manufacturer specific feature)
Feature: FD (manufacturer specific feature)
Feature: FE (manufacturer specific feature)
</code></pre></div>    </div>

    <p>From above, we can see the VCP feature code for brightness is 10 and that for contrast is 12.</p>
  </li>
  <li>
    <p>Get all VCP parameter values.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>ddcutil <span class="nt">--display</span> 2 getvcp all
</code></pre></div>    </div>

    <p>It returns the following information.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>VCP code 0x02 (New control value             ): One or more new control values have been saved(0x02)
VCP code 0x0b (Color temperature increment   ): Invalid value: 0
VCP code 0x0c (Color temperature request     ): 3000 + 2 * (feature 0B color temp increment) degree(s) Kelvin
VCP code 0x0e (Clock                         ): current value =    50, max value =   100
VCP code 0x10 (Brightness                    ): current value =    40, max value =   100
VCP code 0x12 (Contrast                      ): current value =    30, max value =   100
VCP code 0x14 (Select color preset           ): User 2 (sl=0x0c)
VCP code 0x16 (Video gain: Red               ): current value =   100, max value =   100
VCP code 0x18 (Video gain: Green             ): current value =   100, max value =   100
VCP code 0x1a (Video gain: Blue              ): current value =    85, max value =   100
VCP code 0x1e (Auto setup                    ): Auto setup not active (sl=0x00)
VCP code 0x20 (Horizontal Position (Phase)   ): current value =   249, max value =   100
VCP code 0x30 (Vertical Position (Phase)     ): current value =    11, max value =   100
VCP code 0x3e (Clock phase                   ): current value =     0, max value =   100
VCP code 0x52 (Active control                ): Value: 0x14
VCP code 0x60 (Input Source                  ): DisplayPort-1 (sl=0x0f)
VCP code 0x62 (Audio speaker volume          ): current value =    15, max value =   255
VCP code 0x6c (Video black level: Red        ): current value =   128, max value =   255
VCP code 0x6e (Video black level: Green      ): current value =   128, max value =   255
VCP code 0x70 (Video black level: Blue       ): current value =   128, max value =   255
VCP code 0x8d (Audio Mute                    ): Invalid value (sl=0x00)
VCP code 0xaa (Screen Orientation            ): 0 degrees (sl=0x01)
VCP code 0xac (Horizontal frequency          ): 1964 hz
VCP code 0xae (Vertical frequency            ): 60.00 hz
VCP code 0xb2 (Flat panel sub-pixel layout   ): Red/Green/Blue vertical stripe (sl=0x01)
VCP code 0xb4 (Source Timing Mode            ): mh=0x00, ml=0x02, sh=0x00, sl=0x01
VCP code 0xb6 (Display technology type       ): LCD (active matrix) (sl=0x03)
VCP code 0xc0 (Display usage time            ): Usage time (hours) = 123 (0x00007b) mh=0xff, ml=0xff, sh=0x00, sl=0x7b
VCP code 0xc6 (Application enable key        ): 0x45cc
VCP code 0xc8 (Display controller type       ): Mfg: Mstar (sl=0x05), controller number: mh=0x00, ml=0x00, sh=0x56
VCP code 0xc9 (Display firmware level        ): 41.2
VCP code 0xca (OSD                           ): OSD Enabled (sl=0x02)
VCP code 0xcc (OSD Language                  ): English (sl=0x02)
VCP code 0xd6 (Power mode                    ): DPM: On,  DPMS: Off (sl=0x01)
VCP code 0xdc (Display Mode                  ): Standard/Default mode (sl=0x00)
VCP code 0xde (Scratch Pad                   ): SL: 0x00 ,  SH: 0x00
VCP code 0xdf (VCP Version                   ): 2.1
</code></pre></div>    </div>
  </li>
</ul>

<p>With the above command and information, I can create scripts for setting brightness and contrast for day and evening respectively.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code># For day
sudo ddcutil --display 2 setvcp 10 55
sudo ddcutil --display 2 setvcp 12 50
sudo ddcutil --display 2 setvcp 1a 85

# For evening
sudo ddcutil --display 2 setvcp 10 40
sudo ddcutil --display 2 setvcp 12 30
sudo ddcutil --display 2 setvcp 1a 75
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="command" /><summary type="html"><![CDATA[According to Wikipedia, DDC/CI (Command Interface) standard was introduced in August 1998, which specifies a means for a computer to send commands to the monitor, as well as receive sensor data from the monitor, over a bidirectional link. My second external monitor is Dell P2222H, which just supports this functionality. Therefore, it is possible to adjust brightness and contrast from software without bothering to manipulate a button on the back.]]></summary></entry><entry><title type="html">Perform numerical experiments in Emacs Org mode</title><link href="https://jihuan-tian.github.io/computer/2023/01/19/perform-numerical-experiments-in-emacs-org-mode.html" rel="alternate" type="text/html" title="Perform numerical experiments in Emacs Org mode" /><published>2023-01-19T00:00:00+08:00</published><updated>2023-01-19T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/01/19/perform-numerical-experiments-in-emacs-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/01/19/perform-numerical-experiments-in-emacs-org-mode.html"><![CDATA[<p>During the years of my PhD research, a numerical experiment for verifying theoretical concepts required several stages, which were accomplished with different tools or in different environments.</p>

<ol>
  <li>Program implementation
    <ul>
      <li>Activity: Write and debug the source code for the numerical algorithm.</li>
      <li>Tool and environment: Emacs editor or some IDE, such as MATLAB, Visual Studio, etc.</li>
    </ul>
  </li>
  <li>Data generation
    <ul>
      <li>Activity
        <ul>
          <li>Generate configuration or input files in batch using Linux commands.</li>
          <li>Run the test program which produces a bunch of data files (<a href="/computer/2022/08/03/redirect-program-output-to-log-files.html">reference</a>).</li>
        </ul>
      </li>
      <li>Tool and environment: Linux command executed in a terminal, such as Konsole.</li>
    </ul>
  </li>
  <li>Data transformation
    <ul>
      <li>Activity: use Bash, Awk and Linux commands to extract and transform interested quantities from the data files.</li>
      <li>Tool and environment: Write the scripts in Emacs, execute Linux commands in the terminal</li>
    </ul>
  </li>
  <li>Postprocessing and visualization
    <ul>
      <li>Activity
        <ul>
          <li>Write and run Octave scripts to postprocess data files.</li>
          <li>Plot figures and save them to image files.</li>
          <li>Image files are converted to different formats using Ghostscript.</li>
          <li>Create a spreadsheet for recording test conditions, manual computation and data visualization.</li>
        </ul>
      </li>
      <li>Tool and environment: edit and run Octave scripts in Emacs, image format conversion via executing <code class="language-plaintext highlighter-rouge">gs</code> command in the terminal, spreadsheet in LibreOffice Calc</li>
    </ul>
  </li>
  <li>Summary
    <ul>
      <li>Activity: Write test report which includes manual insertion of figures generated by Octave or spreadsheet, copy recorded test conditions and conclusions from spreadsheet.</li>
      <li>Tool and environment: LibreOffice Writer</li>
    </ul>
  </li>
</ol>

<p>Now, I have switched to Emacs Org mode, which provides a basic markup language support and a powerful LaTeX export backend. Furthermore, with the help of its <strong>babel</strong> extension, I am able to start interactive sessions to write and run multilingual source code, which include but not limited to math computation (both numerical and symbolic) and visualization via Octave and Maxima, rigorous mathematical drawing via Asymptote, Bash and Python scripts, Linux command execution, etc. In this way, all the previous stages involved in a numerical experiment can be incorporated into Emacs. Among them, stage 2~5 can be coalesced into Org mode. This will greatly reduce the burden of switching among different tools and environments, which spares my brain more space for meaningful and in-depth thinking.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="算法开发" /><category term="Org-mode" /><category term="command" /><summary type="html"><![CDATA[During the years of my PhD research, a numerical experiment for verifying theoretical concepts required several stages, which were accomplished with different tools or in different environments.]]></summary></entry><entry><title type="html">Insert a bunch of images in Org mode for LaTeX export</title><link href="https://jihuan-tian.github.io/computer/2023/01/15/insert-a-bunch-of-images-in-org-mode-for-latex-export.html" rel="alternate" type="text/html" title="Insert a bunch of images in Org mode for LaTeX export" /><published>2023-01-15T00:00:00+08:00</published><updated>2023-01-15T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/01/15/insert-a-bunch-of-images-in-org-mode-for-latex-export</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/01/15/insert-a-bunch-of-images-in-org-mode-for-latex-export.html"><![CDATA[<p>For writing test reports, we often need to insert a bunch of small figures into the document, which has a gallery effect. In Emacs Org mode with LaTeX as the export backend, the collection of images should be placed in a <code class="language-plaintext highlighter-rouge">center</code> environment. In addition, the <code class="language-plaintext highlighter-rouge">:center</code> LaTeX property should be added in the <code class="language-plaintext highlighter-rouge">ATTR_LATEX</code> directive.</p>

<p>The source code in Org mode:</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#+BEGIN_CENTER
#+ATTR_HTML: :width 500px
#+ATTR_LATEX: :width 0.35\textwidth :center
[[file:./figures/image1.png]]
#+ATTR_HTML: :width 500px
#+ATTR_LATEX: :width 0.35\textwidth :center
[[file:./figures/image2.png]]
#+ATTR_HTML: :width 500px
#+ATTR_LATEX: :width 0.35\textwidth :center
[[file:./figures/image3.png]]
#+END_CENTER
</code></pre></div></div>

<p>The exported LaTeX code:</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">\begin{center}</span>
  <span class="k">\includegraphics</span><span class="na">[width=0.35\textwidth]</span><span class="p">{</span>../figures/image1.png<span class="p">}</span>
  <span class="k">\includegraphics</span><span class="na">[width=0.35\textwidth]</span><span class="p">{</span>../figures/image2.png<span class="p">}</span>
  <span class="k">\includegraphics</span><span class="na">[width=0.35\textwidth]</span><span class="p">{</span>../figures/image3.png<span class="p">}</span>
<span class="nt">\end{center}</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LaTeX" /><category term="Org-mode" /><summary type="html"><![CDATA[For writing test reports, we often need to insert a bunch of small figures into the document, which has a gallery effect. In Emacs Org mode with LaTeX as the export backend, the collection of images should be placed in a center environment. In addition, the :center LaTeX property should be added in the ATTR_LATEX directive.]]></summary></entry><entry><title type="html">Make LUKS encrypted partition</title><link href="https://jihuan-tian.github.io/computer/2023/01/10/make-luks-encrypted-partition.html" rel="alternate" type="text/html" title="Make LUKS encrypted partition" /><published>2023-01-10T00:00:00+08:00</published><updated>2023-01-10T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2023/01/10/make-luks-encrypted-partition</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2023/01/10/make-luks-encrypted-partition.html"><![CDATA[<p>I’ve been using <code class="language-plaintext highlighter-rouge">veracrypt</code> on my Linux workstation to crypt all my data disks or partitions for a long time. Now I switch to <a href="https://en.wikipedia.org/wiki/Linux_Unified_Key_Setup">Linux Unified Key Setup (LUKS)</a> for my newly purchased Seagate One Touch Desktop disk.</p>

<h1 id="fundamental-concepts">Fundamental concepts</h1>

<ul>
  <li>
    <p>GPT (GUID Partition Table)</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>GPT is modern standard for the layout of the partition table. GPT uses 64-bit log‐ ical block addresses, checksums, UUIDs and names for partitions and an unlimited number of partitions (although the number of partitions is usually restricted to 128 in many partitioning tools).
    
Note that the first sector is still reserved for a protective MBR in the GPT speci‐ fication. It prevents MBR-only partitioning tools from mis-recognizing and over‐ writing GPT disks.
    
GPT is always a better choice than MBR, especially on modern hardware with a UEFI boot loader.
</code></pre></div>    </div>
  </li>
  <li>
    <p>DOS-type (MBR)</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>A DOS-type partition table can describe an unlimited number of partitions. In sec‐ tor 0 there is room for the description of 4 partitions (called `primary'). One of these may be an extended partition; this is a box holding logical partitions, with descriptors found in a linked list of sectors, each preceding the corresponding logical partitions. The four primary partitions, present or not, get numbers 1-4. Logical partitions are numbered starting from 5.
    
In a DOS-type partition table the starting offset and the size of each partition is stored in two ways: as an absolute number of sectors (given in 32 bits), and as a Cylinders/Heads/Sectors triple (given in 10+8+6 bits). The former is OK -- with 512-byte sectors this will work up to 2 TB. The latter has two problems. First, these C/H/S fields can be filled only when the number of heads and the number of sectors per track are known. And second, even if we know what these numbers should be, the 24 bits that are available do not suffice. DOS uses C/H/S only, Windows uses both, Linux never uses C/H/S. The C/H/S addressing is deprecated and may be unsupported in some later fdisk version.
</code></pre></div>    </div>

    <p><strong>For a partition larger than 2TB, use the GPT partition instead of MBR.</strong></p>
  </li>
</ul>

<h1 id="procedures">Procedures</h1>

<ol>
  <li>
    <p>Check the block devices using <code class="language-plaintext highlighter-rouge">lsblk</code>. It can be seen that the new disk is <code class="language-plaintext highlighter-rouge">/dev/sdc</code>, which has two partitions already.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NAME               MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda                  8:0    0 465.8G  0 disk 
├─sda1               8:1    0  14.9G  0 part [SWAP]
├─sda2               8:2    0  93.1G  0 part /
└─sda3               8:3    0 357.7G  0 part 
  └─veracrypt1_1   254:0    0 357.7G  0 dm   
    └─veracrypt1_0 254:1    0 357.7G  0 dm   
      └─veracrypt1 254:2    0 357.7G  0 dm   /home/jihuan/文档
sdb                  8:16   0   1.8T  0 disk 
├─sdb1               8:17   0 548.2G  0 part 
├─sdb2               8:18   0 779.7G  0 part 
├─sdb3               8:19   0 789.9G  0 part 
└─veracrypt2_1     254:3    0   1.8T  0 dm   
  └─veracrypt2_0   254:4    0   1.8T  0 dm   
    └─veracrypt2   254:5    0   1.8T  0 dm   /media/backup
sdc                  8:32   0   3.6T  0 disk 
├─sdc1               8:33   0   200M  0 part 
└─sdc2               8:34   0   3.6T  0 part 
sr0                 11:0    1  1024M  0 rom
</code></pre></div>    </div>
  </li>
  <li>Unmount partitions <code class="language-plaintext highlighter-rouge">/dev/sdc1</code> or <code class="language-plaintext highlighter-rouge">/dev/sdc2</code> if needed.</li>
  <li>
    <p>Check the type of existing partitions on the disk using <code class="language-plaintext highlighter-rouge">gdisk</code>. We can see the first partition is EFI.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>gdisk <span class="nt">-l</span> /dev/sdc
</code></pre></div>    </div>
  </li>
  <li>Within the <code class="language-plaintext highlighter-rouge">gdisk</code> session, delete existing partitions using the <code class="language-plaintext highlighter-rouge">d</code> command.</li>
  <li>Create a new Linux LUKS partition using the <code class="language-plaintext highlighter-rouge">n</code> command. The partition type code is <code class="language-plaintext highlighter-rouge">8309</code>.</li>
  <li>Change the partition name to <code class="language-plaintext highlighter-rouge">Backup</code> using the <code class="language-plaintext highlighter-rouge">c</code> command.</li>
  <li>Use the <code class="language-plaintext highlighter-rouge">w</code> command to write out the partition table.</li>
  <li>
    <p>Format the partition <code class="language-plaintext highlighter-rouge">/dev/sdc1</code> with LUKS.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>cryptsetup luksFormat /dev/sdc1
</code></pre></div>    </div>
  </li>
  <li>
    <p>Open the LUKS partition and associate it with a map point named <code class="language-plaintext highlighter-rouge">backup</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>cryptsetup luksOpen /dev/sdc1 backup
</code></pre></div>    </div>
  </li>
  <li>
    <p>Check the block devices using <code class="language-plaintext highlighter-rouge">lsblk</code> again and we can see the map point <code class="language-plaintext highlighter-rouge">backup</code> becomes a child of <code class="language-plaintext highlighter-rouge">sdc</code> in the tree view.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NAME               MAJ:MIN RM   SIZE RO TYPE  MOUNTPOINT
sda                  8:0    0 465.8G  0 disk
├─sda1               8:1    0  14.9G  0 part  [SWAP]
├─sda2               8:2    0  93.1G  0 part  /
└─sda3               8:3    0 357.7G  0 part
└─veracrypt1_1   254:0    0 357.7G  0 dm
└─veracrypt1_0 254:1    0 357.7G  0 dm
└─veracrypt1 254:2    0 357.7G  0 dm    /home/jihuan/文档
sdb                  8:16   0   1.8T  0 disk
├─sdb1               8:17   0 548.2G  0 part
├─sdb2               8:18   0 779.7G  0 part
├─sdb3               8:19   0 789.9G  0 part
└─veracrypt2_1     254:3    0   1.8T  0 dm
└─veracrypt2_0   254:4    0   1.8T  0 dm
└─veracrypt2   254:5    0   1.8T  0 dm    /media/backup
sdc                  8:32   0   3.6T  0 disk
└─sdc1               8:33   0   3.6T  0 part
└─backup         254:6    0   3.6T  0 crypt
sr0                 11:0    1  1024M  0 rom
</code></pre></div>    </div>
  </li>
  <li>
    <p>Create an <code class="language-plaintext highlighter-rouge">ext4</code> file system in the LUKS partition.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mkfs.ext4 /dev/mapper/backup
</code></pre></div>    </div>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mke2fs 1.46.2 (28-Feb-2021)
Creating filesystem with 976750540 4k blocks and 244195328 inodes
Filesystem UUID: 6694d01b-92b9-44cf-b4c5-83aaf748ce01
Superblock backups stored on blocks:
32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968,
102400000, 214990848, 512000000, 550731776, 644972544
    
Allocating group tables: done
Writing inode tables: done
Creating journal (262144 blocks): done
Writing superblocks and filesystem accounting information: done
</code></pre></div>    </div>
  </li>
  <li>
    <p>Mount the created <code class="language-plaintext highlighter-rouge">ext4</code> file system as usual.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>mount /dev/mapper/backup /media/backup2
</code></pre></div>    </div>
  </li>
  <li>Run <code class="language-plaintext highlighter-rouge">rynsc</code> to backup data.</li>
  <li>
    <p>Umount the volume and close the LUKS partition.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>umount /media/backup2
<span class="nb">sudo </span>cryptsetup luksClose backup
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="command" /><category term="hardware" /><category term="security" /><summary type="html"><![CDATA[I’ve been using veracrypt on my Linux workstation to crypt all my data disks or partitions for a long time. Now I switch to Linux Unified Key Setup (LUKS) for my newly purchased Seagate One Touch Desktop disk.]]></summary></entry><entry><title type="html">Batch download images from Xiaohongshu</title><link href="https://jihuan-tian.github.io/computer/2022/12/31/batch-download-images-from-xiaohongshu.html" rel="alternate" type="text/html" title="Batch download images from Xiaohongshu" /><published>2022-12-31T00:00:00+08:00</published><updated>2022-12-31T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/12/31/batch-download-images-from-xiaohongshu</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/12/31/batch-download-images-from-xiaohongshu.html"><![CDATA[<ol>
  <li>Open Firefox developer tools.</li>
  <li>Search the HTML class name <code class="language-plaintext highlighter-rouge">change-pic</code> and delete it.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">C-S-c</code> to re-pick the HTML element containing the image area.</li>
  <li>Select the parent HTML node of the currently focused node, which is something like <code class="language-plaintext highlighter-rouge">&lt;ul class="slide" data-v-f3680c6c=""&gt;</code>.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">C-c</code> to copy the HTML code of the node and save it to a file.</li>
  <li>
    <p>Use a combination of several commands, <code class="language-plaintext highlighter-rouge">grep</code>, <code class="language-plaintext highlighter-rouge">sed</code>, <code class="language-plaintext highlighter-rouge">xargs</code> and <code class="language-plaintext highlighter-rouge">wget</code>, to extract image URLs and download all of them.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">grep</span> <span class="nt">-P</span> <span class="nt">-o</span> <span class="s1">'(?&lt;=url\().*?(?=\))'</span> album.html | <span class="nb">sed</span> <span class="s2">"s/&amp;quot;/</span><span class="se">\"</span><span class="s2">/g"</span> |sed <span class="s2">"s/</span><span class="se">\/\/</span><span class="s2">/https:</span><span class="se">\/\/</span><span class="s2">/"</span> | xargs wget
</code></pre></div>    </div>

    <p>N.B. In the pipe-concatenated commands above, <code class="language-plaintext highlighter-rouge">grep</code> uses the option <code class="language-plaintext highlighter-rouge">-P</code> to enable Perl compatible regular expressions. Its option <code class="language-plaintext highlighter-rouge">-o</code> will output only the matched patterns. In the regular expression <code class="language-plaintext highlighter-rouge">(?&lt;=url\().*?(?=\))</code>, <code class="language-plaintext highlighter-rouge">(?&lt;=url\()</code> is a positive look-behind assertion, while <code class="language-plaintext highlighter-rouge">(?=\))</code> is a positive look-ahead assertion (<a href="https://www.perlmonks.org/?node_id=518444">reference</a>). <code class="language-plaintext highlighter-rouge">.*?</code> matches any characters between a pair of brackets <code class="language-plaintext highlighter-rouge">()</code> in a non-greedy mode. The total effect of this regular expression is to extract the url from the string below.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>url(&amp;quot;//ci.xiaohongshu.com/8f9e2cf5-ea58-ef7f-b3bb-65e8ede2798c?imageView2/2/w/1080/format/jpg&amp;quot;)
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">sed</code> first replaces HTML quote <code class="language-plaintext highlighter-rouge">&amp;quot;</code> with <code class="language-plaintext highlighter-rouge">"</code> and then <code class="language-plaintext highlighter-rouge">//</code> with <code class="language-plaintext highlighter-rouge">https://</code>. Finally, <code class="language-plaintext highlighter-rouge">xargs</code> passes each line of extracted URL to <code class="language-plaintext highlighter-rouge">wget</code> which downloads the image.</p>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="command" /><summary type="html"><![CDATA[Open Firefox developer tools. Search the HTML class name change-pic and delete it. Press C-S-c to re-pick the HTML element containing the image area. Select the parent HTML node of the currently focused node, which is something like &lt;ul class="slide" data-v-f3680c6c=""&gt;. Press C-c to copy the HTML code of the node and save it to a file. Use a combination of several commands, grep, sed, xargs and wget, to extract image URLs and download all of them. grep -P -o '(?&lt;=url\().*?(?=\))' album.html | sed "s/&amp;quot;/\"/g" |sed "s/\/\//https:\/\//" | xargs wget N.B. In the pipe-concatenated commands above, grep uses the option -P to enable Perl compatible regular expressions. Its option -o will output only the matched patterns. In the regular expression (?&lt;=url\().*?(?=\)), (?&lt;=url\() is a positive look-behind assertion, while (?=\)) is a positive look-ahead assertion (reference). .*? matches any characters between a pair of brackets () in a non-greedy mode. The total effect of this regular expression is to extract the url from the string below. url(&amp;quot;//ci.xiaohongshu.com/8f9e2cf5-ea58-ef7f-b3bb-65e8ede2798c?imageView2/2/w/1080/format/jpg&amp;quot;) sed first replaces HTML quote &amp;quot; with " and then // with https://. Finally, xargs passes each line of extracted URL to wget which downloads the image.]]></summary></entry><entry><title type="html">Portable hard disk IO problem during rsync</title><link href="https://jihuan-tian.github.io/computer/2022/12/29/portable-hard-disk-io-problem-during-rsync.html" rel="alternate" type="text/html" title="Portable hard disk IO problem during rsync" /><published>2022-12-29T00:00:00+08:00</published><updated>2022-12-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/12/29/portable-hard-disk-io-problem-during-rsync</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/12/29/portable-hard-disk-io-problem-during-rsync.html"><![CDATA[<p>Yesterday, when making data backup to my portable hard disk West Digital My Passport WD20, I ran about <code class="language-plaintext highlighter-rouge">rsync</code> IO problem, which was probably caused by damaged sectors. Then I used the following procedures to check and repair bad blocks.</p>

<ol>
  <li>
    <p>Use the <code class="language-plaintext highlighter-rouge">dmesg</code> command (for printing or controlling the kernel ring buffer) to check the hard disk errors. It is clear that there are many critical medium errors on the device <code class="language-plaintext highlighter-rouge">/dev/sdc</code>.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[161861.101324] sd 6:0:0:0: [sdc] tag#0 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE cmd_age=6s
[161861.101330] sd 6:0:0:0: [sdc] tag#0 Sense Key : Medium Error [current] 
[161861.101333] sd 6:0:0:0: [sdc] tag#0 Add. Sense: Unrecovered read error
[161861.101337] sd 6:0:0:0: [sdc] tag#0 CDB: Read(10) 28 00 9e 00 33 40 00 00 c8 00
[161861.101341] blk_update_request: critical medium error, dev sdc, sector 2650813248 op 0x0:(READ) flags 0x80700 phys_seg 25 prio class 0
    
[163206.145345] sd 6:0:0:0: [sdc] tag#0 FAILED Result: hostbyte=DID_OK driverbyte=DRIVER_SENSE cmd_age=3s
[163206.145351] sd 6:0:0:0: [sdc] tag#0 Sense Key : Medium Error [current] 
[163206.145354] sd 6:0:0:0: [sdc] tag#0 Add. Sense: Unrecovered read error
[163206.145358] sd 6:0:0:0: [sdc] tag#0 CDB: Read(10) 28 00 9e 80 08 58 00 00 08 00
[163206.145363] blk_update_request: critical medium error, dev sdc, sector 2659190872 op 0x0:(READ) flags 0x3000 phys_seg 1 prio class 0
[163206.145427] EXT4-fs error (device dm-7): __ext4_get_inode_loc_noinmem:4506: inode #83102912: block 332398827: comm ls: unable to read itable block
</code></pre></div>    </div>
  </li>
  <li>
    <p>Since the ext4 volume on the hard disk is encrypted by VeraCrypt, we should check to which system device the VeraCrypt volume is mapped.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># -t: run veracrypt in text mode.</span>
<span class="c"># -l: list mounted volumes.</span>
veracrypt <span class="nt">-t</span> <span class="nt">-l</span>
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 3: /dev/sdc /dev/mapper/veracrypt3 - 
</code></pre></div>    </div>

    <p>No.3 is assigned to the volume. The displayed system device <code class="language-plaintext highlighter-rouge">/dev/mapper/veracrypt3</code> is only a symbolic link, which is associated with <code class="language-plaintext highlighter-rouge">/dev/dm-7</code>:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> <span class="nt">-l</span> /dev/mapper/veracrypt3
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>lrwxrwxrwx 1 root root 7 Dec 29 10:15 /dev/mapper/veracrypt3 -&gt; ../dm-7
</code></pre></div>    </div>
  </li>
  <li>
    <p>Use <code class="language-plaintext highlighter-rouge">testdisk</code> to check the addresses of superblock backups and the block size, in case the default super lock is damaged and needs a repair.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>testdisk /dev/dm-7
</code></pre></div>    </div>

    <p><img src="/figures/2022-12-29_10-04-22-testdisk-for-superblock.png" alt="img" /></p>
  </li>
  <li>
    <p>Umount the volume before checking and repairing it.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sudo </span>umount /media/backup2
</code></pre></div>    </div>
  </li>
  <li>
    <p>Check and repair the volume using the command <code class="language-plaintext highlighter-rouge">fsck.ext4</code>, which actually executes <code class="language-plaintext highlighter-rouge">e2fsck</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fsck.ext4 <span class="nt">-p</span> <span class="nt">-c</span> /dev/dm-7
</code></pre></div>    </div>

    <p>If the default superblock is damaged, run the command</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fsck.ext4 <span class="nt">-p</span> <span class="nt">-c</span> <span class="nt">-b</span> superblock <span class="nt">-B</span> blocksize /dev/dm-7
</code></pre></div>    </div>

    <p>Meaning of the command options of <code class="language-plaintext highlighter-rouge">e2fsck</code>:</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-b Use an alternative superblock instead of the default one, if the default one is damaged.
-B superblock specify the superblock size
-c This  option  causes e2fsck to use badblocks(8) program to do a read-only scan of the device in order to find any bad blocks.  If any bad blocks are found, they are added to the bad block inode to prevent them from being allocated to a file or directory.
-p Automatically  repair ("preen") the file system.  This option will cause e2fsck to automatically fix any filesystem problems that can be safely fixed without human intervention.  If e2fsck discovers a problem which may require the system administrator to take additional corrective action, e2fsck will print a description of the problem and then exit with the value 4  logically  or'ed  into the exit code.
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="command" /><category term="hardware" /><summary type="html"><![CDATA[Yesterday, when making data backup to my portable hard disk West Digital My Passport WD20, I ran about rsync IO problem, which was probably caused by damaged sectors. Then I used the following procedures to check and repair bad blocks.]]></summary></entry><entry><title type="html">Notes for upgrading Debian from Buster to Bullseye</title><link href="https://jihuan-tian.github.io/computer/2022/12/20/notes-for-upgrading-debian-from-buster-to-bullseye.html" rel="alternate" type="text/html" title="Notes for upgrading Debian from Buster to Bullseye" /><published>2022-12-20T00:00:00+08:00</published><updated>2022-12-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/12/20/notes-for-upgrading-debian-from-buster-to-bullseye</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/12/20/notes-for-upgrading-debian-from-buster-to-bullseye.html"><![CDATA[<ul>
  <li>
    <p>Use Tsinghua mirror (speed 11 MB/s) instead of previously used 163 mirror (speed 150 KB/s)</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free
    
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free
    
deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
</code></pre></div>    </div>
  </li>
  <li>
    <p>During the upgrade, the following command needs to be executed (maybe several times) if needed.</p>

    <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt --fix-broken install
</code></pre></div>    </div>
  </li>
  <li>
    <p>After dist-upgrade, some issues should be handled as below, some of which still cannot be solved.</p>
    <ul class="task-list">
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" /><code class="language-plaintext highlighter-rouge">/dev/sda</code> and <code class="language-plaintext highlighter-rouge">/dev/sdb</code> have been swapped after a warm system restart. Then the script <code class="language-plaintext highlighter-rouge">mount_disks.sh</code> for mounting hard disks should be modified. However, after performing a cold system restart, the order of hard disks returns to normal.</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Desktop notes plasmoid cannot be displayed. Solution: install the <code class="language-plaintext highlighter-rouge">plasma-widgets-addons</code> package.</li>
      <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Because some packages have been uninstalled during the system upgrade, they should be reinstalled again, such as those common KDE packages, <code class="language-plaintext highlighter-rouge">kde-baseapps</code>, <code class="language-plaintext highlighter-rouge">plasma-widgets-addons</code>, <code class="language-plaintext highlighter-rouge">kde-plasma-desktop</code> and <code class="language-plaintext highlighter-rouge">kde-standard</code>.</li>
      <li class="task-list-item">Emacs
        <ul class="task-list">
          <li class="task-list-item">
            <p><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Toolbar icons are lost with only their texts left. Reconfiguring the GNOME/GTK application style in KDE settings only temporarily make the icons reappear but they do not persist after system restart. N.B. The configuration of GTK theme and associated icon theme is in the file <code class="language-plaintext highlighter-rouge">~/.config/gtk-3.0/settings.ini</code>.</p>

            <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gtk-theme-name=Breeze
gtk-icon-theme-name=breeze
gtk-fallback-icon-theme=breeze
</code></pre></div>            </div>
          </li>
          <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" />Files cannot be copied within Dired mode.</li>
          <li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Org structure template is now triggered by <code class="language-plaintext highlighter-rouge">C-c C-,</code> instead of the old <code class="language-plaintext highlighter-rouge">&lt;KEY</code>.</li>
        </ul>
      </li>
      <li class="task-list-item">
        <p><input type="checkbox" class="task-list-item-checkbox" disabled="disabled" checked="checked" />Font scaling for high DPI monitor in Plasma has been improved. There is no need to manually increase the font size anymore, only a universal scaling operation is enough. Hence, previously manually enlarged fonts in some applications such as Eclipse should be restored to normal. For example, adjust the font size from 18 pt to 12 pt. However, the toolbar icon size in Eclipse should still be manually scaled to 200% by adding the following configuration to the initialization file <code class="language-plaintext highlighter-rouge">eclipse.ini</code>.</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-Dswt.enable.autoScale=true
-Dswt.autoScale=200
-Dswt.autoScale.method=nearest
</code></pre></div>        </div>
      </li>
      <li class="task-list-item">The rendering backend of the compositor should not use OpenGL, which will make the process <code class="language-plaintext highlighter-rouge">kwin_x11</code> occupy 100% CPU and the whole system stuck.</li>
    </ul>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="Debian" /><summary type="html"><![CDATA[Use Tsinghua mirror (speed 11 MB/s) instead of previously used 163 mirror (speed 150 KB/s) deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free During the upgrade, the following command needs to be executed (maybe several times) if needed. apt --fix-broken install After dist-upgrade, some issues should be handled as below, some of which still cannot be solved. /dev/sda and /dev/sdb have been swapped after a warm system restart. Then the script mount_disks.sh for mounting hard disks should be modified. However, after performing a cold system restart, the order of hard disks returns to normal. Desktop notes plasmoid cannot be displayed. Solution: install the plasma-widgets-addons package. Because some packages have been uninstalled during the system upgrade, they should be reinstalled again, such as those common KDE packages, kde-baseapps, plasma-widgets-addons, kde-plasma-desktop and kde-standard. Emacs Toolbar icons are lost with only their texts left. Reconfiguring the GNOME/GTK application style in KDE settings only temporarily make the icons reappear but they do not persist after system restart. N.B. The configuration of GTK theme and associated icon theme is in the file ~/.config/gtk-3.0/settings.ini. gtk-theme-name=Breeze gtk-icon-theme-name=breeze gtk-fallback-icon-theme=breeze Files cannot be copied within Dired mode. Org structure template is now triggered by C-c C-, instead of the old &lt;KEY. Font scaling for high DPI monitor in Plasma has been improved. There is no need to manually increase the font size anymore, only a universal scaling operation is enough. Hence, previously manually enlarged fonts in some applications such as Eclipse should be restored to normal. For example, adjust the font size from 18 pt to 12 pt. However, the toolbar icon size in Eclipse should still be manually scaled to 200% by adding the following configuration to the initialization file eclipse.ini. -Dswt.enable.autoScale=true -Dswt.autoScale=200 -Dswt.autoScale.method=nearest The rendering backend of the compositor should not use OpenGL, which will make the process kwin_x11 occupy 100% CPU and the whole system stuck.]]></summary></entry><entry><title type="html">Plot a figure with LaTeX symbols in Octave</title><link href="https://jihuan-tian.github.io/computer/2022/11/26/plot-a-figure-with-latex-symbols-in-octave.html" rel="alternate" type="text/html" title="Plot a figure with LaTeX symbols in Octave" /><published>2022-11-26T00:00:00+08:00</published><updated>2022-11-26T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/11/26/plot-a-figure-with-latex-symbols-in-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/11/26/plot-a-figure-with-latex-symbols-in-octave.html"><![CDATA[<p>Adding LaTeX equations to a figure is very useful for mathematical visualization. Unlike MATLAB which has a simple tex interpreter for typesetting text labels, Octave itself does not support rendering math equations. However, by cooperating with LaTeX, Ghostscript and <code class="language-plaintext highlighter-rouge">epstopdf</code>, Octave can handle this task with professional quality, which is much better than MATLAB. This is achieved by the <code class="language-plaintext highlighter-rouge">epslatexstandalone</code> driver provided in the <code class="language-plaintext highlighter-rouge">print</code> function.</p>

<p>I adopt the following procedure to produce figures with different formats depending on the file’s extension name.</p>

<ol>
  <li>Plot the figure and print it using the <code class="language-plaintext highlighter-rouge">epslatexstandalone</code> driver. It generates an EPS file as well as a tex file that includes this EPS file.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">sed</code> to inject a line of LaTeX code which imports my own LaTeX template.</li>
  <li>Compile the LaTeX file into a dvi file.</li>
  <li>Convert the dvi file to an EPS file.</li>
  <li>Use Ghostscript or <code class="language-plaintext highlighter-rouge">epstopdf</code> command to transform the EPS file to the final target.</li>
</ol>

<p>I’ve written a script <code class="language-plaintext highlighter-rouge">PrintGCFLatex</code> to automate the above process.</p>

<pre><code class="language-octave">function PrintGCFLatex(varargin)
  ## PrintGCFLatex - Print the current figure with text processed by LaTeX. The
  ## resulted file is generated in the current directory.

  [reg, prop] = parseparams(varargin);

  ## Take the first number valued argument as the figure handle. If
  ## not specified, use the current figure.
  if (length(reg) &gt; 0)
    h = reg{1};
  else
    h = gcf;
  endif

  if (length(prop) &gt; 0)
    ## Take the first string argument as the figure file name.
    filename = prop{1};
    if (length(prop) &gt; 1)
      resolution = prop{2};
    else
      resolution = 500;
    endif
  else
    error("Please provide the figure file name!");
  endif

  ## Get the extension of the figure file name.
  [dir_name, base_name, ext_name] = fileparts(filename);

  if (isempty(ext_name))
    ext_name = ".png";
  endif

  tex_name = cstrcat(base_name, ".tex");
  dvi_name = cstrcat(base_name, ".dvi");
  eps_name = cstrcat(base_name, ".eps");

  ## Generate an eps figure with text processed by LaTeX.
  print(h, eps_name, "-depslatexstandalone");
  ## Use sed to insert my own LaTeX template into the tex file.
  system(cstrcat("sed -i '4i \\\\\\input{octave-plot}' ", "\"", tex_name, "\""));
  ## Process the tex file and generate dvi file.
  system(cstrcat("latex ", "\"", tex_name, "\""));
  ## Convert the dvi file to eps file.
  system(cstrcat("dvips -E ", "\"", dvi_name, "\"", " -o ", "\"", eps_name, "\""));

  ## Convert the eps file to other formats using Ghostscript.
  switch(ext_name)
    case ".jpg"
      system(cstrcat("gs -dNOSAFER ", "-r", num2str(resolution), " -dBATCH -sDEVICE=jpeg -dNOPAUSE -dEPSCrop -sOutputFile=", "\"", cstrcat(base_name, ".jpg"), "\" ", "\"", eps_name, "\""));
    case ".png"
      ## Use device png256 instead of pngalpha, which has better visualization effect.
      system(cstrcat("gs -dNOSAFER ", "-r", num2str(resolution), " -dBATCH -sDEVICE=png256 -dNOPAUSE -dEPSCrop -sOutputFile=", "\"", cstrcat(base_name, ".png"), "\" ", "\"", eps_name, "\""));
    case ".pdf"
      system(cstrcat("epstopdf ", eps_name));
    otherwise
      error("Figure format not implemented!");
  endswitch
endfunction
</code></pre>

<p>Now, let’s plot a Gaussian function as an example, where the LaTeX equation is placed in a colored box.</p>

<pre><code class="language-octave">cd "./figures";
x = -1:0.01:1;
y = gaussian_distribution(x, 0, 0.2^2);
figure(1, "visible", "off");
plot(x, y, 'r-', "linewidth", 3);
text(-0.5, 1, "\\colorbox{yellow}{$\\displaystyle{\\mathcal{N}(x) = \\frac{1}{\\sqrt{2\\pi}\\sigma} \\exp\\left\\{ -\\frac{1}{2} \\frac{(x-\\mu)^2}{\\sigma^{2}} \\right\\}}$}", "fontsize", 20);
set(gca, "fontsize", 18);
grid on;
PrintGCFLatex("2022-11-26-gaussian.png");
ans = "./figures/2022-11-26-gaussian.png";
</code></pre>

<p><img src="/figures/2022-11-26-gaussian.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><category term="LaTeX" /><summary type="html"><![CDATA[Adding LaTeX equations to a figure is very useful for mathematical visualization. Unlike MATLAB which has a simple tex interpreter for typesetting text labels, Octave itself does not support rendering math equations. However, by cooperating with LaTeX, Ghostscript and epstopdf, Octave can handle this task with professional quality, which is much better than MATLAB. This is achieved by the epslatexstandalone driver provided in the print function.]]></summary></entry><entry><title type="html">Filtering in file explorer on Linux</title><link href="https://jihuan-tian.github.io/computer/2022/10/26/filtering-in-file-explorer-on-linux.html" rel="alternate" type="text/html" title="Filtering in file explorer on Linux" /><published>2022-10-26T00:00:00+08:00</published><updated>2022-10-26T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/10/26/filtering-in-file-explorer-on-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/10/26/filtering-in-file-explorer-on-linux.html"><![CDATA[<p>When we write a LaTeX document, there will be a bunch of intermediate or temporary files generated in the same folder as the TeX file, such as <code class="language-plaintext highlighter-rouge">*.aux</code>, <code class="language-plaintext highlighter-rouge">*.synctex.gz</code>, <code class="language-plaintext highlighter-rouge">*.out</code>, <code class="language-plaintext highlighter-rouge">*.toc</code>, <code class="language-plaintext highlighter-rouge">*.thm</code>, <code class="language-plaintext highlighter-rouge">*.bbl</code>, <code class="language-plaintext highlighter-rouge">*.blg</code>. This brings mess to our browsing experience in the file explorer. To focus on those files which need our editing and reading, we can use the filter function provided by Dolphin, the default KDE file explorer on Linux, to show only TeX files or PDF files. In addition, by clicking on the small lock icon at the right of the filter bar, the current filter can be kept effective when we change to another folder.</p>

<p align="center"><img src="/figures/2022-10-26_14-27-54-dolphin-latex-files.png" alt="Many intermediate files are displayed in Dolphin by default" /></p>
<p align="center">Many intermediate files are displayed in Dolphin by default</p>

<p align="center"><img src="/figures/2022-10-26_14-45-14-dolphin-latex-files-filtered.png" alt="TeX files are filtered to be shown in Dolphin" /></p>
<p align="center">TeX files are filtered to be shown in Dolphin</p>

<p>However, the capability of the Dolphin’s file name filter is still limited. It only checks if a file name contains the input string and it does not support pattern matching. To to apply a more complex file name filter, we can resort to the Emacs <code class="language-plaintext highlighter-rouge">Dired</code> mode. The procedures are summarized below.</p>

<ol>
  <li>Press <code class="language-plaintext highlighter-rouge">C-x d</code> to enter the <code class="language-plaintext highlighter-rouge">Dired</code> mode.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">% m</code> to mark desired files via regular expression matching, such as <code class="language-plaintext highlighter-rouge">tex$</code>, <code class="language-plaintext highlighter-rouge">pdf$</code>, etc.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">% m</code> again to mark more files, if needed.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">t</code> to invert the selection, i.e. all unmarked files are selected.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">k</code> to kill all lines corresponding to the marked files. N.B. This operation does not delete the files, but just filter them out from the <code class="language-plaintext highlighter-rouge">Dired</code> buffer.</li>
  <li>Press <code class="language-plaintext highlighter-rouge">g</code> again to restore the display of all files in the folder.</li>
</ol>

<p align="center"><img src="/figures/2022-10-26_21-20-41-file-filter-in-emacs-dired.png" alt="Only TeX and PDF files are displayed in the Dired mode in Emacs" /></p>
<p align="center">Only TeX and PDF files are displayed in the Dired mode in Emacs</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="KDE" /><category term="Dired-mode" /><summary type="html"><![CDATA[When we write a LaTeX document, there will be a bunch of intermediate or temporary files generated in the same folder as the TeX file, such as *.aux, *.synctex.gz, *.out, *.toc, *.thm, *.bbl, *.blg. This brings mess to our browsing experience in the file explorer. To focus on those files which need our editing and reading, we can use the filter function provided by Dolphin, the default KDE file explorer on Linux, to show only TeX files or PDF files. In addition, by clicking on the small lock icon at the right of the filter bar, the current filter can be kept effective when we change to another folder.]]></summary></entry><entry><title type="html">Navigation in Org mode for instant editing</title><link href="https://jihuan-tian.github.io/computer/2022/10/26/navigation-in-org-mode-for-instant-editing.html" rel="alternate" type="text/html" title="Navigation in Org mode for instant editing" /><published>2022-10-26T00:00:00+08:00</published><updated>2022-10-26T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/10/26/navigation-in-org-mode-for-instant-editing</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/10/26/navigation-in-org-mode-for-instant-editing.html"><![CDATA[<p>To realize the concept of instant editing, it is beneficial for us to get familiar with navigation operations in Org mode. In this post, I’ll summarize those that I use most during my note-taking and task management activities.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">S-TAB</code>: Global visibility cycling</li>
  <li>Display headings to a certain level
    <ul>
      <li><code class="language-plaintext highlighter-rouge">C-&lt;n&gt; C-c TAB</code>: place a cursor at a heading and press this hotkey to show its subheadings to level <code class="language-plaintext highlighter-rouge">&lt;n&gt;</code>.</li>
      <li>
        <p><code class="language-plaintext highlighter-rouge">C-&lt;n&gt; S-TAB</code>: show all headings in the current buffer to level <code class="language-plaintext highlighter-rouge">&lt;n&gt;</code>.</p>

        <p>For my personal journal, I put the writing year, date and article title in the first, second and third level headings respectively. Then I often use this function to browse the list of journal titles by showing the headings to level 3, while the contents are still folded.</p>
      </li>
    </ul>
    <p align="center"><img src="/figures/2022-10-26_15-59-40-journal-titles-in-org-mode.png" alt="" /></p>
  </li>
  <li>Quickly jump back and forth in Org mode
    <ul>
      <li><code class="language-plaintext highlighter-rouge">org-mark-ring-push</code> (<code class="language-plaintext highlighter-rouge">C-c %</code>): push the current cursor location into the ring buffer.</li>
      <li><code class="language-plaintext highlighter-rouge">org-mark-ring-goto</code> (<code class="language-plaintext highlighter-rouge">C-c *</code>): go to the previous cursor location in the ring buffer.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">org-goto</code> (<code class="language-plaintext highlighter-rouge">C-c C-j</code>): quickly jump to a heading in the current file via interactive search.</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">C-c C-x b</code>: Open a subtree in an indirect buffer.</p>

    <p>This is very useful for focusing to a specific subtree for reading and editing.</p>
    <p align="center"><img src="/figures/2022-10-26_16-01-21-subtree-in-indirect-buffer.png" alt="" /></p>
  </li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><summary type="html"><![CDATA[To realize the concept of instant editing, it is beneficial for us to get familiar with navigation operations in Org mode. In this post, I’ll summarize those that I use most during my note-taking and task management activities.]]></summary></entry><entry><title type="html">Octave figure window tuning for high DPI monitor</title><link href="https://jihuan-tian.github.io/computer/2022/10/17/octave-figure-window-tuning-for-high-dpi-monitor.html" rel="alternate" type="text/html" title="Octave figure window tuning for high DPI monitor" /><published>2022-10-17T00:00:00+08:00</published><updated>2022-10-17T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/10/17/octave-figure-window-tuning-for-high-dpi-monitor</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/10/17/octave-figure-window-tuning-for-high-dpi-monitor.html"><![CDATA[<p>Octave figure window and its font look extremely small when being displayed in a high DPI monitor.</p>

<p align="center"><img src="/figures/2022-10-17_14-06-38-octave-small-figure-in-high-dpi.png" alt="" /></p>

<p>Even though the Qt graphics toolkit, which is used by Octave GUI, supports automatic scaling (this can be enabled by setting the Boolean environment variable <code class="language-plaintext highlighter-rouge">QT_AUTO_SCREEN_SCALE_FACTOR</code> to 1), it will only enlarge the size of the figure window and its widgets but not the font size.</p>

<p align="center"><img src="/figures/2022-10-17_14-08-26-octave-figure-window-qt-scale-in-high-dpi.png" alt="" /></p>

<p>Therefore, the visual effect of an Octave figure window should be manually tuned for the high DPI monitor.</p>

<ol>
  <li>
    <p>Start Octave without Qt automatic screen scaling by creating a Bash alias:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">octave</span><span class="o">=</span><span class="s2">"QT_AUTO_SCREEN_SCALE_FACTOR=0 octave --silent"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Increase the default font size and line width in <code class="language-plaintext highlighter-rouge">~/.octaverc</code>.</p>

    <pre><code class="language-octave">set (0, "defaultaxesfontname", "Helvetica");
set (0, "defaultaxesfontsize", 24);
set (0, "defaulttextfontname", "Helvetica");
set (0, "defaulttextfontsize", 24);
set(0, "defaultlinelinewidth", 4);
</code></pre>
  </li>
  <li>
    <p>Define a function for creating a new figure with a doubled size.</p>

    <pre><code class="language-octave">function CreateFig(h)
  if (exist("h", "var"))
    figure(h);
  else
    h = figure;
  endif
    
  current_pos = get(h, "position");
  ## Double the size of the figure window.
  current_pos(3:4) = current_pos(3:4) * 2;
  set(h, "position", current_pos);
endfunction
</code></pre>
  </li>
</ol>

<p>Now the enlarged figure window is shown below.</p>

<p align="center"><img src="/figures/2022-10-17_14-20-28-octave-figure-window-enlarged-in-high-dpi.png" alt="" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[Octave figure window and its font look extremely small when being displayed in a high DPI monitor.]]></summary></entry><entry><title type="html">Installation of NVIDIA RTX A2000 graphic card and configuration for HiDPI</title><link href="https://jihuan-tian.github.io/computer/2022/09/13/installation-of-nvidia-rtx-a2000-graphic-card.html" rel="alternate" type="text/html" title="Installation of NVIDIA RTX A2000 graphic card and configuration for HiDPI" /><published>2022-09-13T00:00:00+08:00</published><updated>2022-09-13T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/09/13/installation-of-nvidia-rtx-a2000-graphic-card</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/09/13/installation-of-nvidia-rtx-a2000-graphic-card.html"><![CDATA[<p>Yesterday, I installed a new NVIDIA RTX A2000 graphic card onto my personal PC. It replaces my old Geforce GT210 card which has been used for over 11 years. The procedures for compiling the official NVIDIA driver and post-tuning the display effect on my high DPI monitor are summarized below.</p>

<ul>
  <li>Download the driver <code class="language-plaintext highlighter-rouge">NVIDIA-Linux-x86_64-515.65.01.run</code> from NVIDIA’s official website.</li>
  <li>
    <p>Install prerequisites for compiling the driver.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>apt-get <span class="nb">install </span>linux-headers-<span class="si">$(</span><span class="nb">uname</span> <span class="nt">-r</span><span class="si">)</span> build-essential libglvnd-dev pkg-config
</code></pre></div>    </div>
  </li>
  <li>
    <p>Disable the default <code class="language-plaintext highlighter-rouge">nouveau</code> driver.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo </span>blacklist nouveau <span class="o">&gt;</span> /etc/modprobe.d/blacklist-nvidia-nouveau.conf
</code></pre></div>    </div>
  </li>
  <li>
    <p>Compile and install the driver, during which DKMS should be enabled.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash NVIDIA-Linux-x86_64-515.65.01.run
</code></pre></div>    </div>
  </li>
</ul>

<p>It is lucky that the installation was quick and successful, while I have never been successful with my old card following the same procedure.</p>

<p>Next, I adjusted the font size for displaying on my high DPI monitor, since everything looked extremely small after the new card started running.</p>

<ul>
  <li>KDE system font size configuration</li>
  <li>Configure GTK3 font size in “Application Style”</li>
  <li>Eclipse
    <ul>
      <li>Enlarge all font size in the preferences</li>
      <li>
        <p>Enlarge icon size by adding the following in the configuration file <code class="language-plaintext highlighter-rouge">eclipse.ini</code>:</p>

        <div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-Dswt.enable.autoScale=true
-Dswt.autoScale=200
-Dswt.autoScale.method=nearest
</code></pre></div>        </div>
      </li>
    </ul>
  </li>
  <li>
    <p>Firefox: in <code class="language-plaintext highlighter-rouge">about:config</code>, set <code class="language-plaintext highlighter-rouge">layout.css.devPixelsPerPx</code> to 2.</p>
  </li>
  <li>Zotero: in <code class="language-plaintext highlighter-rouge">about:config</code>, set <code class="language-plaintext highlighter-rouge">layout.css.devPixelsPerPx</code> to 1.2.</li>
  <li>
    <p>Paraview</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">QT_AUTO_SCREEN_SCALE_FACTOR</span><span class="o">=</span>1
paraview &amp;
</code></pre></div>    </div>

    <p><span class="timestamp-wrapper"><span class="timestamp">[2023-09-01 Fri] </span></span> This variable should be set to 0 when using other programs, such as emacs and octave.</p>
  </li>
  <li>
    <p>Anki: <a href="https://docs.ankiweb.net/platform/windows/text-size.html">Anki reference</a> and <a href="https://doc.qt.io/qt-5/highdpi.html">Qt reference</a></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">anki</span><span class="o">=</span><span class="s2">"ANKI_NOHIGHDPI=1 ANKI_WEBSCALE=1.5 anki"</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Applications based on Java, such as PlantUML, yEd: set the environment variable <code class="language-plaintext highlighter-rouge">GDK_SCALE</code> to a value larger than 1. For example, in <code class="language-plaintext highlighter-rouge">~/.bashrc</code>:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">alias </span><span class="nv">plantuml</span><span class="o">=</span><span class="s2">"GDK_SCALE=2 java -jar /usr/share/plantuml/plantuml.jar -gui -tsvg"</span>
</code></pre></div>    </div>
  </li>
  <li>Netease music: add the command line option <code class="language-plaintext highlighter-rouge">--force-device-scale-factor=1.5</code>.</li>
</ul>

<p>Finally, I enabled <code class="language-plaintext highlighter-rouge">vdpau</code> for playing video in VLC. This can be configured by setting VLC’s video output device to <code class="language-plaintext highlighter-rouge">VDPAU output</code>.</p>

<p>See <a href="https://wiki.archlinux.org/title/HiDPI">here</a> for more information about HiDPI configuration on Linux.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="hardware" /><category term="NVIDIA" /><category term="HiDPI" /><summary type="html"><![CDATA[Yesterday, I installed a new NVIDIA RTX A2000 graphic card onto my personal PC. It replaces my old Geforce GT210 card which has been used for over 11 years. The procedures for compiling the official NVIDIA driver and post-tuning the display effect on my high DPI monitor are summarized below.]]></summary></entry><entry><title type="html">Adjust PDF file margin for printing</title><link href="https://jihuan-tian.github.io/computer/2022/09/11/adjust-pdf-file-margin-for-printing.html" rel="alternate" type="text/html" title="Adjust PDF file margin for printing" /><published>2022-09-11T00:00:00+08:00</published><updated>2022-09-11T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/09/11/adjust-pdf-file-margin-for-printing</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/09/11/adjust-pdf-file-margin-for-printing.html"><![CDATA[<p>The following set of tools can cooperate to achieve the said purpose, which allows me to read papers with an appropriate font size.</p>

<ol>
  <li>
    <p>Get the screen resolution (unit is pixel per inch) by calling <code class="language-plaintext highlighter-rouge">xdpyinfo</code>:</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>xdpyinfo | <span class="nb">grep </span>resolution
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>resolution:    82x82 dots per inch
</code></pre></div>    </div>
  </li>
  <li>
    <p>Open the PDF file in Okular and set the zoom percentage to 100%.</p>
  </li>
  <li>
    <p>Use the screen measuring tool <code class="language-plaintext highlighter-rouge">kruler</code> to get the desired margin size in pixels.</p>
  </li>
  <li>
    <p>Convert the margin size from pixel to bp (i.e. big point, 1/72 inch).</p>
  </li>
  <li>
    <p>Call <code class="language-plaintext highlighter-rouge">pdfcrop</code> to modify the margin. On Debian, <code class="language-plaintext highlighter-rouge">pdfcrop</code> is included in the package <code class="language-plaintext highlighter-rouge">texlive-extra-utils</code>. The specified margin size has the unit bp and can be either positive or negative, which is with respect to the effective text area without margin.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Specify a single margin size for all page sides.</span>
pdfcrop <span class="nt">--margins</span> &lt;all-sides&gt; input.pdf output.pdf
<span class="c"># Specify same left and right, top and bottom margin size values.</span>
pdfcrop <span class="nt">--margins</span> <span class="s1">'&lt;left/right&gt; &lt;top/bottom&gt;'</span> input
<span class="c"># Specify margin size values for four page sides indpendently.</span>
pdfcrop <span class="nt">--margins</span> <span class="s1">'&lt;left&gt; &lt;top&gt; &lt;right&gt; &lt;bottom&gt;'</span> input.pdf output.pdf
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="PDF" /><summary type="html"><![CDATA[The following set of tools can cooperate to achieve the said purpose, which allows me to read papers with an appropriate font size.]]></summary></entry><entry><title type="html">Link C++ code with GNU Octave</title><link href="https://jihuan-tian.github.io/computer/2022/08/08/link-cpp-code-with-gnu-octave.html" rel="alternate" type="text/html" title="Link C++ code with GNU Octave" /><published>2022-08-08T00:00:00+08:00</published><updated>2022-08-08T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/08/08/link-cpp-code-with-gnu-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/08/08/link-cpp-code-with-gnu-octave.html"><![CDATA[<h1 class="no_toc" id="table-of-contents">Table of contents</h1>

<ul id="markdown-toc">
  <li><a href="#generate-oct-module" id="markdown-toc-generate-oct-module">Generate oct module</a></li>
  <li><a href="#generate-standalone-program" id="markdown-toc-generate-standalone-program">Generate standalone program</a></li>
  <li><a href="#common-flags-and-variables-used-by-mkoctfile" id="markdown-toc-common-flags-and-variables-used-by-mkoctfile">Common flags and variables used by mkoctfile</a></li>
</ul>

<p>To realize the concept of <a href="/thoughts/2022/05/02/ship-of-theseus-and-scientific-software-development.html">Ship of Theseus</a> for scientific software development, it is requisite to interface C++ libraries with GNU Octave. In the following, I’ll introduce the key commands for compiling C++ source code and linking with Octave.</p>

<h1 id="generate-oct-module">Generate oct module</h1>

<p>To generate an <code class="language-plaintext highlighter-rouge">oct</code> module, which is in binary format and can be directly called from an Octave session like a normal <code class="language-plaintext highlighter-rouge">.m</code> script, the command <code class="language-plaintext highlighter-rouge">mkoctfile</code> should be used.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkoctfile <span class="o">[</span>OPTIONS] oct_module.cc
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">mkoctfile</code> calls the default C++ compiler, such as <code class="language-plaintext highlighter-rouge">g++</code>, and will automatically configures the necessary include path, library search path and library name for linking with Octave’s core library <code class="language-plaintext highlighter-rouge">liboctave.so</code> (N.B. On Linux, this library is not located in <code class="language-plaintext highlighter-rouge">/usr/lib</code> but in <code class="language-plaintext highlighter-rouge">/usr/lib/x86_64-linux-gnu</code>). Moreover, in-house or third-party header files and libraries can be introduced into the compiling and linking process, which significantly expands the capability of our <code class="language-plaintext highlighter-rouge">oct</code> file to be implemented. Therefore, the command options of <code class="language-plaintext highlighter-rouge">mkoctfile</code> are quite similar to those of a C++ compiler. For example,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-I DIR: include directory for searching header files.
-D DEF: definition of compiler macros.
-l LIB: library to be linked.
-L DIR: directory for searching libraries.
-c: compile but do not link.
-g: enable debugging options.
-o FILE: specify output file name.
</code></pre></div></div>

<h1 id="generate-standalone-program">Generate standalone program</h1>

<p>Instead of running a compiled <code class="language-plaintext highlighter-rouge">oct</code> in an Octave session, if we want to make a standalone C++ program which relies on the data structure and functions provided by Octave, execute <code class="language-plaintext highlighter-rouge">mkoctfile</code> with the <code class="language-plaintext highlighter-rouge">--link-stand-alone</code> option.</p>

<div class="language-sh highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mkoctfile <span class="nt">--link-stand-alone</span> standalone_program.cc <span class="nt">-o</span> standalone_program.out
</code></pre></div></div>

<h1 id="common-flags-and-variables-used-by-mkoctfile">Common flags and variables used by mkoctfile</h1>

<p>If our C++ source code to be linked with Octave depends on other header files or libraries, we should provide correct compiler and linker options for <code class="language-plaintext highlighter-rouge">mkoctfile</code>. Common flags and variables are summarized as below.</p>

<ul>
  <li>
    <p>For compiling and linking</p>

    <table>
      <thead>
        <tr>
          <th>Variable name</th>
          <th>Meaning</th>
          <th>Default value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">CC</code></td>
          <td>C compiler</td>
          <td><code class="language-plaintext highlighter-rouge">gcc</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">CXX</code></td>
          <td>C++ compiler</td>
          <td><code class="language-plaintext highlighter-rouge">g++</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">F77</code></td>
          <td>Fortran compiler</td>
          <td><code class="language-plaintext highlighter-rouge">gfortran</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">RANLIB</code></td>
          <td>The ranlib command, which generates index for archive.</td>
          <td><code class="language-plaintext highlighter-rouge">ranlib</code></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>For including header file and searching library</p>

    <table>
      <thead>
        <tr>
          <th>Variable name</th>
          <th>Meaning</th>
          <th>Default value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">INCLUDEDIR</code></td>
          <td>System wide include directory</td>
          <td><code class="language-plaintext highlighter-rouge">/usr/include</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">LIBDIR</code></td>
          <td>System wide library directory</td>
          <td><code class="language-plaintext highlighter-rouge">/usr/lib/x86_64-linux-gnu</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">LIBOCTAVE</code></td>
          <td>Octave core library</td>
          <td><code class="language-plaintext highlighter-rouge">-loctave</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">LIBOCTINTERP</code></td>
          <td>Octave interpolation library</td>
          <td><code class="language-plaintext highlighter-rouge">-loctinterp</code></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Preprocessor and compiler options</p>

    <table>
      <thead>
        <tr>
          <th>Variable name</th>
          <th>Meaning</th>
          <th>Default value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">CPPFLAGS</code></td>
          <td>C preprocessor flags</td>
          <td><code class="language-plaintext highlighter-rouge">-Wdate-time -D_FORTIFY_SOURCE=2</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">CFLAGS</code></td>
          <td>C compiler flags</td>
          <td><code class="language-plaintext highlighter-rouge">-g -O2 \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fdebug-prefix-map=/build/octave-d7p05X/octave-4.4.1=. \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fstack-protector-strong \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-Wformat -Werror=format-security</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">CXXFLAGS</code></td>
          <td>C++ compiler flags</td>
          <td><code class="language-plaintext highlighter-rouge">-g -O2 \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fdebug-prefix-map=/build/octave-d7p05X/octave-4.4.1=. \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fstack-protector-strong \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-Wformat -Werror=format-security</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">FFLAGS</code></td>
          <td>Fortran compiler flags</td>
          <td><code class="language-plaintext highlighter-rouge">-g -O2 \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fdebug-prefix-map=/build/octave-d7p05X/octave-4.4.1=. \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-fstack-protector-strong</code></td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <p>Linker options</p>

    <table>
      <thead>
        <tr>
          <th>Variable name</th>
          <th>Meaning</th>
          <th>Default value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">LFLAGS</code></td>
          <td>Path for searching Octave libraries</td>
          <td><code class="language-plaintext highlighter-rouge">-L/usr/lib/x86_64-linux-gnu/octave/4.4.1 \</code></td>
        </tr>
        <tr>
          <td> </td>
          <td> </td>
          <td><code class="language-plaintext highlighter-rouge">-L/usr/lib/x86_64-linux-gnu</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">LIBS</code></td>
          <td>Other dependent libraries besides Octave</td>
          <td><code class="language-plaintext highlighter-rouge">-lutil -lm</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">OCTAVE_LIBS</code></td>
          <td>Octave libraries to be linked with</td>
          <td><code class="language-plaintext highlighter-rouge">-loctinterp -loctave</code></td>
        </tr>
        <tr>
          <td><code class="language-plaintext highlighter-rouge">OCTLIBDIR</code></td>
          <td>Path to Octave libraries</td>
          <td><code class="language-plaintext highlighter-rouge">/usr/lib/x86_64-linux-gnu/octave/4.4.1</code></td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<p>To check the current value of the above variables adopted by <code class="language-plaintext highlighter-rouge">mkoctfile</code>, the option <code class="language-plaintext highlighter-rouge">-p</code> can be used for the inquiry.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="C++" /><category term="Octave" /><category term="算法开发" /><summary type="html"><![CDATA[Table of contents]]></summary></entry><entry><title type="html">Convert Joplin Markdown notes to PDF for reading on Kindle</title><link href="https://jihuan-tian.github.io/computer/2022/08/06/convert-joplin-markdown-notes-to-pdf-for-reading-on-kindle.html" rel="alternate" type="text/html" title="Convert Joplin Markdown notes to PDF for reading on Kindle" /><published>2022-08-06T00:00:00+08:00</published><updated>2022-08-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/08/06/convert-joplin-markdown-notes-to-pdf-for-reading-on-kindle</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/08/06/convert-joplin-markdown-notes-to-pdf-for-reading-on-kindle.html"><![CDATA[<p>The versatile document converter <code class="language-plaintext highlighter-rouge">pandoc</code> will be used for this purpose. It transforms the Markdown file to PDF by first converting it to LaTeX then compiling the LaTeX file into PDF.</p>

<p>The command line for calling <code class="language-plaintext highlighter-rouge">pandoc</code> is like this.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pandoc <span class="nt">-V</span> <span class="nv">documentclass</span><span class="o">=</span>extarticle <span class="nt">-V</span> <span class="nv">fontsize</span><span class="o">=</span>12pt <span class="nt">-V</span> colorlinks <span class="nt">-V</span> <span class="nv">urlcolor</span><span class="o">=</span>NavyBlue <span class="nt">--pdf-engine</span><span class="o">=</span>xelatex <span class="nt">-V</span> <span class="nv">CJKmainfont</span><span class="o">=</span><span class="s2">"Noto Sans CJK SC"</span> <span class="nt">-H</span> export-to-kindle.tex input.markdown <span class="nt">-o</span> output.pdf
</code></pre></div></div>

<p>Here I let <code class="language-plaintext highlighter-rouge">pandoc</code> use the LaTeX package <code class="language-plaintext highlighter-rouge">extsizes</code> for enabling a larger font in the whole document, such as 12pt, 14pt, 17 pt and 20pt, which is more friendly to my eyes. Hence, the LaTeX document class is set to <code class="language-plaintext highlighter-rouge">extarticle</code>. Since my Joplin notes captured from web pages usually contain Chinese characters, the LaTeX engine is <code class="language-plaintext highlighter-rouge">xelatex</code>. The Chinese font is set to Noto Sans CJK SC. The option <code class="language-plaintext highlighter-rouge">-H</code> is used to specify the LaTeX header file to be included, the content of which is shown below. At the moment, it sets the document background color to solarized yellow and adjusts the page size to be the same as Kindle Paperwhite 3 screen. Meanwhile, the page margin is reduced to 0.5cm and the page number in the footer is disabled.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\definecolor</span><span class="p">{</span>solarized-yellow<span class="p">}{</span>RGB<span class="p">}{</span>246,240,222<span class="p">}</span>
<span class="k">\usepackage</span><span class="na">[pagecolor={solarized-yellow}]</span><span class="p">{</span>pagecolor<span class="p">}</span>
<span class="k">\usepackage</span><span class="na">[papersize={3.6in,4.8in},top=0.5cm, bottom=0.5cm, left=0.5cm, right=0.5cm]</span><span class="p">{</span>geometry<span class="p">}</span>
<span class="k">\pagestyle</span><span class="p">{</span>empty<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Joplin" /><category term="LaTeX" /><category term="Pandoc" /><category term="Kindle" /><summary type="html"><![CDATA[The versatile document converter pandoc will be used for this purpose. It transforms the Markdown file to PDF by first converting it to LaTeX then compiling the LaTeX file into PDF.]]></summary></entry><entry><title type="html">Visiting PDF files in Zotero library from Emacs Org mode</title><link href="https://jihuan-tian.github.io/computer/2022/08/06/visiting-pdf-files-in-zotero-library-from-emacs-org-mode.html" rel="alternate" type="text/html" title="Visiting PDF files in Zotero library from Emacs Org mode" /><published>2022-08-06T00:00:00+08:00</published><updated>2022-08-06T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/08/06/visiting-pdf-files-in-zotero-library-from-emacs-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/08/06/visiting-pdf-files-in-zotero-library-from-emacs-org-mode.html"><![CDATA[<p>For academic writing and note taking in Emacs Org mode, I have been relying on the <code class="language-plaintext highlighter-rouge">org-ref</code> package (which can be installed from Melpa) to insert bibliography citations, visit associated PDF files and take notes. The backend bibliography database is actually a BibTeX file, which is exported from my Zotero library with the help of the <code class="language-plaintext highlighter-rouge">Better BibTex</code> extension. <code class="language-plaintext highlighter-rouge">org-ref</code> also depends on the <code class="language-plaintext highlighter-rouge">bibtex-completion</code> package, which enables me to interact with the bibliography database efficiently.</p>

<p>The following variables need to be configured for <code class="language-plaintext highlighter-rouge">org-ref</code>.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; The root folder, which is the reference for generating relative paths for</span>
<span class="c1">;; those linked PDF files.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">zotero-base-directory-for-linked-pdf</span> <span class="s">"/home/jihuan/文档/Documents/academic/Papers/zotero/"</span><span class="p">)</span>
<span class="c1">;; BibTeX file exported from Zotero.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-bibliography</span> <span class="s">"/home/jihuan/文档/Documents/academic/Papers/zotero/zotero-library.bib"</span><span class="p">)</span>
<span class="c1">;; Folder for storing PDF files, which I set it to the root folder of Zotero</span>
<span class="c1">;; library.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-library-path</span> <span class="s">"/home/jihuan/文档/Documents/academic/Papers/zotero/"</span><span class="p">)</span>
<span class="c1">;; Centralized note file.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-notes-path</span> <span class="s">"/home/jihuan/文档/Documents/academic/Papers/zotero/notes.org"</span><span class="p">)</span>
<span class="c1">;; The name of the BibTeX field in which the path to PDF files is stored or</span>
<span class="c1">;; ‘nil’ if no such field should be used.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-pdf-field</span> <span class="s">"file"</span><span class="p">)</span>

<span class="c1">;; Open pdf with system PDF viewer.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-pdf-open-function</span>
      <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">fpath</span><span class="p">)</span>
        <span class="p">(</span><span class="nv">start-process</span> <span class="s">"xdg-open"</span> <span class="s">"*xdg-open*"</span> <span class="s">"xdg-open"</span> <span class="nv">fpath</span><span class="p">)))</span>
</code></pre></div></div>

<p>For citing a bibliography item from the database, call the command <code class="language-plaintext highlighter-rouge">org-ref-insert-cite-link</code>. If we click on the inserted link, an interactive buffer will be opened, from which we can choose to open the PDF file, BibTeX item or related notes.</p>

<p><img src="/figures/2022-07-24_14-47-44-org-ref-open-citation.png" alt="img" title="Interaction with org-ref in Emacs Org mode" /></p>

<p>Moreover, because some of my PDF files are associated with their bibliography items in the Zotero library as relative links (relative to a root path, which is stored in the variable <code class="language-plaintext highlighter-rouge">zotero-base-library</code>) instead of being imported as copies, the function <code class="language-plaintext highlighter-rouge">bibtex-completion-find-pdf-in-field</code> should be modified as below and evaluated after loading the <code class="language-plaintext highlighter-rouge">bibtex-completion</code> package. Otherwise, the path to any of these <strong>linked</strong> PDF files that is returned from the default version will be merely a single <code class="language-plaintext highlighter-rouge">/</code> character, which is invalid.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">eval-after-load</span> <span class="s">"bibtex-completion"</span>
  <span class="o">'</span><span class="p">(</span><span class="nb">defun</span> <span class="nv">bibtex-completion-find-pdf-in-field</span> <span class="p">(</span><span class="nv">key-or-entry</span><span class="p">)</span>
     <span class="s">"Return the path of the PDF specified in the field `bibtex-completion-pdf-field' if that file exists.
Returns nil if no file is specified, or if the specified file
does not exist, or if `bibtex-completion-pdf-field' is nil."</span>
     <span class="p">(</span><span class="nb">when</span> <span class="nv">bibtex-completion-pdf-field</span>
       <span class="p">(</span><span class="k">let*</span> <span class="p">((</span><span class="nv">entry</span> <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">stringp</span> <span class="nv">key-or-entry</span><span class="p">)</span>
                         <span class="p">(</span><span class="nv">bibtex-completion-get-entry1</span> <span class="nv">key-or-entry</span> <span class="no">t</span><span class="p">)</span>
                       <span class="nv">key-or-entry</span><span class="p">))</span>
              <span class="p">(</span><span class="nv">value</span> <span class="p">(</span><span class="nv">bibtex-completion-get-value</span> <span class="nv">bibtex-completion-pdf-field</span> <span class="nv">entry</span><span class="p">)))</span>
         <span class="p">(</span><span class="nb">cond</span>
          <span class="p">((</span><span class="nb">not</span> <span class="nv">value</span><span class="p">)</span> <span class="no">nil</span><span class="p">)</span>         <span class="c1">; Field not defined.</span>
          <span class="p">((</span><span class="nv">f-file?</span> <span class="nv">value</span><span class="p">)</span> <span class="p">(</span><span class="nb">list</span> <span class="nv">value</span><span class="p">))</span>   <span class="c1">; A bare full path was found.</span>
          <span class="p">((</span><span class="nv">-any</span> <span class="ss">'f-file?</span> <span class="p">(</span><span class="nv">--map</span> <span class="p">(</span><span class="nv">f-join</span> <span class="nv">it</span> <span class="p">(</span><span class="nv">f-filename</span> <span class="nv">value</span><span class="p">))</span> <span class="p">(</span><span class="nv">-flatten</span> <span class="nv">bibtex-completion-library-path</span><span class="p">)))</span> <span class="p">(</span><span class="nv">-filter</span> <span class="ss">'f-file?</span> <span class="p">(</span><span class="nv">--map</span> <span class="p">(</span><span class="nv">f-join</span> <span class="nv">it</span> <span class="p">(</span><span class="nv">f-filename</span> <span class="nv">value</span><span class="p">))</span> <span class="p">(</span><span class="nv">-flatten</span> <span class="nv">bibtex-completion-library-path</span><span class="p">))))</span>
          <span class="p">(</span><span class="no">t</span>                               <span class="c1">; Zotero/Mendeley/JabRef/Calibre format:</span>
           <span class="p">(</span><span class="k">let</span> <span class="p">((</span><span class="nv">value</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"\\([^\\]\\)[;,]"</span> <span class="s">"\\1\^^"</span> <span class="nv">value</span><span class="p">)))</span>
             <span class="p">(</span><span class="nv">cl-loop</span>  <span class="c1">; Looping over the files:</span>
              <span class="nv">for</span> <span class="nv">record</span> <span class="nv">in</span> <span class="p">(</span><span class="nv">s-split</span> <span class="s">"\^^"</span> <span class="nv">value</span><span class="p">)</span>
                                        <span class="c1">; Replace unescaped colons by field separator:</span>
              <span class="nv">for</span> <span class="nv">record</span> <span class="nb">=</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"\\([^\\]\\|^\\):"</span> <span class="s">"\\1\^_"</span> <span class="nv">record</span><span class="p">)</span>
                                        <span class="c1">; Unescape stuff:</span>
              <span class="nv">for</span> <span class="nv">record</span> <span class="nb">=</span> <span class="p">(</span><span class="nv">replace-regexp-in-string</span> <span class="s">"\\\\\\(.\\)"</span> <span class="s">"\\1"</span> <span class="nv">record</span><span class="p">)</span>
                                        <span class="c1">; Now we can safely split:</span>
              <span class="nv">for</span> <span class="nv">record</span> <span class="nb">=</span> <span class="p">(</span><span class="nv">s-split</span> <span class="s">"\^_"</span> <span class="nv">record</span><span class="p">)</span>
              <span class="nv">for</span> <span class="nv">file-name</span> <span class="nb">=</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">0</span> <span class="nv">record</span><span class="p">)</span>
              <span class="nv">for</span> <span class="nv">path</span> <span class="nb">=</span> <span class="p">(</span><span class="nb">or</span> <span class="p">(</span><span class="nb">nth</span> <span class="mi">1</span> <span class="nv">record</span><span class="p">)</span> <span class="s">""</span><span class="p">)</span>
              <span class="nv">for</span> <span class="nv">paths</span> <span class="nb">=</span> <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">s-match</span> <span class="s">"^[A-Z]:"</span> <span class="nv">path</span><span class="p">)</span>
                              <span class="p">(</span><span class="nb">list</span> <span class="nv">path</span><span class="p">)</span>                 <span class="c1">; Absolute Windows path</span>
                                        <span class="c1">; Something else:</span>
                            <span class="p">(</span><span class="nb">append</span>
                             <span class="p">(</span><span class="nb">list</span>
                              <span class="nv">path</span>
                              <span class="nv">file-name</span>
                              <span class="c1">;; (f-join (f-root) path) ; Mendeley #105</span>
                              <span class="c1">;; (f-join (f-root) path file-name) ; Mendeley #105</span>
                              <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nv">string-match-p</span> <span class="s">"^\\.\\./"</span> <span class="nv">file-name</span><span class="p">)</span>
                                  <span class="c1">;; If the ~file-name~ starts with</span>
                                  <span class="c1">;; "../", it is a relative hyperlink to</span>
                                  <span class="c1">;; the attachment, which has been</span>
                                  <span class="c1">;; created in Zotero. The base</span>
                                  <span class="c1">;; directory to which this relative</span>
                                  <span class="c1">;; hyperlink is with respect is stored</span>
                                  <span class="c1">;; in the variable</span>
                                  <span class="c1">;; ~zotero-base-directory-for-linked-pdf~.</span>
				                  <span class="p">(</span><span class="nv">expand-file-name</span> <span class="nv">file-name</span> <span class="nv">zotero-base-directory-for-linked-pdf</span><span class="p">)</span>
                                <span class="p">(</span><span class="nv">f-join</span> <span class="nv">bibtex-completion-library-path</span> <span class="nv">file-name</span><span class="p">)))</span>
                             <span class="p">(</span><span class="nv">--map</span> <span class="p">(</span><span class="nv">f-join</span> <span class="nv">it</span> <span class="nv">path</span><span class="p">)</span>
                                    <span class="p">(</span><span class="nv">-flatten</span> <span class="nv">bibtex-completion-library-path</span><span class="p">))</span> <span class="c1">; Jabref #100</span>
                             <span class="p">(</span><span class="nv">--map</span> <span class="p">(</span><span class="nv">f-join</span> <span class="nv">it</span> <span class="nv">path</span> <span class="nv">file-name</span><span class="p">)</span>
                                    <span class="p">(</span><span class="nv">-flatten</span> <span class="nv">bibtex-completion-library-path</span><span class="p">))))</span> <span class="c1">; Jabref #100</span>
              <span class="nv">for</span> <span class="nv">result</span> <span class="nb">=</span> <span class="p">(</span><span class="nv">-first</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">path</span><span class="p">)</span>
                                     <span class="p">(</span><span class="k">if</span> <span class="p">(</span><span class="nb">and</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">s-blank-str?</span> <span class="nv">path</span><span class="p">))</span>
                                              <span class="p">(</span><span class="nv">f-exists?</span> <span class="nv">path</span><span class="p">))</span>
                                         <span class="nv">path</span> <span class="no">nil</span><span class="p">))</span> <span class="nv">paths</span><span class="p">)</span>
              <span class="k">if</span> <span class="nv">result</span> <span class="nv">collect</span> <span class="nv">result</span><span class="p">))))))))</span>
</code></pre></div></div>

<p>Meanwhile, the variable <code class="language-plaintext highlighter-rouge">bibtex-completion-pdf-open-function</code> should be set as below. By default, it will use <code class="language-plaintext highlighter-rouge">xdg-open</code> to open the PDF file associated with a bibliography item. However, this does not work on my side, so I use <code class="language-plaintext highlighter-rouge">Okular</code> instead.</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">;; Open pdf with Okular. xdg-open does not work here.</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">bibtex-completion-pdf-open-function</span>
  <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">fpath</span><span class="p">)</span>
    <span class="p">(</span><span class="nv">start-process</span> <span class="s">"okular"</span> <span class="s">"*okular*"</span> <span class="s">"okular"</span> <span class="nv">fpath</span><span class="p">)))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="Zotero" /><summary type="html"><![CDATA[For academic writing and note taking in Emacs Org mode, I have been relying on the org-ref package (which can be installed from Melpa) to insert bibliography citations, visit associated PDF files and take notes. The backend bibliography database is actually a BibTeX file, which is exported from my Zotero library with the help of the Better BibTex extension. org-ref also depends on the bibtex-completion package, which enables me to interact with the bibliography database efficiently.]]></summary></entry><entry><title type="html">Redirect program output to log files</title><link href="https://jihuan-tian.github.io/computer/2022/08/03/redirect-program-output-to-log-files.html" rel="alternate" type="text/html" title="Redirect program output to log files" /><published>2022-08-03T00:00:00+08:00</published><updated>2022-08-03T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/08/03/redirect-program-output-to-log-files</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/08/03/redirect-program-output-to-log-files.html"><![CDATA[<p>When we perform batch tests on developed algorithms, it is helpful to save the messages and data printed out by the program to a log file for backup and further analysis, while still keeping them displayed in the console for real time monitoring. This can be achieved via output redirection on Linux.</p>

<p>We know that the standard file descriptors on Linux are:</p>

<ol>
  <li>Standard input: 0</li>
  <li>Standard output: 1</li>
  <li>Standard error: 2</li>
</ol>

<p>If using Octave, we can get them by calling <code class="language-plaintext highlighter-rouge">stdin</code>, <code class="language-plaintext highlighter-rouge">stdout</code> and <code class="language-plaintext highlighter-rouge">stderr</code>. In C++, they are <code class="language-plaintext highlighter-rouge">std::cin</code>, <code class="language-plaintext highlighter-rouge">std::cout</code> and <code class="language-plaintext highlighter-rouge">std::cerr</code> respectively. If we execute an Octave script directly from the console instead of in a session, the following ways can be used.</p>

<ol>
  <li>
    <p>Standard output and standard error directed to a same file without being displayed in the console.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>octave script_name.m &amp;&gt; logfile.log
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">&amp;&gt;</code> means <code class="language-plaintext highlighter-rouge">1&gt;logfile.log 2&gt;logfile.log</code> but with <code class="language-plaintext highlighter-rouge">logfile.log</code> opened only once.</p>
  </li>
  <li>
    <p>Standard output and standard error directed to different files without being displayed in the console.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>octave script_name.m <span class="o">&gt;</span> logfile.log 2&gt; logfile.err
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">&gt; logfile.log</code> is short for <code class="language-plaintext highlighter-rouge">1&gt;logfile.log</code>.</p>
  </li>
  <li>
    <p>If both console message display and log file record are needed, the command <code class="language-plaintext highlighter-rouge">tee</code> should be used.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>octave script_name.m 2&gt;&amp;1 | <span class="nb">tee </span>logfile.log &amp;
</code></pre></div>    </div>

    <p><code class="language-plaintext highlighter-rouge">2&gt;&amp;1</code> redirects the standard error to the standard output.</p>
  </li>
</ol>

<p>Backlinks: <a href="/computer/2023/01/19/perform-numerical-experiments-in-emacs-org-mode.html">《Perform numerical experiments in Emacs Org mode》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Bash" /><category term="command" /><summary type="html"><![CDATA[When we perform batch tests on developed algorithms, it is helpful to save the messages and data printed out by the program to a log file for backup and further analysis, while still keeping them displayed in the console for real time monitoring. This can be achieved via output redirection on Linux.]]></summary></entry><entry><title type="html">Create link to Joplin notes in Emacs Org mode</title><link href="https://jihuan-tian.github.io/computer/2022/07/30/create-link-to-joplin-notes-in-emacs-org-mode.html" rel="alternate" type="text/html" title="Create link to Joplin notes in Emacs Org mode" /><published>2022-07-30T00:00:00+08:00</published><updated>2022-07-30T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/07/30/create-link-to-joplin-notes-in-emacs-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/07/30/create-link-to-joplin-notes-in-emacs-org-mode.html"><![CDATA[<p>The handling of hyperlinks in Emacs Org mode is flexible and versatile. For example, it supports links to files, websites, Usenet and email messages as well as IRC conversations. In addition, we can define our own hyperlink types and determine which operations will be performed when we click or export them.</p>

<p>For example, the external URL link for a Joplin note looks like this, which is not supported by Emacs Org mode.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>joplin://x-callback-url/openNote?id=a700a59f8a054e1aab97c296bf72fe3d
</code></pre></div></div>

<p>To make Org mode able to handle this link, we should add a new link type <code class="language-plaintext highlighter-rouge">joplin</code> by calling the <code class="language-plaintext highlighter-rouge">elisp</code> function <code class="language-plaintext highlighter-rouge">org-link-set-parameters</code>.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">org-link-set-parameters</span>
 <span class="c1">;; Name of the link type for Joplin node external URL link.</span>
 <span class="s">"joplin"</span>
 <span class="c1">;; Define the action when clicking on the link.</span>
 <span class="ss">:follow</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">url</span><span class="p">)</span>
           <span class="c1">;; Open the link with the joplin script.</span>
           <span class="p">(</span><span class="nv">start-process</span> <span class="s">"Joplin Session"</span> <span class="no">nil</span> <span class="s">"joplin"</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"joplin:"</span> <span class="nv">url</span><span class="p">))))</span>
</code></pre></div></div>

<p>In this function, we call the Joplin program using <code class="language-plaintext highlighter-rouge">start-process</code> and pass the full URL to it. The argument <code class="language-plaintext highlighter-rouge">url</code> of the <code class="language-plaintext highlighter-rouge">lambda</code> function associated with the <code class="language-plaintext highlighter-rouge">follow</code> action contains the string after the comma in the original link, i.e. <code class="language-plaintext highlighter-rouge">//x-callback-url/openNote?id=a700a59f8a054e1aab97c296bf72fe3d</code>. Therefore, we use <code class="language-plaintext highlighter-rouge">concat</code> to restore the original link. The second parameter of <code class="language-plaintext highlighter-rouge">start-process</code> is <code class="language-plaintext highlighter-rouge">nil</code>, which prevents Emacs from creating a buffer for the process.</p>

<p>Read more</p>
<ul>
  <li><a href="/computer/2022/06/05/create-hyperlinks-in-org-mode.html">Create hyperlinks in Org mode</a></li>
</ul>

<p>Backlinks: <a href="/computer/2022/07/30/open-hyperlink-to-joplin-note-from-pdf.html">《Open hyperlink to Joplin note from PDF》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="Joplin" /><category term="知识联接" /><summary type="html"><![CDATA[The handling of hyperlinks in Emacs Org mode is flexible and versatile. For example, it supports links to files, websites, Usenet and email messages as well as IRC conversations. In addition, we can define our own hyperlink types and determine which operations will be performed when we click or export them.]]></summary></entry><entry><title type="html">Open hyperlink to Joplin note from PDF</title><link href="https://jihuan-tian.github.io/computer/2022/07/30/open-hyperlink-to-joplin-note-from-pdf.html" rel="alternate" type="text/html" title="Open hyperlink to Joplin note from PDF" /><published>2022-07-30T00:00:00+08:00</published><updated>2022-07-30T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/07/30/open-hyperlink-to-joplin-note-from-pdf</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/07/30/open-hyperlink-to-joplin-note-from-pdf.html"><![CDATA[<p>In <a href="/computer/2022/07/30/create-link-to-joplin-notes-in-emacs-org-mode.html">this note</a>, a link to a Joplin note can be created and opened in Emacs Org mode based on its external URL. However, when the Org document is exported to a LaTeX file, the original link, for example,</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>joplin://x-callback-url/openNote?id=62cef9486b08411ea8c5fcd49d9cd4ea
</code></pre></div></div>

<p>becomes</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\href</span><span class="p">{</span>//x-callback-url/openNote?id=a700a59f8a054e1aab97c296bf72fe3d<span class="p">}{</span>link name<span class="p">}</span>
</code></pre></div></div>

<p>After compiling the LaTeX file into a PDF file, this link will be converted to</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>file://x-callback-url/openNote%3Fid=a700a59f8a054e1aab97c296bf72fe3d.pdf
</code></pre></div></div>

<p>Of course, this is invalid. When clicking it in Okular, the following error message dialog appears.</p>

<p><img src="/figures/2022-07-30_21-25-35-joplin-link-error-in-pdf.png" alt="img" /></p>

<p>According to <a href="http://x-callback-url.com/">here</a>, <code class="language-plaintext highlighter-rouge">x-callback-url</code> is a protocol for iOS developers to expose and document the methods they make available to other apps, which cannot be supported on Linux. Therefore, it is necessary for us to copy out the note id, such as <code class="language-plaintext highlighter-rouge">a700a59f8a054e1aab97c296bf72fe3d</code> as above, then manually start Joplin to open this note. This process can be simplified by the following script, which either gets the command line argument or the content in the <a href="/computer/2022/05/28/clipboards-in-X-Window-System.html">primary clipboard</a> as the note id.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">[</span> <span class="nv">$# </span><span class="o">=</span> <span class="s2">"1"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
  <span class="c"># Use the first argument on the command line as the note id.</span>
  <span class="nv">note_id</span><span class="o">=</span><span class="nv">$1</span>
<span class="k">else</span>
  <span class="c"># Use the clipboard content as the note id.</span>
  <span class="nv">note_id</span><span class="o">=</span><span class="sb">`</span>xclip <span class="nt">-selection</span> primary <span class="nt">-o</span><span class="sb">`</span>
<span class="k">fi

</span>joplin <span class="s2">"joplin://x-callback-url/openNote?id=</span><span class="nv">$note_id</span><span class="s2">"</span>
</code></pre></div></div>

<p>In this way, by simply double clicking on the note id in the error message dialog, then running this script, we can directly jump to the note in Joplin.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Joplin" /><category term="知识联接" /><category term="command" /><summary type="html"><![CDATA[In this note, a link to a Joplin note can be created and opened in Emacs Org mode based on its external URL. However, when the Org document is exported to a LaTeX file, the original link, for example,]]></summary></entry><entry><title type="html">Add new words to Aspell user dictionary</title><link href="https://jihuan-tian.github.io/computer/2022/07/24/add-new-words-to-aspell-user-dictionary.html" rel="alternate" type="text/html" title="Add new words to Aspell user dictionary" /><published>2022-07-24T00:00:00+08:00</published><updated>2022-07-24T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/07/24/add-new-words-to-aspell-user-dictionary</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/07/24/add-new-words-to-aspell-user-dictionary.html"><![CDATA[<p>This script can be used to add a list of words on the command line to the user dictionary of Aspell, e.g. <code class="language-plaintext highlighter-rouge">~/.aspell.en.pws</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for </span>word <span class="k">in</span> <span class="s2">"</span><span class="nv">$@</span><span class="s2">"</span>
<span class="k">do
    </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"*</span><span class="nv">$word</span><span class="se">\n</span><span class="s2">#"</span> | aspell <span class="nt">-a</span>
    <span class="nb">echo</span> <span class="s2">"</span><span class="nv">$word</span><span class="s2"> is added!"</span>
<span class="k">done</span> 
</code></pre></div></div>

<p>The option <code class="language-plaintext highlighter-rouge">-a</code> lets <code class="language-plaintext highlighter-rouge">aspell</code> enter a <a href="http://aspell.net/man-html/Through-A-Pipe.html">pipe mode</a>, which supports the following commands. In our script, combining the commands <code class="language-plaintext highlighter-rouge">*word</code> and <code class="language-plaintext highlighter-rouge">#</code>, the output of <code class="language-plaintext highlighter-rouge">echo</code> is redirected to the standard input of <code class="language-plaintext highlighter-rouge">aspell</code>.</p>

<table>
  <tbody>
    <tr>
      <td>*word</td>
      <td>Add a word to the personal dictionary</td>
    </tr>
    <tr>
      <td>&amp;word</td>
      <td>Insert the all-lowercase version of the word in the personal dictionary</td>
    </tr>
    <tr>
      <td>@word</td>
      <td>Accept the word, but leave it out of the dictionary</td>
    </tr>
    <tr>
      <td>#</td>
      <td>Save the current personal dictionary</td>
    </tr>
    <tr>
      <td>~</td>
      <td>Ignored for Ispell compatibility.</td>
    </tr>
    <tr>
      <td>+</td>
      <td>Enter TeX mode.</td>
    </tr>
    <tr>
      <td>+mode</td>
      <td>Enter the mode specified by mode.</td>
    </tr>
    <tr>
      <td>-</td>
      <td>Enter the default mode.</td>
    </tr>
    <tr>
      <td>!</td>
      <td>Enter terse mode</td>
    </tr>
    <tr>
      <td>%</td>
      <td>Exit terse mode</td>
    </tr>
    <tr>
      <td>^</td>
      <td>Spell-check the rest of the line</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Aspell" /><category term="command" /><category term="Bash" /><summary type="html"><![CDATA[This script can be used to add a list of words on the command line to the user dictionary of Aspell, e.g. ~/.aspell.en.pws.]]></summary></entry><entry><title type="html">Disable alternate colors in KDE Plasma</title><link href="https://jihuan-tian.github.io/computer/2022/07/23/disable-alternate-colors-in-kde-plasma.html" rel="alternate" type="text/html" title="Disable alternate colors in KDE Plasma" /><published>2022-07-23T00:00:00+08:00</published><updated>2022-07-23T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/07/23/disable-alternate-colors-in-kde-plasma</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/07/23/disable-alternate-colors-in-kde-plasma.html"><![CDATA[<p>I’ve been using the <a href="https://store.kde.org/p/1527166/">Solarized Deviant</a> color scheme in KDE Plasma, which looks mild and comfortable. It also applies alternate colors to the file list in Dolphin and the table of contents in the navigation panel of Okular. However, this destroys the consistency and uniformity of the aesthetic.</p>

<p><img src="/figures/2022-07-23_09-49-48-alternate-color-in-dolphin.png" alt="img" title="Alternate colors in Dolphin" /></p>

<p>The said alternate color effect can be disabled by going to the system configuration <code class="language-plaintext highlighter-rouge">Appearance</code> → <code class="language-plaintext highlighter-rouge">Colors</code> then editing the color scheme. In the <code class="language-plaintext highlighter-rouge">Colors</code> tab of the opened dialog, select <code class="language-plaintext highlighter-rouge">View</code> from the <code class="language-plaintext highlighter-rouge">Color set</code> list, then make the <code class="language-plaintext highlighter-rouge">Alternate Background</code> same as the <code class="language-plaintext highlighter-rouge">Normal Background</code>.</p>

<p><img src="/figures/2022-07-23_09-45-19-same-alternate-background.png" alt="img" title="Change the alternate background color" /></p>

<p>In the <code class="language-plaintext highlighter-rouge">Options</code> tab, disable <code class="language-plaintext highlighter-rouge">Apply effects to inactive windows</code>.</p>

<p><img src="/figures/2022-07-23_09-43-27-color-scheme-disable-inactive-window-effects.png" alt="img" title="Disable effects of the inactive windows" /></p>

<p>Finally, the visual effect of Dolphin becomes fresher than before.</p>

<p><img src="/figures/2022-07-23_09-49-48-uniform-color-in-dolphin.png" alt="img" title="Uniform color in Dolphin" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="KDE" /><summary type="html"><![CDATA[I’ve been using the Solarized Deviant color scheme in KDE Plasma, which looks mild and comfortable. It also applies alternate colors to the file list in Dolphin and the table of contents in the navigation panel of Okular. However, this destroys the consistency and uniformity of the aesthetic.]]></summary></entry><entry><title type="html">Synchronize user dictionaries across different software applications</title><link href="https://jihuan-tian.github.io/computer/2022/07/21/synchronize-user-dictionaries-across-different-software-applications.html" rel="alternate" type="text/html" title="Synchronize user dictionaries across different software applications" /><published>2022-07-21T00:00:00+08:00</published><updated>2022-07-21T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/07/21/synchronize-user-dictionaries-across-different-software-applications</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/07/21/synchronize-user-dictionaries-across-different-software-applications.html"><![CDATA[<h1 class="no_toc" id="table-of-contents">Table of contents</h1>

<ul id="markdown-toc">
  <li><a href="#synchronize-to-joplin" id="markdown-toc-synchronize-to-joplin">Synchronize to Joplin</a></li>
  <li><a href="#synchronize-to-libreoffice" id="markdown-toc-synchronize-to-libreoffice">Synchronize to LibreOffice</a></li>
  <li><a href="#synchronize-to-eclipse" id="markdown-toc-synchronize-to-eclipse">Synchronize to Eclipse</a></li>
  <li><a href="#synchronize-to-freeplane" id="markdown-toc-synchronize-to-freeplane">Synchronize to Freeplane</a></li>
  <li><a href="#synchronize-to-firefox-and-thunderbird" id="markdown-toc-synchronize-to-firefox-and-thunderbird">Synchronize to Firefox and Thunderbird</a></li>
  <li><a href="#synchronize-to-kde-applications" id="markdown-toc-synchronize-to-kde-applications">Synchronize to KDE applications</a></li>
  <li><a href="#summary" id="markdown-toc-summary">Summary</a></li>
</ul>

<p>My toolchain for programming and document writing includes Emacs, Eclipse, LibreOffice, Joplin and Freeplane. For web page browsing and email, I use Firefox and Thunderbird. All of them provide a spell check function. As time goes on, I’ve added more and more rare words and terminology to them independently. To make the spell checking behavior consistent and remove the redundancy of adding a same word to all the applications, it is necessary to synchronize their user dictionaries. Since most of the time I work within Emacs, whose spell checker is <code class="language-plaintext highlighter-rouge">aspell</code>, I intend to copy all the words accumulated in <code class="language-plaintext highlighter-rouge">~/.aspell.en.pws</code> to the other applications.</p>

<h1 id="synchronize-to-joplin">Synchronize to Joplin</h1>

<p>The following script generates the Joplin customized dictionary by converting from the <code class="language-plaintext highlighter-rouge">aspell</code> dictionary.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">word_list</span><span class="o">=</span><span class="sb">`</span>gawk <span class="s1">'{if (NR &gt; 1) print;}'</span> ~/.aspell.en.pws<span class="sb">`</span>
<span class="nv">dict_checksum</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="nv">$word_list</span><span class="s2">"</span> | <span class="nb">md5sum</span> | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s2">"-"</span> <span class="nt">-f</span> 1 | <span class="nb">tr</span> <span class="nt">-d</span> <span class="o">[</span>:space:]<span class="sb">`</span>
<span class="nb">echo</span> <span class="nt">-e</span> <span class="nt">-n</span> <span class="s2">"</span><span class="k">${</span><span class="nv">word_list</span><span class="k">}</span><span class="se">\n</span><span class="s2">checksum_v1 = </span><span class="nv">$dict_checksum</span><span class="s2">"</span> <span class="o">&gt;</span> ~/.config/Joplin/Custom<span class="se">\ </span>Dictionary.txt
</code></pre></div></div>

<p>The procedure is described as this.</p>

<ol>
  <li>Use <code class="language-plaintext highlighter-rouge">Gawk</code> to remove the header line <code class="language-plaintext highlighter-rouge">personal_ws-1.1 en num</code> in <code class="language-plaintext highlighter-rouge">~/.aspell.en.pws</code>. The remaining contents in the file are the list of words, one item per line.</li>
  <li>Calculate the MD5 checksum of the word list. Note that the variable <code class="language-plaintext highlighter-rouge">$word_list</code> should be wrapped within double quotes. Otherwise, it will be separated into a list of values by whitespace according to the interior field separator <code class="language-plaintext highlighter-rouge">IFS</code>. Another thing to be mentioned is that there should be no newline character at the end of the word list. Otherwise, the checksum will be considered incorrect by Joplin.</li>
  <li>Write out the list of words along with the checksum value to Joplin’s custom dictionary file. N.B. The option <code class="language-plaintext highlighter-rouge">-n</code> of <code class="language-plaintext highlighter-rouge">echo</code> should be used, which prevents <code class="language-plaintext highlighter-rouge">echo</code> from adding a trailing newline character at the end of file, which is not accepted by Joplin.</li>
</ol>

<h1 id="synchronize-to-libreoffice">Synchronize to LibreOffice</h1>

<p>The following script generates the dictionary used by LibreOffice.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"OOoUserDict1</span><span class="se">\n</span><span class="s2">lang: &lt;none&gt;</span><span class="se">\n</span><span class="s2">type: positive</span><span class="se">\n</span><span class="s2">---"</span> <span class="o">&gt;</span> ~/.config/libreoffice/4/user/wordbook/aspell.dic
gawk <span class="s1">'{if (NR &gt; 1) print;}'</span> ~/.aspell.en.pws <span class="o">&gt;&gt;</span> ~/.config/libreoffice/4/user/wordbook/aspell.dic
</code></pre></div></div>

<p>The script first generates the header in the dictionary file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>OOoUserDict1
lang: &lt;none&gt;
type: positive
---
</code></pre></div></div>

<p>Then it simply appends the word list from <code class="language-plaintext highlighter-rouge">aspell</code>. After that, in the configuration <code class="language-plaintext highlighter-rouge">Language Settings</code> → <code class="language-plaintext highlighter-rouge">Writing Aids</code>, <code class="language-plaintext highlighter-rouge">aspell</code> will appear in <code class="language-plaintext highlighter-rouge">User-defined dictionaries</code>, enable it.</p>

<p><img src="/figures/2022-07-21_16-57-46-user-dict-in-libreoffice.png" alt="" title="Enable aspell dictionary in LibreOffice" /></p>

<h1 id="synchronize-to-eclipse">Synchronize to Eclipse</h1>

<p>In the configuration <code class="language-plaintext highlighter-rouge">General</code> → <code class="language-plaintext highlighter-rouge">Editors</code> → <code class="language-plaintext highlighter-rouge">Text Editors</code> → <code class="language-plaintext highlighter-rouge">Spelling</code>, we can select the file for user defined dictionary.</p>

<p><img src="/figures/2022-07-21_16-58-24-user-dict-in-eclipse.png" alt="" title="User dictionary configuration in Eclipse" /></p>

<p>In my case, I use <code class="language-plaintext highlighter-rouge">~/.eclipse.dict</code>. Then simply copy all <code class="language-plaintext highlighter-rouge">aspell</code> word list to into it.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gawk <span class="s1">'{if (NR &gt; 1) print;}'</span> ~/.aspell.en.pws <span class="o">&gt;</span> ~/.eclipse.dict
</code></pre></div></div>

<h1 id="synchronize-to-freeplane">Synchronize to Freeplane</h1>

<p>The method is the same as Eclipse with the dictionary file being <code class="language-plaintext highlighter-rouge">~/.config/freeplane/1.9.x/UserDictionary_en.txt</code>.</p>

<h1 id="synchronize-to-firefox-and-thunderbird">Synchronize to Firefox and Thunderbird</h1>

<p>The method is the same as Eclipse with the dictionary file being <code class="language-plaintext highlighter-rouge">persdict.dat</code> in the default profile folder of Firefox or Thunderbird. Its absolute path can be obtained by visiting <code class="language-plaintext highlighter-rouge">about:profiles</code> in Firefox or Thunderbird.</p>

<h1 id="synchronize-to-kde-applications">Synchronize to KDE applications</h1>

<p>KDE applications like Kate, Okular, etc. rely on the plugin <code class="language-plaintext highlighter-rouge">Sonnet</code> for spell checking, which uses <code class="language-plaintext highlighter-rouge">aspell</code> as its backend. Therefore, spell checking in KDE applications is consistent with that in Emacs and there is nothing more to do.</p>

<h1 id="summary">Summary</h1>

<p>The above user dictionary synchronizations coalesce into a definitive solution for a consistent and uniform spell checking in KDE Plasma on Linux.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Bash" /><category term="Aspell" /><category term="command" /><summary type="html"><![CDATA[Table of contents]]></summary></entry><entry><title type="html">Solve the problem of 100% CPU usage and system freeze from Firefox</title><link href="https://jihuan-tian.github.io/computer/2022/06/22/solve-the-problem-of-100-cpu-usage-and-system-freeze-from-firefox.html" rel="alternate" type="text/html" title="Solve the problem of 100% CPU usage and system freeze from Firefox" /><published>2022-06-22T00:00:00+08:00</published><updated>2022-06-22T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/22/solve-the-problem-of-100-cpu-usage-and-system-freeze-from-firefox</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/22/solve-the-problem-of-100-cpu-usage-and-system-freeze-from-firefox.html"><![CDATA[<p>I’ve been suffering from the notorious problem of 100% CPU usage and adventitious window freeze or even the whole system collapse from Mozilla Firefox for a long time. The detailed phenomenon is that a process named “Web Content” fully occupies the CPU and there are also error messages in the console as below.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nouveau: kernel rejected pushbuf: Invalid argument
nouveau: ch18: krec 0 pushes 1 bufs 10 relocs 0
nouveau: ch18: buf 00000000 00000015 00000002 00000002 00000000
nouveau: ch18: buf 00000001 00000007 00000002 00000002 00000000
nouveau: ch18: buf 00000002 0000000a 00000002 00000002 00000000
nouveau: ch18: buf 00000003 0000000b 00000002 00000002 00000000
nouveau: ch18: buf 00000004 00000008 00000002 00000002 00000000
nouveau: ch18: buf 00000005 00000006 00000004 00000000 00000004
nouveau: ch18: buf 00000006 0000001e 00000002 00000000 00000002
nouveau: ch18: buf 00000007 00000020 00000002 00000000 00000002
nouveau: ch18: buf 00000008 00000024 00000002 00000000 00000002
nouveau: ch18: buf 00000009 00000030 00000002 00000000 00000002
nouveau: ch18: psh 00000032 000007715c 0000077d68
</code></pre></div></div>

<p>Initially, I thought this might be caused by Firefox’s own multi-threading mechanism. So I tried to limit the number of processes used by Firefox, but it did not work.</p>

<p><img src="/figures/2022-06-22_09-13-29-limit-firefox-processes.png" alt="" title="Limit the number of processes used by Firefox" /></p>

<p>Another guess on the cause of the problem might be related to the open source display driver <code class="language-plaintext highlighter-rouge">nouveau</code>. After some search, I came to this <a href="https://bugs.webkit.org/show_bug.cgi?id=200437">bug report</a>, which suggests to set the environment variable <code class="language-plaintext highlighter-rouge">WEBKIT_DISABLE_COMPOSITING_MODE=1</code>. According to the <a href="https://trac.webkit.org/wiki/EnvironmentVariables">documentation of WebKit</a>, this option forces the accelerated compositing mode adopted by <code class="language-plaintext highlighter-rouge">WebKitGTK</code> to be always off. And this just solves my problem.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Firefox" /><summary type="html"><![CDATA[I’ve been suffering from the notorious problem of 100% CPU usage and adventitious window freeze or even the whole system collapse from Mozilla Firefox for a long time. The detailed phenomenon is that a process named “Web Content” fully occupies the CPU and there are also error messages in the console as below.]]></summary></entry><entry><title type="html">Enable the title bar of GTK+ 3 window in KDE Plasma</title><link href="https://jihuan-tian.github.io/computer/2022/06/21/enable-the-title-bar-of-gtk3-window-in-kde-plasma.html" rel="alternate" type="text/html" title="Enable the title bar of GTK+ 3 window in KDE Plasma" /><published>2022-06-21T00:00:00+08:00</published><updated>2022-06-21T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/21/enable-the-title-bar-of-gtk3-window-in-kde-plasma</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/21/enable-the-title-bar-of-gtk3-window-in-kde-plasma.html"><![CDATA[<p>GTK+ 3 applications such as <code class="language-plaintext highlighter-rouge">nautilus</code>, <code class="language-plaintext highlighter-rouge">evince</code>, <code class="language-plaintext highlighter-rouge">gthumb</code>, <code class="language-plaintext highlighter-rouge">midori</code>, etc. do not have title bar displayed in KDE Plasma. According to GitHub project <a href="https://github.com/PCMan/gtk3-nocsd">gtk3-nocsd</a>, this is caused by the header bar and client-side decoration introduced by GTK+ 3.10 and further versions.</p>

<blockquote>
  <p>Since Gtk+ 3.10, its developers added a so-called header bar or custom title bar. With this and the client-side decoration, the original title bar and window border provided by the window manager are disabled by Gtk+. This makes all Gtk+ 3 programs look alike. Even worse, this may break some window manager or compositors.</p>

  <p>Unfortunately, the Gtk+ developers decided to be against the existing standards and provide “no option” to turn it off.</p>
</blockquote>

<p>It is cumbersome to add a customized window rule for each GTK+ 3 application. The definitive solution is to install the Debian package <code class="language-plaintext highlighter-rouge">gtk3-nocsd</code>.</p>

<p><img src="/figures/2022-06-21_10-05-33-midori-without-title-bar.png" alt="img" title="Midori without title bar" /></p>

<p><img src="/figures/2022-06-21_10-07-03-midori-with-title-bar.png" alt="img" title="Midori with title bar after installation of gtk3-nocsd" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="KDE" /><summary type="html"><![CDATA[GTK+ 3 applications such as nautilus, evince, gthumb, midori, etc. do not have title bar displayed in KDE Plasma. According to GitHub project gtk3-nocsd, this is caused by the header bar and client-side decoration introduced by GTK+ 3.10 and further versions.]]></summary></entry><entry><title type="html">Input Unicode characters on Linux using Fcitx</title><link href="https://jihuan-tian.github.io/computer/2022/06/10/input-unicode-characters-on-linux-using-fcitx.html" rel="alternate" type="text/html" title="Input Unicode characters on Linux using Fcitx" /><published>2022-06-10T00:00:00+08:00</published><updated>2022-06-10T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/10/input-unicode-characters-on-linux-using-fcitx</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/10/input-unicode-characters-on-linux-using-fcitx.html"><![CDATA[<p>With the Unicode plugin in Fcitx, Unicode characters can be efficiently typed out on Linux via a fuzzy search. Just press <code class="language-plaintext highlighter-rouge">Ctrl+Alt+Shift+u</code>, type a descriptive string for the character, look for the desired one through pages and finally select the target using <code class="language-plaintext highlighter-rouge">Alt+num</code>.</p>

<p><img src="/figures/2022-07-23_10-14-11-fcitx-input-unicode.png" alt="img" title="Search Unicode characters in Fcitx" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Fcitx" /><summary type="html"><![CDATA[With the Unicode plugin in Fcitx, Unicode characters can be efficiently typed out on Linux via a fuzzy search. Just press Ctrl+Alt+Shift+u, type a descriptive string for the character, look for the desired one through pages and finally select the target using Alt+num.]]></summary></entry><entry><title type="html">Export source code block in Org mode to LaTeX</title><link href="https://jihuan-tian.github.io/computer/2022/06/09/export-source-code-block-in-org-mode-to-latex.html" rel="alternate" type="text/html" title="Export source code block in Org mode to LaTeX" /><published>2022-06-09T00:00:00+08:00</published><updated>2022-06-09T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/09/export-source-code-block-in-org-mode-to-latex</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/09/export-source-code-block-in-org-mode-to-latex.html"><![CDATA[<p>When a source code block in the Org mode is exported as the HTML format, it can be typeset with syntax highlighting (By the way, for the Markdown format, this is supported by default by either a full-fledged Markdown editor or a static blog publishing system). If a line in the code contains many characters which exceeds the screen width, a horizontal scroll bar will appear for the <code class="language-plaintext highlighter-rouge">&lt;pre&gt;</code> node. However, when the source code block is exported to a LaTeX document, there is no support for syntax highlighting or word wrap by default, which makes the code uneasy to read. This problem can be solved by resorting to the <code class="language-plaintext highlighter-rouge">ox-latex</code> package for Emacs, which hands over the task of source code typesetting to the LaTeX package <code class="language-plaintext highlighter-rouge">listings</code>.</p>

<p>To enable the <code class="language-plaintext highlighter-rouge">ox-latex</code> package in Emacs, add the following code to <code class="language-plaintext highlighter-rouge">~/.emacs</code>.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">require</span> <span class="ss">'ox-latex</span><span class="p">)</span>
<span class="p">(</span><span class="k">setq</span> <span class="nv">org-latex-listings</span> <span class="no">t</span><span class="p">)</span>
</code></pre></div></div>

<p>The configuration for <code class="language-plaintext highlighter-rouge">listings</code> can be set in the variable <code class="language-plaintext highlighter-rouge">org-latex-listings-options</code>. Here is the setting that is transcribed from the LaTeX template for my notes.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">org-latex-listings-options</span>
      <span class="o">'</span><span class="p">((</span><span class="s">"basicstyle"</span> <span class="s">"\\ttfamily"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"keywordstyle"</span> <span class="s">"\\color{blue}\\bfseries"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"commentstyle"</span> <span class="s">"\\color{comment-green}"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"stringstyle"</span> <span class="s">"\\color{magenta}"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"columns"</span> <span class="s">"fullflexible"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"frame"</span> <span class="s">"single"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"breaklines"</span> <span class="s">"true"</span><span class="p">)</span>
        <span class="p">(</span><span class="s">"postbreak"</span> <span class="s">"\\mbox{\\textcolor{red}{$\\hookrightarrow$}\\space}"</span><span class="p">)))</span>
</code></pre></div></div>

<p>If we do not want to configure the <code class="language-plaintext highlighter-rouge">listings</code> package in Emacs but in the LaTeX template, so that it can also be used when we directly write <code class="language-plaintext highlighter-rouge">tex</code> files, we can use the <code class="language-plaintext highlighter-rouge">\lstset</code> macro with a bunch of options. I prefer this method over the previous one.</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\lstset</span><span class="p">{</span>
  basicstyle=<span class="k">\ttfamily</span>,
  keywordstyle=<span class="k">\color</span><span class="p">{</span>blue<span class="p">}</span><span class="k">\bfseries</span>,
  commentstyle=<span class="k">\color</span><span class="p">{</span>comment-green<span class="p">}</span>,
  stringstyle=<span class="k">\color</span><span class="p">{</span>magenta<span class="p">}</span>,
  columns=fullflexible,
  frame=single,
  breaklines=true,
  postbreak=<span class="k">\mbox</span><span class="p">{</span><span class="k">\textcolor</span><span class="p">{</span>red<span class="p">}{$</span><span class="nv">\hookrightarrow</span><span class="p">$}</span><span class="k">\space</span><span class="p">}</span>,
<span class="p">}</span>
</code></pre></div></div>

<p>A snapshot of the source code exported to LaTeX is shown below, from which we can see the C++ keywords are highlighted and word wrap is enabled for long lines and properly signified with the <code class="language-plaintext highlighter-rouge">\hookrightarrow</code> symbol.</p>

<p align="center"><img src="/figures/2022-06-08-source-code-typeset-by-listings.png" alt="Source code typeset by listings package" /></p>
<p align="center">Source code typeset by listings package</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="LaTeX" /><summary type="html"><![CDATA[When a source code block in the Org mode is exported as the HTML format, it can be typeset with syntax highlighting (By the way, for the Markdown format, this is supported by default by either a full-fledged Markdown editor or a static blog publishing system). If a line in the code contains many characters which exceeds the screen width, a horizontal scroll bar will appear for the &lt;pre&gt; node. However, when the source code block is exported to a LaTeX document, there is no support for syntax highlighting or word wrap by default, which makes the code uneasy to read. This problem can be solved by resorting to the ox-latex package for Emacs, which hands over the task of source code typesetting to the LaTeX package listings.]]></summary></entry><entry><title type="html">Set default web browser for opening links on Linux</title><link href="https://jihuan-tian.github.io/computer/2022/06/07/set-default-web-browser-for-opening-links-on-linux.html" rel="alternate" type="text/html" title="Set default web browser for opening links on Linux" /><published>2022-06-07T00:00:00+08:00</published><updated>2022-06-07T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/07/set-default-web-browser-for-opening-links-on-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/07/set-default-web-browser-for-opening-links-on-linux.html"><![CDATA[<p>Days ago, I downloaded and installed Firefox of the newest version. I also set it as the default application for opening HTML documents and URL links. After I uninstalled it and restored the default version shipped with Debian Buster, even though I updated the configuration for default web browser, when I opened a URL link from within a PDF document, it still tries to run the old Firefox.</p>

<p>In <code class="language-plaintext highlighter-rouge">System Settings</code> → <code class="language-plaintext highlighter-rouge">Personalization</code> → <code class="language-plaintext highlighter-rouge">Applications</code> → <code class="language-plaintext highlighter-rouge">Default Applications</code> → <code class="language-plaintext highlighter-rouge">Web Browser</code>, check the <code class="language-plaintext highlighter-rouge">in the following application</code> then switch back to the default <code class="language-plaintext highlighter-rouge">in an application based on the contents of the URL</code>. The above problem is solved.</p>

<p><img src="/figures/2022-06-07_11-57-34-reset-default-browser-in-system-setting.png" alt="img" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><summary type="html"><![CDATA[Days ago, I downloaded and installed Firefox of the newest version. I also set it as the default application for opening HTML documents and URL links. After I uninstalled it and restored the default version shipped with Debian Buster, even though I updated the configuration for default web browser, when I opened a URL link from within a PDF document, it still tries to run the old Firefox.]]></summary></entry><entry><title type="html">Create hyperlinks in Org mode</title><link href="https://jihuan-tian.github.io/computer/2022/06/05/create-hyperlinks-in-org-mode.html" rel="alternate" type="text/html" title="Create hyperlinks in Org mode" /><published>2022-06-05T00:00:00+08:00</published><updated>2022-06-05T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/05/create-hyperlinks-in-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/05/create-hyperlinks-in-org-mode.html"><![CDATA[<h1 class="no_toc" id="table-of-contents">Table of contents</h1>

<ul id="markdown-toc">
  <li><a href="#insert-a-link-to-a-local-file" id="markdown-toc-insert-a-link-to-a-local-file">Insert a link to a local file</a></li>
  <li><a href="#insert-a-link-to-a-directory" id="markdown-toc-insert-a-link-to-a-directory">Insert a link to a directory</a></li>
  <li><a href="#insert-a-link-to-a-specific-position-in-a-local-pdf-file" id="markdown-toc-insert-a-link-to-a-specific-position-in-a-local-pdf-file">Insert a link to a specific position in a local PDF file</a></li>
  <li><a href="#insert-a-link-to-a-specific-page-in-a-local-pdf-file" id="markdown-toc-insert-a-link-to-a-specific-page-in-a-local-pdf-file">Insert a link to a specific page in a local PDF file</a></li>
  <li><a href="#insert-a-link-to-a-specific-position-in-a-local-libreoffice-file" id="markdown-toc-insert-a-link-to-a-specific-position-in-a-local-libreoffice-file">Insert a link to a specific position in a local LibreOffice file</a></li>
  <li><a href="#insert-a-link-to-other-heading-in-the-current-org-file" id="markdown-toc-insert-a-link-to-other-heading-in-the-current-org-file">Insert a link to other heading in the current Org file</a></li>
  <li><a href="#insert-a-link-to-other-heading-in-a-different-org-file" id="markdown-toc-insert-a-link-to-other-heading-in-a-different-org-file">Insert a link to other heading in a different Org file</a></li>
  <li><a href="#insert-a-link-to-an-info-node-and-help-document" id="markdown-toc-insert-a-link-to-an-info-node-and-help-document">Insert a link to an Info node and help document</a></li>
  <li><a href="#insert-a-link-to-a-joplin-note" id="markdown-toc-insert-a-link-to-a-joplin-note">Insert a link to a Joplin note</a></li>
  <li><a href="#other-issues" id="markdown-toc-other-issues">Other issues</a>    <ul>
      <li><a href="#cannot-open-a-hyperlink-to-a-local-folder" id="markdown-toc-cannot-open-a-hyperlink-to-a-local-folder">Cannot open a hyperlink to a local folder</a></li>
    </ul>
  </li>
</ul>

<p>This article summarizes several ways that I often use for insertion of hyperlinks in Emacs Org mode. They are very helpful for us to maintain inter-connected notes and documents.</p>

<h1 id="insert-a-link-to-a-local-file">Insert a link to a local file</h1>

<p>Press the hotkey <code class="language-plaintext highlighter-rouge">C-u C-c C-l</code> to insert a link to a file on your local computer. By setting the variable <code class="language-plaintext highlighter-rouge">org-link-file-path-type</code>’s value as <code class="language-plaintext highlighter-rouge">relative</code>, the link is relative to the current directory. This is useful to make it effective, when the whole directory tree containing the file is migrated or synchronized to other mount points or devices.</p>

<p>Because I often use the <code class="language-plaintext highlighter-rouge">Helm</code> package for an interactive prompt of a file name or folder path, all the history files once selected via <code class="language-plaintext highlighter-rouge">Helm</code> can be quickly revisited. After pressing <code class="language-plaintext highlighter-rouge">C-u C-c C-l</code>, a further <code class="language-plaintext highlighter-rouge">C-c h</code> will trigger the <code class="language-plaintext highlighter-rouge">Helm</code> history. By navigating in the list of file names, we then come to the interested item. If it is to be used directly as the link target, press <code class="language-plaintext highlighter-rouge">F1</code>. If its name or path is to be modified before using, press <code class="language-plaintext highlighter-rouge">F2</code>. When the modification is finished, press <code class="language-plaintext highlighter-rouge">F1</code> to insert the final link.</p>

<h1 id="insert-a-link-to-a-directory">Insert a link to a directory</h1>

<p>When the target local file is a folder not an ordinary file, even though the link created for it as above can be opened in Emacs <code class="language-plaintext highlighter-rouge">Dired</code> by pressing <code class="language-plaintext highlighter-rouge">C-c C-o</code>, it cannot be opened correctly in the PDF document that is compiled from the exported LaTeX file. This is because the link will be appended with a <code class="language-plaintext highlighter-rouge">.pdf</code> extension by the <code class="language-plaintext highlighter-rouge">Hyperref</code> LaTeX package. To solve problem, manually replace the link’s identifying string <code class="language-plaintext highlighter-rouge">file</code> with <code class="language-plaintext highlighter-rouge">run</code> at the beginning of the link address.</p>

<p><span class="timestamp-wrapper"><span class="timestamp">&lt;2022-07-15 Fri&gt; </span></span> However, when we export the Org contents into LaTeX using this method, there will be an error like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>user-error: Unable to resolve link: "run:path-to-the-directory/"
</code></pre></div></div>

<p>According to <a href="https://tex.stackexchange.com/a/558242/84490">StackExchange</a>, a definitive method is to keep the <code class="language-plaintext highlighter-rouge">file</code> prefix intact and append a dot to the link address. This will prevent <code class="language-plaintext highlighter-rouge">Hyperref</code> from <em>presumptuously</em> adding the <code class="language-plaintext highlighter-rouge">.pdf</code> extension.</p>

<h1 id="insert-a-link-to-a-specific-position-in-a-local-pdf-file">Insert a link to a specific position in a local PDF file</h1>

<p>When the local file is a PDF document compiled from LaTeX, a link can be created with pinpoint accuracy to any LaTeX labels and <code class="language-plaintext highlighter-rouge">hypertargets</code>. Here a <code class="language-plaintext highlighter-rouge">hypertarget</code> is a macro in <code class="language-plaintext highlighter-rouge">Hyperref</code>, which can be used to create a named anchor like that in an HTML file. For example,</p>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\hypertarget</span><span class="p">{</span>anchor-name<span class="p">}{</span>text<span class="p">}</span>
</code></pre></div></div>

<p>Then insert the link to the local file as usual in Org mode and append it with <code class="language-plaintext highlighter-rouge">#anchor-name</code>.</p>

<p>To check existing named anchors or rather named destinations stored in the PDF file, use the <code class="language-plaintext highlighter-rouge">pdfinfo</code> command with the <code class="language-plaintext highlighter-rouge">-dests</code> option.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-dests Print a list of all named destinations. If a pagerange is specified using "-f" and
"-l", only destinations in the page range are listed.
</code></pre></div></div>

<h1 id="insert-a-link-to-a-specific-page-in-a-local-pdf-file">Insert a link to a specific page in a local PDF file</h1>

<p>Add a new item <code class="language-plaintext highlighter-rouge">("\\.pdf::\\([0-9]+\\)\\'" . "okular -p %1 %s")</code> to the alist variable <code class="language-plaintext highlighter-rouge">org-file-apps</code>. Then, when a hyperlink to a PDF file is appended with <code class="language-plaintext highlighter-rouge">::&lt;page-no&gt;</code>, the PDF file will be opened by Okular and directly jumps to the specified page.</p>

<h1 id="insert-a-link-to-a-specific-position-in-a-local-libreoffice-file">Insert a link to a specific position in a local LibreOffice file</h1>

<p>When the local file is a LibreOffice document, the method is same. Just open the navigation panel, from which any items in <code class="language-plaintext highlighter-rouge">Headings</code>, <code class="language-plaintext highlighter-rouge">Bookmarks</code> and <code class="language-plaintext highlighter-rouge">Hyperlinks</code> groups can be link to. The anchor names are their displayed names.</p>

<h1 id="insert-a-link-to-other-heading-in-the-current-org-file">Insert a link to other heading in the current Org file</h1>

<p>Execute the command <code class="language-plaintext highlighter-rouge">helm-org-in-buffer-headings</code> (this depends on the MELPA package <code class="language-plaintext highlighter-rouge">helm-org</code>), which corresponds to the menu item <code class="language-plaintext highlighter-rouge">&lt;tools&gt; &lt;Helm&gt; &lt;Org&gt; &lt;Org headlines in buffer&gt;</code>. Then input the heading text pattern or navigate through the list. Finally, press <code class="language-plaintext highlighter-rouge">F4</code> to insert the link. At present, I bind this function locally with the shortcut key <code class="language-plaintext highlighter-rouge">F7</code>.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">define-key</span> <span class="nv">org-mode-map</span> <span class="nv">[</span><span class="p">(</span><span class="nv">f7</span><span class="p">)</span><span class="nv">]</span> <span class="ss">'helm-org-in-buffer-headings</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="insert-a-link-to-other-heading-in-a-different-org-file">Insert a link to other heading in a different Org file</h1>

<p>There are two cases here. When the target Org file has been registered in the Org file list <code class="language-plaintext highlighter-rouge">org-agenda-files</code>, execute the command <code class="language-plaintext highlighter-rouge">helm-org-agenda-files-headings</code> (this depends on the MELPA package <code class="language-plaintext highlighter-rouge">helm-org</code>), which corresponds to the menu item <code class="language-plaintext highlighter-rouge">&lt;tools&gt; &lt;Helm&gt; &lt;Org&gt; &lt;Org headlines in org agenda files&gt;</code>. Then input the pattern or navigate through the list. Finally, press <code class="language-plaintext highlighter-rouge">F4</code> to insert the link. At present, I bind this function with the shortcut key <code class="language-plaintext highlighter-rouge">Shift+F7</code>.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">define-key</span> <span class="nv">org-mode-map</span> <span class="nv">[</span><span class="p">(</span><span class="nv">shift</span> <span class="nv">f7</span><span class="p">)</span><span class="nv">]</span> <span class="ss">'helm-org-agenda-files-headings</span><span class="p">)</span>
</code></pre></div></div>

<p>When the target Org file has not been registered in <code class="language-plaintext highlighter-rouge">org-agenda-files</code>, we simply press <code class="language-plaintext highlighter-rouge">C-u C-c C-l</code> to insert a relative link to the file. Then we should manually append the target heading text prefixed by <code class="language-plaintext highlighter-rouge">::</code> to the link.</p>

<h1 id="insert-a-link-to-an-info-node-and-help-document">Insert a link to an Info node and help document</h1>

<p>It is convenient to browse Info documents about various programs and libraries on Linux in Emacs. If we want to refer to a particular Info node from an Org note, it is possible to create a hyperlink to it using the link type <code class="language-plaintext highlighter-rouge">elisp:</code>.</p>

<p>First, we should get a copy of the Info node name by pressing <code class="language-plaintext highlighter-rouge">c</code> in an <code class="language-plaintext highlighter-rouge">Info</code> session. Then back in Org mode, we create a hyperlink as <code class="language-plaintext highlighter-rouge">[[elisp:(info "&lt;info-node-name&gt;")][&lt;link-name&gt;]]</code>.</p>

<p>Similarly, a hyperlink can also be created in Org which jumps to the help of a function, variable or key-bindings, etc. For example,</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-function 'car)][elisp function car]]</code> links to the help document of the elisp function <code class="language-plaintext highlighter-rouge">car</code>;</li>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-variable 'debug-on-error)][elisp variable debug-on-error]]</code> links to the help document of the lisp variable <code class="language-plaintext highlighter-rouge">debug-on-error</code>;</li>
  <li><code class="language-plaintext highlighter-rouge">[[elisp:(describe-key (kbd "C-c C-c"))][Key binding C-c C-c]]</code> links to the help document of the key binding <code class="language-plaintext highlighter-rouge">C-c C-c</code>.</li>
</ul>

<p>In addition to using the link type <code class="language-plaintext highlighter-rouge">elisp:</code>, a simpler method is to use the hyperlink type <code class="language-plaintext highlighter-rouge">info:</code> for Info document and <code class="language-plaintext highlighter-rouge">help:</code> for help document. For example, <code class="language-plaintext highlighter-rouge">[[info:elisp#Introduction][Elisp Introduction section]]</code> links to the “Introduction” section in the Elisp Info document and <code class="language-plaintext highlighter-rouge">[[help:debug-on-error][debug-on-error]]</code> links to the help document for the elisp variable <code class="language-plaintext highlighter-rouge">debug-on-error</code>.</p>

<h1 id="insert-a-link-to-a-joplin-note">Insert a link to a Joplin note</h1>

<p>The external URL link for a Joplin note looks like this, which is not supported by Emacs Org mode.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>joplin://x-callback-url/openNote?id=a700a59f8a054e1aab97c296bf72fe3d
</code></pre></div></div>

<p>To make Org mode able to handle this link, we should add a new link type <code class="language-plaintext highlighter-rouge">joplin</code> by calling the <code class="language-plaintext highlighter-rouge">elisp</code> function <code class="language-plaintext highlighter-rouge">org-link-set-parameters</code>.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">org-link-set-parameters</span>
 <span class="c1">;; Name of the link type for Joplin node external URL link.</span>
 <span class="s">"joplin"</span>
 <span class="c1">;; Define the action when clicking on the link.</span>
 <span class="ss">:follow</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">url</span><span class="p">)</span>
           <span class="c1">;; Open the link with the joplin script.</span>
           <span class="p">(</span><span class="nv">start-process</span> <span class="s">"Joplin Session"</span> <span class="no">nil</span> <span class="s">"joplin"</span> <span class="p">(</span><span class="nv">concat</span> <span class="s">"joplin:"</span> <span class="nv">url</span><span class="p">))))</span>
</code></pre></div></div>

<p>In this function, we call the Joplin program using <code class="language-plaintext highlighter-rouge">start-process</code> and pass the full URL to it. The argument <code class="language-plaintext highlighter-rouge">url</code> of the <code class="language-plaintext highlighter-rouge">lambda</code> function associated with the <code class="language-plaintext highlighter-rouge">follow</code> action contains the string after the comma in the original link, i.e. <code class="language-plaintext highlighter-rouge">//x-callback-url/openNote?id=a700a59f8a054e1aab97c296bf72fe3d</code>. Therefore, we use <code class="language-plaintext highlighter-rouge">concat</code> to restore the original link. The second parameter of <code class="language-plaintext highlighter-rouge">start-process</code> is <code class="language-plaintext highlighter-rouge">nil</code>, which prevents Emacs from creating a buffer for the process.</p>

<h1 id="other-issues">Other issues</h1>

<h2 id="cannot-open-a-hyperlink-to-a-local-folder">Cannot open a hyperlink to a local folder</h2>

<p>Sometimes when I click on the hyperlink to a folder in the local file system, the message below appears in the mini buffer without opening the directory in Dired.</p>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running less /directory/to/my/folder/...done
</code></pre></div></div>

<p>Solution: Add the item <code class="language-plaintext highlighter-rouge">(directory . emacs)</code> to the alist variable <code class="language-plaintext highlighter-rouge">org-file-apps</code>.</p>

<p>Backlinks: <a href="/computer/2022/07/30/create-link-to-joplin-notes-in-emacs-org-mode.html">《Create link to Joplin notes in Emacs Org mode》</a>, <a href="/computer/2023/03/17/create-link-to-info-node-and-help-doc.html">《Create link to Info node and help document in Emacs Org mode》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="知识联接" /><summary type="html"><![CDATA[Table of contents]]></summary></entry><entry><title type="html">LaTeX fragment in Org mode with transparent background</title><link href="https://jihuan-tian.github.io/computer/2022/06/05/latex-fragment-in-org-mode-with-transparent-background.html" rel="alternate" type="text/html" title="LaTeX fragment in Org mode with transparent background" /><published>2022-06-05T00:00:00+08:00</published><updated>2022-06-05T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/05/latex-fragment-in-org-mode-with-transparent-background</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/05/latex-fragment-in-org-mode-with-transparent-background.html"><![CDATA[<p>LaTeX fragment preview provided by Emacs Org mode is a handy mechanism for acquiring an almost real-time LaTeX input and rendering experience, which transforms the tedious math note-taking into leisure and aesthetic.</p>

<p>There are three back-ends that can be used to convert LaTeX source code snippets into math equation images, namely, <code class="language-plaintext highlighter-rouge">dvipng</code>, <code class="language-plaintext highlighter-rouge">dvisvgm</code> and <code class="language-plaintext highlighter-rouge">imagemagick</code>. Among them, <code class="language-plaintext highlighter-rouge">dvisvgm</code> produces vector graphics, which is my first choice. To set it as the default back-end, add the following configuration.</p>

<div class="language-emacs-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">org-preview-latex-default-process</span> <span class="ss">'dvisvgm</span><span class="p">)</span>
</code></pre></div></div>

<p>Detailed configurations for these back-ends including command name and options are configured in the variable <code class="language-plaintext highlighter-rouge">org-preview-latex-process-alist</code>. Other options for LaTeX image generation such as foreground, background, scaling, etc. are controlled by <code class="language-plaintext highlighter-rouge">org-format-latex-options</code>.</p>

<p>To generate LaTeX fragment images with a transparent background, which will be compatible with different Emacs color themes, we should <strong>not</strong> set the property <code class="language-plaintext highlighter-rouge">:background</code> in <code class="language-plaintext highlighter-rouge">org-format-latex-options</code> as <code class="language-plaintext highlighter-rouge">Transparent</code>, but <code class="language-plaintext highlighter-rouge">default</code> instead. The generated LaTeX fragments in my solarized-light color theme looks like this.</p>

<p align="center"><img src="/figures/2022-05-27_18-00-12-latex-fragment-transparent-background-in-org.png" alt="" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="LaTeX" /><summary type="html"><![CDATA[LaTeX fragment preview provided by Emacs Org mode is a handy mechanism for acquiring an almost real-time LaTeX input and rendering experience, which transforms the tedious math note-taking into leisure and aesthetic.]]></summary></entry><entry><title type="html">Realize argument parsing similar to the “plot” function in Octave</title><link href="https://jihuan-tian.github.io/computer/2022/06/01/realize-argument-parsing-similar-to-the-plot-function-in-octave.html" rel="alternate" type="text/html" title="Realize argument parsing similar to the “plot” function in Octave" /><published>2022-06-01T00:00:00+08:00</published><updated>2022-06-01T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/06/01/realize-argument-parsing-similar-to-the-plot-function-in-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/06/01/realize-argument-parsing-similar-to-the-plot-function-in-octave.html"><![CDATA[<p>In GNU Octave, the frequently used <code class="language-plaintext highlighter-rouge">plot</code> function has several overloaded versions:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-- : plot (Y)
-- : plot (X, Y)
-- : plot (X, Y, FMT)
-- : plot (..., PROPERTY, VALUE, ...)
-- : plot (X1, Y1, ..., XN, YN)
-- : plot (HAX, ...)
-- : H = plot (...)
</code></pre></div></div>

<p>The arguments passed to <code class="language-plaintext highlighter-rouge">plot</code> have two main features as below, which make its function calling very flexible.</p>

<ol>
  <li>The argument list has a variable length.</li>
  <li>After numeric parameters, such as <code class="language-plaintext highlighter-rouge">HAX</code>, <code class="language-plaintext highlighter-rouge">X</code> and <code class="language-plaintext highlighter-rouge">Y</code>, there are multiple of <code class="language-plaintext highlighter-rouge">PROPERTY-VALUE</code> pairs.</li>
</ol>

<p>In my previous projects, when I wrote a function requiring different combinations of arguments, I would use <code class="language-plaintext highlighter-rouge">varargin</code> as its formal parameter, which wraps the list of input arguments in a cell array. Depending on the length of <code class="language-plaintext highlighter-rouge">varargin</code>, different parsing schemes were implemented.</p>

<pre class="src src-octave"><span style="color: #859900;">function</span> <span style="color: #268bd2;">foo</span>(varargin)
  <span style="color: #859900;">switch</span> (length(varargin))
    <span style="color: #859900;">case</span> 1<span style="color: #859900;">:</span>
    <span style="color: #859900;">case</span> 2<span style="color: #859900;">:</span>
    <span style="color: #859900;">case</span> 3<span style="color: #859900;">:</span>
  <span style="color: #859900;">endswitch</span>
<span style="color: #859900;">endfunction</span>
</pre>

<p>As an alternative, I might also explicitly list all the possible parameters in the function’s signature. Then, inside the function body, I used the <code class="language-plaintext highlighter-rouge">exist</code> function to check their availability and assigned default values to the missing variables.</p>

<pre class="src src-octave"><span style="color: #859900;">function</span> <span style="color: #268bd2;">foo</span>(image_handle<span style="color: #859900;">,</span> file_name<span style="color: #859900;">,</span> line_color)
  <span style="color: #859900;">if</span> (<span style="color: #859900;">!</span>exist(<span style="color: #2aa198;">"image_handle"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"var"</span>))
    <span style="color: #93a1a1; font-style: italic;">## Assign the default value to @p image_handle with the current figure</span>
    <span style="color: #93a1a1; font-style: italic;">## handle.</span>
    image_handle <span style="color: #859900;">=</span> gcf<span style="color: #859900;">;</span>
  <span style="color: #859900;">endif</span>

  <span style="color: #859900;">if</span> (<span style="color: #859900;">!</span>exist(<span style="color: #2aa198;">"file_name"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"var"</span>))
    <span style="color: #93a1a1; font-style: italic;">## Default image file for saving.</span>
    file_name <span style="color: #859900;">=</span> <span style="color: #2aa198;">"output.png"</span><span style="color: #859900;">;</span>
  <span style="color: #859900;">endif</span>

  <span style="color: #859900;">if</span> (<span style="color: #859900;">!</span>exist(<span style="color: #2aa198;">"line_color"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"var"</span>))
    line_color <span style="color: #859900;">=</span> <span style="color: #2aa198;">"r"</span><span style="color: #859900;">;</span>
  <span style="color: #859900;">endif</span>
<span style="color: #859900;">endfunction</span>
</pre>

<p>It is obvious that the first method above requires lots of code to write, if there are many cases to be handled. For the second method, all the parameters are locked to their positions in the function’s signature, which is not flexible. Therefore, a new programming pattern is needed in order to implement a function similar to the internal function <code class="language-plaintext highlighter-rouge">plot</code>.</p>

<p>To solve this problem, Octave’s <code class="language-plaintext highlighter-rouge">parseparams</code> and <code class="language-plaintext highlighter-rouge">inputParser</code> class can be used. As shown in the following example code for plotting support points in a finite element cell, I pass <code class="language-plaintext highlighter-rouge">varargin</code> firstly to <code class="language-plaintext highlighter-rouge">parseparams</code>. It will separate the parameter list into two groups <code class="language-plaintext highlighter-rouge">reg</code> and <code class="language-plaintext highlighter-rouge">prop</code>. <code class="language-plaintext highlighter-rouge">reg</code> stores all the leading numeric arguments, while <code class="language-plaintext highlighter-rouge">prop</code> stores the remaining ones, the first of which should be a string. In my case, there is only one optional leading numeric parameter, which is the figure handle. Therefore, by checking the length of <code class="language-plaintext highlighter-rouge">reg</code>, figure handle can be obtained from the argument or set to the current figure via <code class="language-plaintext highlighter-rouge">gcf</code>.</p>

<p>Next, an <code class="language-plaintext highlighter-rouge">inputParser</code> object <code class="language-plaintext highlighter-rouge">p</code> is created for parsing and extracting both required parameters and parameter-value pairs. Note that each call of the parameter adding member function, like <code class="language-plaintext highlighter-rouge">p.addRequired</code> and <code class="language-plaintext highlighter-rouge">p.addParameter</code>, a function handle is passed as the last argument, which is responsible for user input validation. This is consistent with the spirit of defensive programming and makes our code more robust. Moreover, a default value should be provided for defining a parameter-value pair.</p>

<p>Finally, to run the parser <code class="language-plaintext highlighter-rouge">p</code>, call its member function <code class="language-plaintext highlighter-rouge">parse</code> on the unwrapped cell array <code class="language-plaintext highlighter-rouge">prop{:}</code>. The calling convention of <code class="language-plaintext highlighter-rouge">plot_support_points</code> now becomes consistent with <code class="language-plaintext highlighter-rouge">plot</code>.</p>

<pre class="src src-octave"><span style="color: #859900;">function</span> <span style="color: #268bd2;">plot_support_points</span>(varargin)
  <span style="color: #93a1a1; font-style: italic;">## The function @p parseparams is used for splitting the argument</span>
  <span style="color: #93a1a1; font-style: italic;">## list into figure handle part and the remaining part.</span>
  [reg<span style="color: #859900;">,</span> prop] <span style="color: #859900;">=</span> parseparams(varargin)<span style="color: #859900;">;</span>

  <span style="color: #859900;">if</span> (length(reg) <span style="color: #859900;">&gt;</span> 0)
    h <span style="color: #859900;">=</span> reg(1)<span style="color: #859900;">;</span>
  <span style="color: #859900;">else</span>
    h <span style="color: #859900;">=</span> gcf<span style="color: #859900;">;</span>
  <span style="color: #859900;">endif</span>

  p <span style="color: #859900;">=</span> inputParser()<span style="color: #859900;">;</span>
  p.FunctionName <span style="color: #859900;">=</span> <span style="color: #2aa198;">"plot_support_points"</span><span style="color: #859900;">;</span>
  p.addRequired(<span style="color: #2aa198;">"data_file"</span><span style="color: #859900;">,</span> @ischar)<span style="color: #859900;">;</span>
  val_float <span style="color: #859900;">=</span> @(x) isscalar(x) <span style="color: #859900;">&amp;&amp;</span> isfloat(x)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"offx"</span><span style="color: #859900;">,</span> 0.02<span style="color: #859900;">,</span> val_float)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"offy"</span><span style="color: #859900;">,</span> 0.02<span style="color: #859900;">,</span> val_float)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"marker"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"o"</span><span style="color: #859900;">,</span> @ischar)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"markersize"</span><span style="color: #859900;">,</span> 12<span style="color: #859900;">,</span> val_float)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"markerfacecolor"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"r"</span><span style="color: #859900;">,</span> @ischar)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"markeredgecolor"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"r"</span><span style="color: #859900;">,</span> @ischar)<span style="color: #859900;">;</span>
  p.addParameter(<span style="color: #2aa198;">"labelsize"</span><span style="color: #859900;">,</span> 18<span style="color: #859900;">,</span> val_float)<span style="color: #859900;">;</span>

  p.parse(prop{<span style="color: #859900;">:</span>})<span style="color: #859900;">;</span>
<span style="color: #859900;">endfunction</span>
</pre>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[In GNU Octave, the frequently used plot function has several overloaded versions:]]></summary></entry><entry><title type="html">Reverse the colorbar in an Octave figure</title><link href="https://jihuan-tian.github.io/computer/2022/05/30/reverse-the-colorbar-in-an-octave-figure.html" rel="alternate" type="text/html" title="Reverse the colorbar in an Octave figure" /><published>2022-05-30T00:00:00+08:00</published><updated>2022-05-30T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/30/reverse-the-colorbar-in-an-octave-figure</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/30/reverse-the-colorbar-in-an-octave-figure.html"><![CDATA[<p>Sometimes we want to reverse the direction of the color bar in an Octave figure, which is plotted by <code class="language-plaintext highlighter-rouge">imagesc</code> or <code class="language-plaintext highlighter-rouge">surf</code> for example. This can be solved by treating the color bar as an axis object, then setting its <code class="language-plaintext highlighter-rouge">ij</code> option. This method is obtained from a hint from the documentation:</p>

<blockquote>
  <p>Implementation Note: A colorbar is created as an additional axes to the current figure with the “tag” property set to “colorbar”. The created axes object has the extra property “location” which controls the positioning of the colorbar.</p>
</blockquote>

<p>An example is given as follows.</p>

<pre class="src src-octave">figure(1<span style="color: #859900;">,</span> <span style="color: #2aa198;">"visible"</span><span style="color: #859900;">,</span> <span style="color: #2aa198;">"off"</span>)<span style="color: #859900;">;</span>
imagesc(toeplitz([1<span style="color: #859900;">:</span>100]<span style="color: #859900;">'</span>))<span style="color: #859900;">;</span>
cb <span style="color: #859900;">=</span> colorbar<span style="color: #859900;">;</span>
axis(cb<span style="color: #859900;">,</span> <span style="color: #2aa198;">"ij"</span>)<span style="color: #859900;">;</span>
img_name <span style="color: #859900;">=</span> <span style="color: #2aa198;">"figures/2022-05-29-octave-reversed-colorbar.png"</span><span style="color: #859900;">;</span>
PrintGCF(img_name)<span style="color: #859900;">;</span>
ans <span style="color: #859900;">=</span> img_name<span style="color: #859900;">;</span>
</pre>

<p align="center"><img src="/figures/2022-05-29-octave-reversed-colorbar.png" alt="" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[Sometimes we want to reverse the direction of the color bar in an Octave figure, which is plotted by imagesc or surf for example. This can be solved by treating the color bar as an axis object, then setting its ij option. This method is obtained from a hint from the documentation:]]></summary></entry><entry><title type="html">Clipboards in X Window System</title><link href="https://jihuan-tian.github.io/computer/2022/05/28/clipboards-in-X-Window-System.html" rel="alternate" type="text/html" title="Clipboards in X Window System" /><published>2022-05-28T00:00:00+08:00</published><updated>2022-05-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/28/clipboards-in-X-Window-System</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/28/clipboards-in-X-Window-System.html"><![CDATA[<p>There are three types of clipboards in X Window System.</p>

<ul>
  <li>
    <p>Primary selection</p>

    <p>It contains the last selection of text via mouse dragging in an X application. Clicking the middle mouse button will paste its contents elsewhere. This is a very convenient way for fast copying and pasting on Linux, since only mouse clicking is needed without bothering to press the <code class="language-plaintext highlighter-rouge">Ctrl+c/Ctrl+v</code> hotkeys.</p>
  </li>
  <li>
    <p>Secondary selection</p>

    <p>It is a counterpart of the primary selection, but most applications do not support it. Luckily, in Emacs we can use this function via mouse clicking similar to the operation for the primary selection, but with the <code class="language-plaintext highlighter-rouge">Meta</code> key pressed. When some text is selected in this way, Emacs will highlight it using a color different from that for a normal mouse selection, which is controlled by the face <code class="language-plaintext highlighter-rouge">secondary-selection</code>. By the way, the face for the primary selection in Emacs is <code class="language-plaintext highlighter-rouge">region</code>.</p>
  </li>
  <li>
    <p>Clipboard</p>

    <p>This is the classical clipboard manipulated via the <code class="language-plaintext highlighter-rouge">Ctrl+c/Ctrl+v</code> hotkeys, which we’ve been familiar with in most operating systems.</p>
  </li>
</ul>

<p>Linux provides the command <code class="language-plaintext highlighter-rouge">xclip</code> to directly operate on the three types of clipboards in X Window System. Its option <code class="language-plaintext highlighter-rouge">-selection</code> is used to specify which clipboard is to be used. Possible values are <code class="language-plaintext highlighter-rouge">primary</code>, <code class="language-plaintext highlighter-rouge">secondary</code> and <code class="language-plaintext highlighter-rouge">clipboard</code>. If <code class="language-plaintext highlighter-rouge">xclip</code> is further combined with other Linux commands via pipes,</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">command</span> | xclip <span class="nt">-selection</span> clipboard
</code></pre></div></div>

<p>some tasks frequented in our work can be automated. For example, we can copy the current absolute path into the clipboard as below. Note that the second command in the pipeline is to remove the trailing newline character in the output from <code class="language-plaintext highlighter-rouge">pwd</code>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">pwd</span> | <span class="nb">tr</span> <span class="nt">-d</span> <span class="s1">'\n'</span> | xclip <span class="nt">-selection</span> clipboard
</code></pre></div></div>

<p>We can also copy the current folder name into the clipboard with the help of <code class="language-plaintext highlighter-rouge">basename</code>. Its option <code class="language-plaintext highlighter-rouge">-z</code> ends its output string with <code class="language-plaintext highlighter-rouge">NULL</code> instead of newline.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">basename</span> <span class="nt">-z</span> <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span> | xclip <span class="nt">-selection</span> clipboard
</code></pre></div></div>

<p>Moreover, an image in the clipboard which is acquired by a screen capturing tool, e.g. Spectacle on KDE, can be automatically saved into a file with the current time stamp as the file name. In the following Bash script <code class="language-plaintext highlighter-rouge">cpimg.sh</code>, I use the option <code class="language-plaintext highlighter-rouge">-t TARGETS -o</code> of <code class="language-plaintext highlighter-rouge">xclip</code> to get the type of the content in the clipboard, then make sure it is actually a PNG image by using <code class="language-plaintext highlighter-rouge">grep</code>. The formatted time stamp is obtained from <code class="language-plaintext highlighter-rouge">date</code>. The image will be saved into the folder <code class="language-plaintext highlighter-rouge">${default_path}</code>, which is specified via the command line option <code class="language-plaintext highlighter-rouge">-p</code>. User can also specify a descriptive file name, which will be appended to the time stamp.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">script_name</span><span class="o">=</span><span class="s2">"cpimg.sh"</span>
<span class="nv">script_usage</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
</span><span class="nv">$script_name</span><span class="sh"> [OPTION] [image-file-name]
</span><span class="no">EOF
</span><span class="si">)</span>
<span class="nv">script_function</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
Save the image in the clipboard to a PNG file. The file name is
optional. The default file name uses the current date and time string.
</span><span class="no">EOF
</span><span class="si">)</span>
<span class="nv">script_doc</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
Script documentation.
-h     Display this help.
-p     Path to the image file, which should end with a slash.
</span><span class="no">EOF
</span><span class="si">)</span>
<span class="nv">script_examples</span><span class="o">=</span><span class="si">$(</span><span class="nb">cat</span> <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
</span><span class="nv">$script_name</span><span class="sh"> -p ./figures/ my_image
</span><span class="no">EOF
</span><span class="si">)</span>
<span class="nv">state_prefix</span><span class="o">=</span><span class="s2">"==="</span>
<span class="nv">warning_prefix</span><span class="o">=</span><span class="s2">"***"</span>
<span class="nv">error_prefix</span><span class="o">=</span><span class="s2">"!!!"</span>

<span class="k">function </span>display_help<span class="o">()</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$script_usage</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"Usage: </span><span class="nv">$script_usage</span><span class="s2">"</span>
    <span class="k">fi

    if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$script_function</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="nv">$script_function</span><span class="s2">"</span>
    <span class="k">fi

    if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$script_doc</span><span class="s2">"</span> <span class="o">]</span> <span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="nv">$script_doc</span><span class="s2">"</span>
    <span class="k">fi

    if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$script_examples</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">Examples"</span>
        <span class="nb">echo</span> <span class="nt">-e</span> <span class="s2">"</span><span class="nv">$script_examples</span><span class="s2">"</span>
    <span class="k">fi</span>
<span class="o">}</span>

<span class="c"># Default path for the image file.</span>
<span class="nv">default_path</span><span class="o">=</span><span class="s2">"./"</span>

<span class="c"># Process command options</span>
<span class="k">while </span><span class="nb">getopts</span> <span class="s2">":hp:"</span> opt<span class="p">;</span> <span class="k">do
    case</span> <span class="nv">$opt</span> <span class="k">in
        </span>p  <span class="p">)</span>  <span class="nv">default_path</span><span class="o">=</span><span class="nv">$OPTARG</span> <span class="p">;;</span>
        h  <span class="p">)</span>  display_help
            <span class="nb">exit </span>0 <span class="p">;;</span>
        <span class="se">\?</span> <span class="p">)</span>  display_help
            <span class="nb">exit </span>1 <span class="p">;;</span>
    <span class="k">esac</span>
<span class="k">done
</span><span class="nb">shift</span> <span class="k">$((</span><span class="nv">$OPTIND</span> <span class="o">-</span> <span class="m">1</span><span class="k">))</span>

<span class="c"># Check if the path exists.</span>
<span class="k">if</span> <span class="o">[</span> <span class="o">!</span> <span class="nt">-d</span> <span class="s2">"</span><span class="nv">$default_path</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
    </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$error_prefix</span><span class="s2"> The target path does not exist!"</span>
<span class="k">else
    </span><span class="nv">target_type</span><span class="o">=</span><span class="sb">`</span>xclip <span class="nt">-selection</span> clipboard <span class="nt">-t</span> TARGETS <span class="nt">-o</span> | <span class="nb">grep</span> <span class="s2">"image/png"</span><span class="sb">`</span>

    <span class="k">if</span> <span class="o">[</span> <span class="nt">-n</span> <span class="s2">"</span><span class="nv">$target_type</span><span class="s2">"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
        </span><span class="nv">timestamp</span><span class="o">=</span><span class="sb">`</span><span class="nb">date</span> +%F_%H-%M-%S<span class="sb">`</span>

        <span class="c"># If there is an argument, append it to the default file name.</span>
        <span class="k">if</span> <span class="o">[</span> <span class="nv">$# </span><span class="o">=</span> <span class="s2">"1"</span> <span class="o">]</span><span class="p">;</span> <span class="k">then
            </span><span class="nv">file_name</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">default_path</span><span class="k">}${</span><span class="nv">timestamp</span><span class="k">}</span><span class="s2">-</span><span class="nv">$1</span><span class="s2">.png"</span>
        <span class="k">else
            </span><span class="nv">file_name</span><span class="o">=</span><span class="s2">"</span><span class="k">${</span><span class="nv">default_path</span><span class="k">}${</span><span class="nv">timestamp</span><span class="k">}</span><span class="s2">.png"</span>
        <span class="k">fi

        </span>xclip <span class="nt">-selection</span> clipboard <span class="nt">-t</span> image/png <span class="nt">-o</span> <span class="o">&gt;</span> <span class="s2">"</span><span class="nv">$file_name</span><span class="s2">"</span>
    <span class="k">else
        </span><span class="nb">echo</span> <span class="s2">"</span><span class="nv">$error_prefix</span><span class="s2"> The content in the clipboard cannot be saved as a PNG image!"</span>
    <span class="k">fi
fi</span>
</code></pre></div></div>

<p>Backlinks: <a href="/computer/2022/07/30/open-hyperlink-to-joplin-note-from-pdf.html">《Open hyperlink to Joplin note from PDF》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Bash" /><category term="command" /><category term="Linux" /><category term="X-Window" /><category term="Emacs" /><summary type="html"><![CDATA[There are three types of clipboards in X Window System.]]></summary></entry><entry><title type="html">Prefix a file name with its modification date</title><link href="https://jihuan-tian.github.io/computer/2022/05/28/prefix-a-file-name-with-its-modification-date.html" rel="alternate" type="text/html" title="Prefix a file name with its modification date" /><published>2022-05-28T00:00:00+08:00</published><updated>2022-05-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/28/prefix-a-file-name-with-its-modification-date</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/28/prefix-a-file-name-with-its-modification-date.html"><![CDATA[<p>The following simple Bash script adds a year-month-date string to the file name, which makes its time stamp more apparent in a file explorer. Also note that in the <code class="language-plaintext highlighter-rouge">grep</code> command, the Perl-compatible regular expression is adopted.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/bash</span>

<span class="nv">modification_date</span><span class="o">=</span><span class="si">$(</span><span class="nb">ls</span> <span class="nt">-l</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="nt">--full-time</span> | <span class="nb">grep</span> <span class="nt">-P</span> <span class="s2">"</span><span class="se">\d</span><span class="s2">{4}-</span><span class="se">\d</span><span class="s2">{2}-</span><span class="se">\d</span><span class="s2">{2}"</span> <span class="nt">-o</span><span class="si">)</span>
<span class="nb">mv</span> <span class="s2">"</span><span class="nv">$1</span><span class="s2">"</span> <span class="s2">"</span><span class="nv">$modification_date</span><span class="s2">-</span><span class="nv">$1</span><span class="s2">"</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="Bash" /><category term="command" /><summary type="html"><![CDATA[The following simple Bash script adds a year-month-date string to the file name, which makes its time stamp more apparent in a file explorer. Also note that in the grep command, the Perl-compatible regular expression is adopted.]]></summary></entry><entry><title type="html">Supported time types for the displayed files from ls</title><link href="https://jihuan-tian.github.io/computer/2022/05/28/supported-time-types-for-the-displayed-files-from-ls.html" rel="alternate" type="text/html" title="Supported time types for the displayed files from ls" /><published>2022-05-28T00:00:00+08:00</published><updated>2022-05-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/28/supported-time-types-for-the-displayed-files-from-ls</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/28/supported-time-types-for-the-displayed-files-from-ls.html"><![CDATA[<p>Three types of time are supported for files stored on Linux, which can be accessed via the <code class="language-plaintext highlighter-rouge">ls</code> command.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">mtime</code>: time of last modification of file contents. When <code class="language-plaintext highlighter-rouge">ls -l</code> is called, this is displayed by default. Possible options for <code class="language-plaintext highlighter-rouge">ls</code> are as follows.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">-t</code>: do not show time and sort by <code class="language-plaintext highlighter-rouge">mtime</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">-l</code>: show <code class="language-plaintext highlighter-rouge">mtime</code> and sort by file name.</li>
      <li><code class="language-plaintext highlighter-rouge">-l -t</code>: show <code class="language-plaintext highlighter-rouge">mtime</code> and sort by <code class="language-plaintext highlighter-rouge">mtime</code>.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">atime</code>: file access time.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">-u</code>: do not show time and sort by <code class="language-plaintext highlighter-rouge">atime</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">-l -u</code>: show <code class="language-plaintext highlighter-rouge">atime</code> and sort by file name.</li>
      <li><code class="language-plaintext highlighter-rouge">-l -t -u</code>: show <code class="language-plaintext highlighter-rouge">atime</code> and sort by <code class="language-plaintext highlighter-rouge">atime</code>.</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">ctime</code>: time of last modification of file status information.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">-c</code>: do not show time and sort by <code class="language-plaintext highlighter-rouge">ctime</code>.</li>
      <li><code class="language-plaintext highlighter-rouge">-l -c</code>: show <code class="language-plaintext highlighter-rouge">ctime</code> and sort by file name.</li>
      <li><code class="language-plaintext highlighter-rouge">-l -t -c</code>: show <code class="language-plaintext highlighter-rouge">ctime</code> and sort by <code class="language-plaintext highlighter-rouge">ctime</code>.</li>
    </ul>
  </li>
</ul>

<p>Furthermore, if the option <code class="language-plaintext highlighter-rouge">--full-time</code> is present, the full-ISO format of the date and time will be displayed.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="command" /><summary type="html"><![CDATA[Three types of time are supported for files stored on Linux, which can be accessed via the ls command.]]></summary></entry><entry><title type="html">Orchestration of Zotero and Emacs Org mode for bibliography management</title><link href="https://jihuan-tian.github.io/computer/2022/05/24/orchestration-of-zotero-and-emacs-org-mode-for-bibliography-management.html" rel="alternate" type="text/html" title="Orchestration of Zotero and Emacs Org mode for bibliography management" /><published>2022-05-24T00:00:00+08:00</published><updated>2022-05-24T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/24/orchestration-of-zotero-and-emacs-org-mode-for-bibliography-management</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/24/orchestration-of-zotero-and-emacs-org-mode-for-bibliography-management.html"><![CDATA[<p>Zotero is a famous bibliography management tool that I’ve kept using for a long time. One of its indispensable functions is to automatically grab bibliography information from a web page, download and associate the PDF file of the paper. Previously, I used Zotero with LibreOffice Writer instead of LaTeX or Emacs Org mode, because the interoperability between Zotero and BibTeX lacked at that time. However, the input and visualization of mathematics in LibreOffice Writer is always unsatisfying, which actually influences my writing efficiency and fluency.</p>

<p>Now with the advent of <code class="language-plaintext highlighter-rouge">Better BibTeX</code> extension for Zotero, the export of the whole bibliography into a BibTeX file can run automatically in the background, whenever there is a change in the library (see Figure 1).</p>

<p align="center"><img src="/figures/2022-05-25_06-07-27-better-bibtex-auto-export.png" alt="Figure 1. Automatic export of Zotero library to BibTeX using Better BibTeX" /></p>
<p align="center">Figure 1. Automatic export of Zotero library to BibTeX using Better BibTeX</p>

<p>On the Emacs side, several packages in cooperation with the Org mode make the direct interaction with BibTeX files and inserting citations into Org files a veritable leisure. They include <code class="language-plaintext highlighter-rouge">org-ref</code> for inserting citations and cross-references, <code class="language-plaintext highlighter-rouge">helm-bibtex</code> for managing BibTeX files based on Helm and the bibtex-completion backend (see Figure 2).</p>

<p align="center"><img src="/figures/2022-05-25_06-10-52-insert-citation-with-helm-bibtex-prompt.png" alt="Figure 2. Insert citation with helm-bibtex prompt" /></p>
<p align="center">Figure 2. Insert citation with helm-bibtex prompt</p>

<p>After Zotero and Emacs Org mode are orchestrated, not only a citation key linked with its BibTeX item can be generated with the powerful prompt provided by Helm, a centralized Org note file accompanying the bibliography library can also be created and maintained with full LaTeX support and flexibility of exporting to lots of formats. In addition, when we click on a citation link, the associated PDF file managed by Zotero can be directly opened within our favorite viewer (see Figure 3).</p>

<p align="center"><img src="/figures/2022-05-25_06-05-04-helm-bibtex-open-citation.png" alt="Figure 3. Open citation link from Org mode" /></p>
<p align="center">Figure 3. Open citation link from Org mode</p>

<p>It can be envisioned that once we become familiar with this working mode after some customization and practices, the efficiency and quality of our note taking and paper writing will be exalted to a new level.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="Zotero" /><summary type="html"><![CDATA[Zotero is a famous bibliography management tool that I’ve kept using for a long time. One of its indispensable functions is to automatically grab bibliography information from a web page, download and associate the PDF file of the paper. Previously, I used Zotero with LibreOffice Writer instead of LaTeX or Emacs Org mode, because the interoperability between Zotero and BibTeX lacked at that time. However, the input and visualization of mathematics in LibreOffice Writer is always unsatisfying, which actually influences my writing efficiency and fluency.]]></summary></entry><entry><title type="html">Add bookmarks to a PDF file in batch</title><link href="https://jihuan-tian.github.io/computer/2022/05/20/add-bookmarks-to-a-pdf-file-in-batch.html" rel="alternate" type="text/html" title="Add bookmarks to a PDF file in batch" /><published>2022-05-20T00:00:00+08:00</published><updated>2022-05-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/20/add-bookmarks-to-a-pdf-file-in-batch</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/20/add-bookmarks-to-a-pdf-file-in-batch.html"><![CDATA[<p>Under Linux, the tool <a href="https://sourceforge.net/projects/jpdfbookmarks/">JPdfBookmarks</a> can be use to add a collection of bookmarks to a PDF book in batch by loading information from a text file, which stores the table of contents and page numbers. To prepare this text file manually, I’ve summarized the following steps according to my practice for your reference.</p>

<ol>
  <li>
    <p>Take snapshots of the content pages and save them into images by using <code class="language-plaintext highlighter-rouge">ImageMagick</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>convert <span class="nt">-density</span> 300 book.pdf[<span class="k">${</span><span class="nv">page_no</span><span class="k">}</span><span class="o">]</span> content_page.png
</code></pre></div>    </div>

    <p>Here <code class="language-plaintext highlighter-rouge">${page_no}</code> should be replaced with the numeric page number of the content page.</p>
  </li>
  <li>
    <p>Extract text from the image of the content page using the OCR tool <a href="https://github.com/tesseract-ocr/tesseract">Tesseract</a>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tesseract content_page.png stdout <span class="nt">-l</span> eng <span class="o">&gt;&gt;</span> bookmark_text.txt
</code></pre></div>    </div>

    <p>The option <code class="language-plaintext highlighter-rouge">stdout</code> tells <code class="language-plaintext highlighter-rouge">Tesseract</code> to output the extracted text to standard output and <code class="language-plaintext highlighter-rouge">-l eng</code> specifies the OCR language as English. To check the list of languages supported by <code class="language-plaintext highlighter-rouge">Tesseract</code>, execute <code class="language-plaintext highlighter-rouge">tesseract --list-langs</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>tesseract <span class="nt">--list-langs</span>
List of available languages <span class="o">(</span>8<span class="o">)</span>:
chi_sim
chi_sim_vert
chi_tra
chi_tra_vert
deu
eng
fra
osd
</code></pre></div>    </div>
  </li>
  <li>Open the generated text file <code class="language-plaintext highlighter-rouge">bookmark_text.txt</code> and perform a manual cleaning and reorganization if needed. It is suggested to do this work in Emacs, where the command <code class="language-plaintext highlighter-rouge">regexp-builder</code> can help us construct and verify regular expressions that are used for efficient text matching and replacement.</li>
  <li>Open the target PDF file in <code class="language-plaintext highlighter-rouge">JPdfBookmarks</code> and load the text file <code class="language-plaintext highlighter-rouge">bookmark_text.txt</code> by clicking the menu item <code class="language-plaintext highlighter-rouge">Load</code> in the <code class="language-plaintext highlighter-rouge">Tools</code> menu.</li>
  <li>Check the validity of the PDF page targets associated with those bookmark items and finally save the PDF file.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="PDF" /><category term="ImageMagick" /><category term="OCR" /><summary type="html"><![CDATA[Under Linux, the tool JPdfBookmarks can be use to add a collection of bookmarks to a PDF book in batch by loading information from a text file, which stores the table of contents and page numbers. To prepare this text file manually, I’ve summarized the following steps according to my practice for your reference.]]></summary></entry><entry><title type="html">Convert an Org mode article to Markdown format</title><link href="https://jihuan-tian.github.io/computer/2022/05/20/convert-an-org-mode-article-to-markdown-format.html" rel="alternate" type="text/html" title="Convert an Org mode article to Markdown format" /><published>2022-05-20T00:00:00+08:00</published><updated>2022-05-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/20/convert-an-org-mode-article-to-markdown-format</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/20/convert-an-org-mode-article-to-markdown-format.html"><![CDATA[<p>The default Markdown export functionality provided by Emacs Org mode has a flaw in that it cannot preserve the grammatical highlight in a code block. This is because the Org mode environment <code class="language-plaintext highlighter-rouge">#+BEGIN_SRC ... #+END_SRC</code> is simply transformed into indented code in the Markdown file with the surrounding ``` symbols missing.</p>

<p>This problem can be solved by installing the package <code class="language-plaintext highlighter-rouge">ox-gfm</code>, which implements a Markdown export back-end with GitHub flavor. It is suggested to load <code class="language-plaintext highlighter-rouge">ox-gfm</code> by via <code class="language-plaintext highlighter-rouge">usage-package</code> as shown below (<code class="language-plaintext highlighter-rouge">usage-package</code> is also a package which can be installed from <code class="language-plaintext highlighter-rouge">MELPA</code>).</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">use-package</span> <span class="nv">ox-gfm</span>
  <span class="ss">:defer</span> <span class="mi">3</span>
  <span class="ss">:after</span> <span class="nv">org</span><span class="p">)</span>
</code></pre></div></div>

<p>The following loading method via <code class="language-plaintext highlighter-rouge">eval-after-load</code> is not recommended.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">eval-after-load</span> <span class="s">"org"</span>
  <span class="o">'</span><span class="p">(</span><span class="nb">require</span> <span class="ss">'ox-gfm</span> <span class="no">nil</span> <span class="no">t</span><span class="p">))</span>
</code></pre></div></div>

<p>It will lead to the following error.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Debugger entered--Lisp error: (error "Unknown \"nil\" back-end: Aborting export")
  signal(error ("Unknown \"nil\" back-end: Aborting export"))
  error("Unknown \"%s\" back-end: Aborting export" nil)
  org-export-barf-if-invalid-backend(nil)
  org-export-as(gfm nil nil nil nil)
  org-export-to-buffer(gfm "*Org GFM Export*" nil nil nil nil nil #f(compiled-function () #&lt;bytecode 0x1a2ea5d&gt;))
  org-gfm-export-as-markdown()
  funcall-interactively(org-gfm-export-as-markdown)
  call-interactively(org-gfm-export-as-markdown record nil)
  command-execute(org-gfm-export-as-markdown record)
  helm-M-x(nil #("org-gfm-export-as-markdown" 0 26 (match-part "org-gfm-export-as-markdown")))
  funcall-interactively(helm-M-x nil #("org-gfm-export-as-markdown" 0 26 (match-part "org-gfm-export-as-markdown")))
  call-interactively(helm-M-x nil nil)
  command-execute(helm-M-x)
</code></pre></div></div>

<p>After loading <code class="language-plaintext highlighter-rouge">ox-gfm</code>, when pressing <code class="language-plaintext highlighter-rouge">C-c C-e</code> in Org mode, a new export option will be displayed as below. Then a better Markdown transformation can be produced than the default back-end in Org mode.</p>

<p><img src="/figures/2022-05-20_11-45-26-ox-gfm-export.png" alt="ox-gfm export" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Markdown" /><category term="Org-mode" /><category term="Emacs" /><summary type="html"><![CDATA[The default Markdown export functionality provided by Emacs Org mode has a flaw in that it cannot preserve the grammatical highlight in a code block. This is because the Org mode environment #+BEGIN_SRC ... #+END_SRC is simply transformed into indented code in the Markdown file with the surrounding ``` symbols missing.]]></summary></entry><entry><title type="html">Wrap LaTeX inline math equations in Org mode</title><link href="https://jihuan-tian.github.io/computer/2022/05/18/wrap-latex-inline-math-equations-in-org-mode.html" rel="alternate" type="text/html" title="Wrap LaTeX inline math equations in Org mode" /><published>2022-05-18T00:00:00+08:00</published><updated>2022-05-18T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/18/wrap-latex-inline-math-equations-in-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/18/wrap-latex-inline-math-equations-in-org-mode.html"><![CDATA[<p>According to the Org mode manual, the dollar sign <code class="language-plaintext highlighter-rouge">$</code> is treated as math delimiters in the following cases.</p>

<ul>
  <li>The enclosed text contains at most two line breaks.</li>
  <li>The enclosed text is directly attached to the <code class="language-plaintext highlighter-rouge">$</code> characters with no whitespace between.</li>
  <li>The closing <code class="language-plaintext highlighter-rouge">$</code> is followed by whitespace or punctuation.</li>
</ul>

<p>For example, the dollar signs in <code class="language-plaintext highlighter-rouge">$\alpha$-th</code> will be escaped as <code class="language-plaintext highlighter-rouge">\$</code> when it is exported to LaTeX document, just because the closing <code class="language-plaintext highlighter-rouge">$</code> is not followed by a whitespace or punctuation. N.B. The hyphen character <code class="language-plaintext highlighter-rouge">-</code> is not treated as punctuation by Org mode.</p>

<p>Therefore, the safest way is to use <code class="language-plaintext highlighter-rouge">\(...\)</code> for inline math delimiters in Org mode.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Org mode" /><summary type="html"><![CDATA[According to the Org mode manual, the dollar sign $ is treated as math delimiters in the following cases.]]></summary></entry><entry><title type="html">Switch from LibreOffice to Emacs Org mode for work journal</title><link href="https://jihuan-tian.github.io/computer/2022/05/16/switch-from-libreoffice-to-emacs-org-mode-for-work-journal.html" rel="alternate" type="text/html" title="Switch from LibreOffice to Emacs Org mode for work journal" /><published>2022-05-16T00:00:00+08:00</published><updated>2022-05-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/16/switch-from-libreoffice-to-emacs-org-mode-for-work-journal</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/16/switch-from-libreoffice-to-emacs-org-mode-for-work-journal.html"><![CDATA[<p>Today, for taking the work journal on algorithm development, I switched from LibreOffice to Emacs Org mode with the following consideration.</p>

<ol>
  <li>As the size of <code class="language-plaintext highlighter-rouge">*.odt</code> document grows larger and larger, for example, more than 100 pages with images included in my case, LibreOffice’s GUI response becomes slow. My normal editing activities are frequently interrupted by automatic or manual saving operations. If still sticking to the LibreOffice solution, I have to split the large document into several smaller ones, for example, split by years as what I’ve done for my personal diaries. However, if I resort to Emacs Org mode, which is purely text based, the performance issue will not be a headache. Even though exporting a large Org document to LaTeX format and then compiling it actually need some time, the building process can be made automatic and scheduled at night using script.</li>
  <li>Even though the cross referencing functionality in LibreOffice Writer is quite convenient and has pinpoint accuracy, I still cannot add tags to my notes, since LibreOffice Writer is designed as a style-based word processor but not a tool for information management.</li>
  <li>Bidirectional document type conversion, content pasting and copying between LibreOffice and others formats, such as Markdown, HTML and LaTeX, are not soundly supported.</li>
  <li>There is no solution for efficient LaTeX input and typesetting in LibreOffice. The extension Texmaths is just usable but cannot beat the synergy of Org mode, YASnippet and CDLaTeX.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LibreOffice" /><category term="Org-mode" /><summary type="html"><![CDATA[Today, for taking the work journal on algorithm development, I switched from LibreOffice to Emacs Org mode with the following consideration.]]></summary></entry><entry><title type="html">Print variable values during debugging</title><link href="https://jihuan-tian.github.io/computer/2022/05/12/print-variable-values-during-debugging.html" rel="alternate" type="text/html" title="Print variable values during debugging" /><published>2022-05-12T00:00:00+08:00</published><updated>2022-05-12T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/05/12/print-variable-values-during-debugging</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/05/12/print-variable-values-during-debugging.html"><![CDATA[<p>Printing the value of a simple variable, such as those primitive types in C/C++, is an effective way of debugging numerical algorithms. Since devising a test case for verification of mathematical theories is much more brain taxing and time consuming than the debugging work itself, the benefit of a stepwise running debugger (usually equipped with an IDE) is not manifest anymore. Hence, the seemingly outdated printout of variables is good enough for us to probe algorithm details and localize potential bugs.</p>

<p>In C++, a common trick for printing out the value of a variable in the form <code class="language-plaintext highlighter-rouge">variable_name=variable_value</code> is to define a macro as below. Here, the operator <code class="language-plaintext highlighter-rouge">#</code> is adopted to get the literal string of the token passed into the macro. Also beware of the brackets enclosing <code class="language-plaintext highlighter-rouge">variable</code>. They are requisite to prevent unexpected errors caused by some arbitrary string stored in <code class="language-plaintext highlighter-rouge">variable</code>.</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define PRINTOUT(variable) std::cout &lt;&lt; #variable &lt;&lt; "=" &lt;&lt; (variable) &lt;&lt; std::endl
</span></code></pre></div></div>

<p>To realize similar functionality in GNU Octave, I’ve defined a function <code class="language-plaintext highlighter-rouge">printout_var</code> as below, which accepts an expression to be evaluated and prints out its string representation and value.</p>
<pre>
<span class="keyword">function</span> <span class="function-name">printout_var</span>(varargin)
  <span class="comment">## printout_var - Print out the value of an expression for debugging
</span>  <span class="comment">## purpose.
</span>
  [reg<span class="builtin">,</span> prop] <span class="builtin">=</span> parseparams(varargin)<span class="builtin">;</span>

  <span class="keyword">if</span> (length(reg) <span class="builtin">&gt;</span> 0)
    fid <span class="builtin">=</span> reg{1}<span class="builtin">;</span>
  <span class="keyword">else</span>
    fid <span class="builtin">=</span> stdout<span class="builtin">;</span>
  <span class="keyword">endif</span>

  <span class="keyword">if</span> (length(prop) <span class="builtin">&gt;</span> 0)
    expression_string <span class="builtin">=</span> prop{1}<span class="builtin">;</span>
    fprintf(fid<span class="builtin">,</span> cstrcat(expression_string<span class="builtin">,</span> <span class="string">" = %s\n"</span>)<span class="builtin">,</span> mat2str(evalin(<span class="string">"caller"</span><span class="builtin">,</span> expression_string)<span class="builtin">,</span> 15))<span class="builtin">;</span>
  <span class="keyword">else</span>
    error(<span class="string">"=== Please provide the expression to be evaluated!"</span>)<span class="builtin">;</span>
  <span class="keyword">endif</span>
<span class="keyword">endfunction</span>
</pre>

<p>In this function, I use <code class="language-plaintext highlighter-rouge">parseparams</code> to parse the list of arguments with a variable length. The first returned cell array <code class="language-plaintext highlighter-rouge">reg</code> holds a list of arguments before the first string element in <code class="language-plaintext highlighter-rouge">varargin</code>, while the second returned cell array <code class="language-plaintext highlighter-rouge">prop</code> holds the remaining arguments, which begins with the first string argument in <code class="language-plaintext highlighter-rouge">varargin</code>. The first non-string argument as an integer is treated as the file descriptor <code class="language-plaintext highlighter-rouge">fid</code> for the printout. The first string argument is the mandatory expression <code class="language-plaintext highlighter-rouge">expression_string</code>.</p>

<p>To evaluate the expression, I use the built-in function <code class="language-plaintext highlighter-rouge">evalin</code>. Being different from the commonly used <code class="language-plaintext highlighter-rouge">eval</code>, it can specify the context, either <code class="language-plaintext highlighter-rouge">caller</code> or <code class="language-plaintext highlighter-rouge">base</code>, in which the expression is executed. Here, I set the context to <code class="language-plaintext highlighter-rouge">caller</code>. This is mandatory because the evaluation takes place in the local scope of my function <code class="language-plaintext highlighter-rouge">printout_var</code>, while <code class="language-plaintext highlighter-rouge">printout_var</code> needs to print those variables defined outside its own environment. It is obvious that when <code class="language-plaintext highlighter-rouge">printout_var</code> is called from an interactive session of Octave, which is our usual working scenario for debugging, the <code class="language-plaintext highlighter-rouge">caller</code> context is actually the same as the <code class="language-plaintext highlighter-rouge">base</code> context. In addition, <code class="language-plaintext highlighter-rouge">mat2str</code> is used to convert the numerical result into string representation. It is suitable for both scalar and matrix values, which is better than <code class="language-plaintext highlighter-rouge">num2str</code>.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="算法开发" /><category term="Octave" /><category term="C++" /><summary type="html"><![CDATA[Printing the value of a simple variable, such as those primitive types in C/C++, is an effective way of debugging numerical algorithms. Since devising a test case for verification of mathematical theories is much more brain taxing and time consuming than the debugging work itself, the benefit of a stepwise running debugger (usually equipped with an IDE) is not manifest anymore. Hence, the seemingly outdated printout of variables is good enough for us to probe algorithm details and localize potential bugs.]]></summary></entry><entry><title type="html">Experience about debug and release mode</title><link href="https://jihuan-tian.github.io/computer/2022/04/29/experience-about-debug-and-release-mode.html" rel="alternate" type="text/html" title="Experience about debug and release mode" /><published>2022-04-29T00:00:00+08:00</published><updated>2022-04-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/29/experience-about-debug-and-release-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/29/experience-about-debug-and-release-mode.html"><![CDATA[<p>In this post, I’ll summarize my experience and understanding about the debug mode and release mode when compiling C++ programs.</p>

<ol>
  <li>During the program development stage, the debug mode should be used. This is because assertions as an effective measure for defensive programming are only available in the debug mode, so that inherent errors and bugs can be detected or captured.</li>
  <li>Even though the program can be successfully compiled in the debug mode, it still cannot ensure a successful compilation in the release mode. Even though the compilation in the release mode is successful, there may be some annoying warning messages, such as complaints about unused variables. Therefore, the program compilation must be successful in both modes. Moreover, we had better make ensure there is not a single warning message produced.</li>
  <li>Algorithms implementing the finite element method or boundary element method are computation intensive, which is quite time-consuming during the verification stage where the debug mode should be used. To accelerate the debug and verification efficiency, we should always design a small test model with a mesh as coarse as possible. Sometimes, a model containing only a single cell or double cells is enough for a theoretical verification. In such simple or even degenerate circumstances, it is also feasible to solve the problem by manual computation, which can then be compared with the numerical simulation.</li>
  <li>During the stage of performance profiling, we are interested in which lines of the source code are the bottleneck. If the program to be profiled is compiled in the release mode, due to compiler optimization, the generated machine code of the executable or library does not rigorously correspond with the source code. Therefore, it is recommended to use the debug mode for performance profiling.</li>
  <li>After the program is theoretically verified and its performance is tuned and optimized, it is the time for us to switch to the release mode and get its maximum speed.</li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><category term="C++" /><category term="算法开发" /><summary type="html"><![CDATA[In this post, I’ll summarize my experience and understanding about the debug mode and release mode when compiling C++ programs.]]></summary></entry><entry><title type="html">Organizing header files without circular dependency</title><link href="https://jihuan-tian.github.io/computer/2022/04/29/organizing-header-files-without-circular-dependency.html" rel="alternate" type="text/html" title="Organizing header files without circular dependency" /><published>2022-04-29T00:00:00+08:00</published><updated>2022-04-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/29/organizing-header-files-without-circular-dependency</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/29/organizing-header-files-without-circular-dependency.html"><![CDATA[<p>As a C++ project becomes larger, the probability of stumbling across circularly dependent header files increases. This problem can usually be solved by the technique of forward declaration, where the dependency between two header files is only allowed for pointer types.</p>

<p>The following example shows circularly dependent two header files <code class="language-plaintext highlighter-rouge">a.h</code> and <code class="language-plaintext highlighter-rouge">b.h</code>.</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//! File: a.h</span>
<span class="cp">#ifndef A_H
#define A_H
</span>
<span class="cp">#include</span> <span class="cpf">"b.h"</span><span class="cp">
</span>
<span class="n">Class</span> <span class="n">A</span>
<span class="p">{</span>
<span class="nl">public:</span>
  <span class="n">B</span> <span class="n">b</span><span class="p">;</span>
<span class="p">};</span>

<span class="cp">#endif
</span></code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//! File b.h</span>
<span class="cp">#ifndef B_H
#define B_H
</span>
<span class="cp">#include</span> <span class="cpf">"a.h"</span><span class="cp">
</span>
<span class="k">class</span> <span class="nc">B</span>
<span class="p">{</span>
<span class="nl">public:</span>
  <span class="n">A</span> <span class="o">*</span><span class="n">a</span><span class="p">;</span>
<span class="p">};</span>

<span class="cp">#endif
</span></code></pre></div></div>

<p>The file <code class="language-plaintext highlighter-rouge">b.h</code> can be modified as below to remove the circular dependency.</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//! File b.h</span>
<span class="cp">#ifndef B_H
#define B_H
</span>
<span class="k">class</span> <span class="nc">A</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">B</span>
<span class="p">{</span>
<span class="nl">public:</span>
  <span class="n">A</span> <span class="o">*</span><span class="n">a</span><span class="p">;</span>
<span class="p">};</span>

<span class="cp">#endif
</span></code></pre></div></div>

<p>Even though the forward declaration can suppress compiler errors, the lone declaration <code class="language-plaintext highlighter-rouge">class A;</code> at the front of <code class="language-plaintext highlighter-rouge">b.h</code> still indicates a premature or imperfect design. Therefore, we had better avoid such scenario after careful consideration and several rounds of restructuring of the functional modules.</p>

<p>At the beginning of the project, there may be not enough tangible materials, including code, pseudocode, notes, derivations, etc. Hence, a detailed and feasible overall design of the function modules is unrealistic. However, as the project goes on, we gradually form an overall picture of the functional modules and accumulate enough information to perform a scanning of the <code class="language-plaintext highlighter-rouge">#include</code> directives in all the header files. Then a directed graph can be drawn for illustrating their dependencies.</p>

<p>To resolve those circular dependencies, we need to decompose large header files into functional atoms. This is because the mutual dependency of two header files can never be an absolute 100% dependency. Such dependency must have concentrated on a quite limited number of points, such as some class declarations or shared data structures. Therefore, separate each of them into an independent file will for sure solve the problem.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><category term="C++" /><category term="算法开发" /><summary type="html"><![CDATA[As a C++ project becomes larger, the probability of stumbling across circularly dependent header files increases. This problem can usually be solved by the technique of forward declaration, where the dependency between two header files is only allowed for pointer types.]]></summary></entry><entry><title type="html">Return a vector or matrix from a function</title><link href="https://jihuan-tian.github.io/computer/2022/04/29/return-a-vector-or-matrix-from-a-function.html" rel="alternate" type="text/html" title="Return a vector or matrix from a function" /><published>2022-04-29T00:00:00+08:00</published><updated>2022-04-29T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/29/return-a-vector-or-matrix-from-a-function</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/29/return-a-vector-or-matrix-from-a-function.html"><![CDATA[<p>There are usually two implementations for returning a vector or matrix from a function.</p>

<ol>
  <li>
    <p>Returned as the function’s return value</p>

    <p>In this case, the memory of the vector or matrix is dynamically allocated inside the function. When the function returns, the data will be copied to a temporary object as the function’s return value. Usually, the compiler optimization will obviate such copying and directly returns the object.</p>

    <p>The advantage of this method is that the calling convention <code class="language-plaintext highlighter-rouge">obj=function_name(...)</code> is convenient and consistent with our habit about value assignment in mathematics. For the disadvantage, it is obvious that if such function is called many times, the vector or matrix object will be dynamically created for the same number of times, which requires additional overheads.</p>
  </li>
  <li>
    <p>Returned as an argument of the function with an <code class="language-plaintext highlighter-rouge">output</code> intent</p>

    <p>The vector or matrix object is passed by reference into the function, and its memory should be allocated before the function call. Hence, there is no internal dynamic memory allocation inside the function anymore. Even though we may not be so familiar with the calling convention here <code class="language-plaintext highlighter-rouge">function_name(..., returned_object)</code>, we can get used to it by practice and the advantage is obvious. If the memory for the fixed-size vector or matrix has been pre-allocated outside the function, it can be reused by the function and the time for dynamic memory allocation is saved. If the function is called many times, the performance improvement will be manifest. This also reminds us not to reinitialize the vector or matrix and reallocate memory for it inside the function.</p>
  </li>
</ol>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><category term="C++" /><category term="算法开发" /><summary type="html"><![CDATA[There are usually two implementations for returning a vector or matrix from a function.]]></summary></entry><entry><title type="html">Close Qt figure window in Octave</title><link href="https://jihuan-tian.github.io/computer/2022/04/23/close-qt-figure-window-in-octave.html" rel="alternate" type="text/html" title="Close Qt figure window in Octave" /><published>2022-04-23T00:00:00+08:00</published><updated>2022-04-23T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/23/close-qt-figure-window-in-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/23/close-qt-figure-window-in-octave.html"><![CDATA[<p>Several graphics toolkits, such as <code class="language-plaintext highlighter-rouge">fltk</code>, <code class="language-plaintext highlighter-rouge">gnuplot</code> and <code class="language-plaintext highlighter-rouge">qt</code>, are provided by GNU Octave to render the figures plot for mathematical functions and data. Even though the classical <code class="language-plaintext highlighter-rouge">gnuplot</code> toolkit (usually combined with the <code class="language-plaintext highlighter-rouge">x11</code> terminal) is stable and enough for common visualization tasks, the graphics made within the axe in a figure window cannot be correctly zoomed in or out in some situations, for example, when it is placed in a <code class="language-plaintext highlighter-rouge">subplot</code> or when a color bar exists.</p>

<p align="center"><img src="/figures/20220423_123655-octave-gnuplot-toolkit-before-zooming.png" alt="Figure before zooming when the gnuplot toolkit is used" /></p>
<p align="center">Figure before zooming when the gnuplot toolkit is used</p>

<p align="center"><img src="/figures/20220423_123655-octave-gnuplot-toolkit-after-zooming.png" alt="Figure after zooming when the gnuplot toolkit is used" /></p>
<p align="center">Figure after zooming when the gnuplot toolkit is used</p>

<p>Therefore, the modern <code class="language-plaintext highlighter-rouge">qt</code> is a better choice than <code class="language-plaintext highlighter-rouge">gnuplot</code>, which has no such problem at all.</p>

<p align="center"><img src="/figures/20220423_142704-octave-qt-toolkit-after-zooming.png" alt="Figure after zooming when the qt toolkit is used" /></p>
<p align="center">Figure after zooming when the qt toolkit is used</p>

<p>However, because I usually start an Octave session from within Emacs by executing the <code class="language-plaintext highlighter-rouge">run-octave</code> command, a created figure window cannot be closed via either mouse clicking or key pressing <code class="language-plaintext highlighter-rouge">Ctrl+w</code>, while it is normal when Octave is started from a console.</p>

<p>Previously , I thought this was a bug in Octave’s graphics system. According to this <a href="https://stackoverflow.com/a/52946855/14842106">answer</a>, it is caused by an inappropriate command line argument <code class="language-plaintext highlighter-rouge">--no-line-editing</code> adopted by Emacs in the variable <code class="language-plaintext highlighter-rouge">inferior-octave-startup-args</code>. Then the solution is to customize this variable with the value <code class="language-plaintext highlighter-rouge">("-i" "--line-editing" "--silent")</code>.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><category term="Emacs" /><summary type="html"><![CDATA[Several graphics toolkits, such as fltk, gnuplot and qt, are provided by GNU Octave to render the figures plot for mathematical functions and data. Even though the classical gnuplot toolkit (usually combined with the x11 terminal) is stable and enough for common visualization tasks, the graphics made within the axe in a figure window cannot be correctly zoomed in or out in some situations, for example, when it is placed in a subplot or when a color bar exists.]]></summary></entry><entry><title type="html">The “fact” function in Octave</title><link href="https://jihuan-tian.github.io/computer/2022/04/23/fact-function-in-octave.html" rel="alternate" type="text/html" title="The “fact” function in Octave" /><published>2022-04-23T00:00:00+08:00</published><updated>2022-04-23T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/23/fact-function-in-octave</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/23/fact-function-in-octave.html"><![CDATA[<p>The <code class="language-plaintext highlighter-rouge">fact</code> function in Octave displays an amazing and random fact about the world’s greatest hacker, who is Richard Stallman. For example,</p>

<blockquote>
  <p>Richard Stallman doesn’t sleep; he is compiling.</p>
</blockquote>

<p>After opening the definition of <code class="language-plaintext highlighter-rouge">fact</code>, we can see the verses are stored in the variable <code class="language-plaintext highlighter-rouge">wisdom</code>:</p>

<pre><code class="language-octave">persistent wisdom = ...
	   {
	    "Richard Stallman takes notes in binary.";
	    "Richard Stallman doesn't need sudo. I will make him a sandwich anyway.";
	    "Richard Stallman is my shephurd, and I am his GNU.";
	    "Richard Stallman doesn't wget, Richard Stallman wdemands!";
	    "Richard Stallman can touch MC Hammer.";
	    "Richard Stallman doesn't read web pages. They write to him.";
	    "Richard Stallman gets 9 bits to the byte.";
	    "Richard Stallman doesn't really believe in open software, because it's not free enough.";
	    "Richard Stallman can leave neutral or negative feedback on eBay.";
	    "Richard Stallman is the only man alive who can pronounce GNU the way it is meant to be pronounced.";
	    "Richard Stallman does not own a mobile phone because he can fashion a crude convex dish and shout into it at the exact resonant frequency of the ozone, causing a voice to seemingly come from the sky above his intended recipient.";
	    "Richard Stallman is so handsome that when he was young he was responsible for all other geeks not being able to get girls. This is why he has to cover his face with a thick layer of hair.";
	    "Some people check their computers for viruses. Viruses check their computers for Richard Stallman.";
	    "Richard Stallman memorises all his documents. In binary. He just types everything in whenever he needs a document.";
	    "When Richard Stallman makes a sudo command, he loses permissions.";
	    "Richard Stallman's beard is made of parentheses.";
	    "Richard Stallman's DNA is in binary.";
	    "Richard Stallman's nervous system is completely wireless.";
	    "Richard Stallman's brain accepts UNIX commands.";
	    "If Richard Stallman has 1 GB of RAM, and if you have 1 GB of RAM, Richard Stallman has more RAM than you.";
	    "Richard Stallman eats ethernet cables. That's why they invented wireless.";
	    "Richard Stallman has a katana. 'Nuff said.";
	    "Richard Stallman wrote a program that divides by zero.";
	    "Richard Stallman doesn't use zip drives; he just squeezes the hard drive.";
	    "Richard Stallman's compiler is afraid to report errors.";
	    "Richard Stallman wrote the compiler God used. The Big Bang was the Universe's first segfault.";
	    "Richard Stallman successfully compiled a kernel of popcorn.";
	    "Richard Stallman doesn't write programs; they write themselves out of reverence.";
	    "Richard Stallman can make infinite loops end.";
	    "Richard Stallman's anti-virus programs cures HIV.";
	    "Richard Stallman's computer doesn't have a clock; it defines what time it is.";
	    "Richard Stallman wrote a program to compute the last digit of pi.";
	    "Richard Stallman doesn't use web browsers. He sends a link to a daemon that uses wget to fetch the page and sends it back to him.";
	    "Richard Stallman can solve the halting problem... in polynomial time.";
	    "For Richard Stallman, polynomial time is O(1).";
	    "Richard Stallman didn't \"write\" Emacs or created it in his own image. Richard Stallman made Emacs an instance of himself.";
	    "Richard Stallman can coerce meaningful data from /dev/null.";
	    "Some people wear Linus Torvalds pyjamas to bed, Linus Torvalds wears Richard Stallman pyjamas.";
	    "There is no software development process, only a bunch of programs Richard Stallman allows to exist.";
	    "Richard Stallman spends his leisure time programming with Guile on GNU Hurd.";
	    "Richard Stallman's left and right hands are named \"(\" and \")\" ";
	    "Richard Stallman first words were actually syscalls.";
	    "Richard Stallman didn't create the singularity. He is the singularity. GNU/Linux is only the event horizon.";
	    "When Richard Stallman pipes to more, he gets less ";
	    "Richard Stallman never showers; he runs 'make clean'.";
	    "Richard Stallman needs neither mouse nor keyboard to operate his computer. He just stares it down until it does what he wants.";
	    "Richard Stallman didn't write the GPL. He is the GPL.";
	    "Richard Stallman's pinky finger is really a USB memory stick.";
	    "Richard Stallman called his operating system GNU because he created it before computers existed, when actual gnus were used for calculations.";
	    "In Soviet Russia, Richard Stallman is still Richard Stallman!";
	    "Richard Stallman's flute only plays free music.";
	    "When Richard Stallman uses floats, there are no rounding errors.";
	    "Richard Stallman wrote a program so powerful it knows the question to 42.";
	    "Richard Stallman released his own DNA under GNU FDL.";
	    "Richard Stallman knows the entire Wikipedia by heart, markup included.";
	    "Richard Stallman wrote the HAL9000 OS.";
	    "Richard Stallman's laser pointer is a lightsaber.";
	    "Richard Stallman never steps down; he shifts the universe up.";
	    "Richard Stallman doesn't maintain code; he stares at it until it fixes itself out of reverence.";
	    "Richard Stallman doesn't use an editor; he sets the fundamental constants of the universe so that a magnetic platter with his code on it evolves itself.";
	    "Richard Stallman doesn’t code; he dares the computer to not do his bidding.";
	    "Global warming is caused by Richard Stallman's rage towards non-free software.";
	    "Rather than being birthed like a normal child, Richard Stallman instead instantiated himself polymorphically. Shortly thereafter he grew a beard.";
	    "Richard Stallman discovered extra-terrestrial life but killed them because they distributed non-free software.";
	    "Richard Stallman doesn't evaluate expressions; expressions evaluate to Richard Stallman.";
	    "Richard Stallman can see Russia from his house.";
	    "Richard Stallman proved P=NP, twice!";
	    "Richard Stallman knows of an unfixed bug in TeX.";
	    "Richard Stallman can write a context-free grammar for C.";
	    "Richard Stallman can determine whether an arbitrary program will terminate.";
	    "Richard Stallman's computer has only two buttons. One is for guests.";
	    "Richard Stallman does not actually write programs. He comes up with a length and digit index in pi.";
	    "Richard Stallman's distributed version control system is a flamewar on Usenet.";
	    "Richard Stallman wrote the first version of Emacs on a typewriter.";
	    "Richard Stallman has no known weaknesses, except for a phobia against soap.";
	    "Richard Stallman is not affected by Godwin's Law.";
	    "Richard Stallman can write an anti-virus program that cures HIV. Too bad he never writes anti-virus programs.";
	    "Richard Stallman' facial hair is \"free as in beard\"";
	    "Richard Stallman is licensed under GPL, so you can clone him and redistribute copies so you can help your neighbor. For example a version that take a bath more often.";
	    "Richard Stallman doesn't code; he just travels around the world.";
	    "Richard Stallman was coded by himself in lisp with Emacs.";
	    "Richard Stallman doesn't eat McDonald's because the machine that kills the cows uses proprietary software.";
	    "There is no chin behind Richard Stallman's legendary beard, there is only another Emacs.";
	    "In an average living room there are 1,242 objects Richard Stallman could use to write an OS, including the room itself.";
	    "Vendor lock-in is when vendors lock themselves inside of a building out of fear of Richard Stallman's wrath.";
	    "When Richard Stallman executes ps -e, you show up.";
	    "When Richard Stallman gets angry he doesn't swear; he recurses.";
	    "On Richard Stallman's computer the bootloader is contained in his .emacs.";
	    "Richard Stallman can make any operating system free, free from drivers.";
	    "Richard Stallman programmed Chuck Norris.";
	    "Behind Richard Stallman's beard there is another fist, to code faster.";
	    "Richard Stallman won a Sudoku that started with only one number in each line.";
	    "Richard Stallman's brain compiles and runs C code.";
	    "Richard Stallman wrote the first version of Emacs using Emacs.";
	    "Richard Stallman never gonna give you up, never gonna let you down, never gonna run around and desert you, never gonna make you cry, never gonna say goodbye, never gonna tell a lie and hurt you.";
	    "Richard Stallman, upon reading these facts, didn't laugh at all. Instead, he complained that he is being linked to that dirty \"open source\" software. He also asked it to be changed to \"free software\", in order to raise awareness for software freedom in our society.";
	    "Richard Stallman has no problem using Emacs. He wrote it with his 4 hands.";
	    "Richard Stallman will revert the big rip by adding parenthesis to the dark matter.";
	    "When you make a Google search and it doesn't find the answer, Google gently consults Richard Stallman.";
	    "Richard Stallman's uptime is over 53 years. And counting up.";
	    "Richard Stallman's portable music player can play ogg and WMA, but is too afraid to invoke Richard Stallman's wrath by playing WMA. Ogg it is, then.";
	    "Richard Stallman will never die, but may some day go to /dev/null.";
	    "Richard Stallman once got swine flu, but it got cleansed by hereditary GPL and thus got assimilated.";
	    "Richard Stallman don't cut his hair because there are no GNU/Scissors.";
	    "Richard Stallman is the one who trims Chuck Norris beard. And he does it freely, of course.";
	    "Richard Stallman does not take bath, for the hydroelectric company uses proprietary software.";
	    "Agent Smith loves Richard Stallman's scent.";
	    "Richard Stallman is the One.";
	    "\"They can take our lives, but they can never take our freedom.\" -- William Wallace after a little talk with Richard Stallman.";
	    "Richard Stallman can connect to any brain using an Emacs ssh client.";
	    "Richard Stallman ported Emacs to Intel 4004 chip.";
	    "Richard Stallman did not write GNU Emacs, he simply read the source code from /dev/null.";
	    "Richard Stallman once used GDB to reverse-engineer Windows 7 into a free operating system - able to run on GNU Emacs!";
	    "Richard Stallman does not contribute to open source projects; open source projects contribute to Richard Stallman, and then call themselves free software projects.";
	    "Richard Stallman programmed himself before he could even exist";
	    "Richard Stallman can fill up /dev/null.";
	    "Richard Stallman is so zealous about privacy he has /dev/null as his home.";
	    "When Richard Stallman runs /bin/false, it returns \"true\".";
	    "Richard Stallman doesn't like money, because banks don't run on free software.";
	    "Richard Stallman uses GNU tar to compress air.";
	    "When Richard Stallman reports a bug, the bug prefers to squash itself instead of facing Richard Stallman's wrath.";
	    "There are no Windows in Richard Stallman's house... only Doors...";
	    "Richard Stallman doesn't like neither PCs-Intel nor Burger King... He prefers e-Macs...";
	    "Richard Stallman can use grep to find Jimmy Hoffa.";
	    "Richard Stallman made it possible to not absolutely abhor HPUX.";
	    "When Richard Stallman pours his alphabets cereal into a bowl, only G's, N's, and U's come out.";
	    "Richard Stallman is pronounced \"GNU slash Stallman\"";
	    "Richard Stallman doesn't mind if you read his mail as long as you don't delete it before he reads it.";
	    "Richard Stallman is just a guy who has strong principles and decided to follow them.";
	    "Richard Stallman knows that you don't have class because it is a keyword that he defined.";
	    "Richard Stallman doesn't need a qwerty/dvorak keyboard only two buttons \"1\" and \"0\" and his erect penis.";
	    "On the first day Richard Stallman said M-x create-light.";
	    "Richard Stallman once went out of scope for a while. The garbage collector never dared to touch him.";
	    "Richard Stallman does not compile; he closes his eyes, and see energy lines created between bit blocks by the compiler optimizations.";
	    "intx80 first calls Richard Stallman before calling sys_call.";
	    "Tron is actually a biographical story about Richard Stallman. The director decided to tone it down or audiences wouldn't find it believable.";
	    "Richard Stallman always wears a red shirt to make sure that whatever attacks his away-team has to go through him first.";
	    "kill -9 invokes Richard Stallman's rage against a process.";
	    "If Richard were to stumble upon stallmanfacts.com, he would find it a gnuisance.";
	    "Richard Stallman can telnet into Mordor.";
	    "sudo chown Richard:Stallman /all/your/base";
	    "Richard Stallman's nervous system is completely wireless.";
	    "Richard Stallman does not sleep. He yields.";
	    "Some people say M-x psychoanalyse-pinhead is a merely a program. Others say M-x psychoanalyse-pinhead *is* Richard Stallman. All I know is, Richard Stallman is The Stig.";
	    "If you execute Emacs backward it either undoes the industrial revolution or induces the rapture. But only Richard Stallman knows which.";
	    "If Richard Stallman's beard were ever trimmed, the clippings would re-marshal into an exact copy of Richard Stallman.";
	    "Richard Stallman never sleeps because he altered his own source to gain background garbage collection.";
	    "Richard Stallman's doctor can retrieve a blood sample via CVS.";
	    "Richard Stallman can touch this.";
	    "Because Richard Stallman's DNA is licensed under the FDL, his doctor can't draw his blood without violating HIPAA.";
	    "Richard Stallman can remove his own appendix, using only GDB.";
	    "Richard Stallman's DNA includes debugging symbols. But he doesn't need them.";
	    "Richard Stallman met Chuck Norris once. Chuck tried a roundhouse, but Richard bashed him in the skull.";
	    "Richard Stallman doesn't need to buy a bigger hard drive. He can compress data infinitely.";
	    "When Richard Stallman cannot take your call, his beard answers the phone for you.";
	    "The R in RMS stands for RMS.";
	    "Richard Stallman can parse HTML with regular expressions.";
	    "Richard Stallman's traceroute goes all the way through an infinite number of anonymous proxies back to the traffic's source.";
	    "Richard Stallman's beard is in fact not a just a beard, but a microprinted hard copy of Emacs source code. New patches must be checked against new hair growth before being approved.";
	    "In the beginning-of-buffer there was Richard Stallman.";
	    "The NOOP was created to give Richard Stallman some time to comb his beard.";
	    "Whenever Richard Stallman looks at a Windows computer, it segfaults. Whenever Richard Stallman doesn't look at a Windows computer, it segfaults.";
	    "Richard Stallman can walk on Windows!";
	    "After being unable to satisfy my wife for years, Richard Stallman was able to single-handedly unlock her orgasm within seconds and managed to write a texinfo manual minutes later for other users.";
	    "Richard Stallman's tabbed browser is a set to wget/telnet fg/bg processes.";
	    "There is no chin under Richard Stallman' beard. There's only another beard. Recursively.";
	    "Richard Stallman can chown anything! stallman@stallman~$ chown stallman:stallman Earth (for example)";
	    "Richard Stallman freed his beard so he can always check what's in it.";
	    "In the beginning was the Word, and the Word was with RMS, and the Word was GNU.";
	    "RMS means \"RMS means Stallman\"";
	    "Richard Stallman is the babelfish of his own speeches.";
	    "Richard Stallman wrote his own library and lives in it.";
	    "Richard Stallman found Waldo using grep in /dev/null";
	    "Richard Stallman doesn't sleep; he is compiling.";
	    "Richard Stallman will get Coca Cola to release their recipe under the GPL.";
	    "Richard Stallman doesn't change clothes. He makes case mods.";
	    "Richard Stallman compiled the first version of gcc with an hexadecimal editor.";
	    "Richard Stallman will be the last guest on Linux Outlaws.";
	    "Richard Stallman calculates the universe's entropy by exploiting forced stack overflows.";
	    "Richard Stallman's consciousness will one day become the singularity, which will create Deep Thought, and answer the meaning of life, the universe and everything.";
	    "C is actually written in RMS.";
	    "Richard Stallman can write software that does not have a buffer overflow when counting money lost by Jerome Kerviel.";
	    "There were no double rainbows before Richard Stallman.";
	    "Chuck Norris had to shorten his beard in the presence of Richard Stallman because two beards that awesome, so close would segfault the universe (again).";
	    "RMS is Titanic.";
	    "Richard Stallman is the answer to the Turing Test.";
	    "Richard Stallman's beard makes ads for Gillette and Braun appear.";
	    "for i = 1 to Stallman will never stop.";
	    "\"RMS\" stands for \"RMS Makes Software\"";
	    "Whenever someone writes a \"Hello, world\" program, Richard Stallman says \"Hello\" back.";
	    "Richard Stallman wasn't born. He was compiled from source.";
	    "Richard Stallman has a URL tattooed on the left side of his chest where you can download his genetic code.";
	    "The GNU command line idiom that Richard Stallman never needs: \"date | more\"";
	    "Richard Stallman's toe cheese is aged to perfection.";
	    "Richard Stallman doesn't always run an OS kernel, but when he does he prefers GNU/Hurd. He is... the most interesting hacker in the world. Stay free, my friends.";
	    "When Richard Stallman gets hungry, he just picks debris from his foot and eats it.";
	    "Richard Stallman can GPL your code just by looking at it funny.";
	    "Richard Stallman loves birds. Birds make auricular love to Richard Stallman.";
	    "Richard Stallman is so free that the primitive recursive function for computing his liberty causes a stack overflow.";
	    "GNU Hurd is taking more than twenty years to develop because Richard Stallman is using a programming language comprised entirely of different lengths of time.";
	    "Richard Stallman's beard contains Richard Stallman, whose beard contains Richard Stallman....";
	    "Richard Stallman could have had a Google Plus account in 2010. Too bad he didn't want it.";
	    "Richard Stallman pipes the Emacs binaries to /dev/dsp before he goes to sleep.";
	    "When Richard Stallman counted his fingers as a kid, he always started with 0.";
	    "When Richard Stallman's computer gets a virus, he simply applies a GPL license to it which converts the whole botnet to Linux. I mean, GNU/Linux.";
	    "Richard Stallman's beard trimmings can cure cancer. Too bad he never shaves.";
	    "Richard Stallman's doesn't kill a process; he just dares it to stay running.";
	    "Richard Stallman exists because he compiled himself into being.";
	    "Richard Stallman's first words were in binary. When they couldn't understand him, he wrote a parser.";
	    "Richard Stallman doesn't need any codecs, he just opens a multimedia file with Emacs, and reads the bytes of the file as plain text. He then performs all the necessary decoding in his mind. But he refuses to decode files encrypted with DRM, although his mind is able to.";
	    "Richard Stallman was right. Sadly.";
	    "Richard Stallman can wiretap the NSA.";
	    "This is how Richard Stallman created Emacs: http://stallman.org/photos/rms-working/img_0631.jpg";
	    "Join Richard Stallman now and share the software, you'll be a free hacker, you'll be free!";
	    "Richard Stallman has not agreed to the terms and conditions and privacy policy because only he can actually read all of it.";
	    "Richard Stallman knows how of a backdoor to AES, but he respects your freedom and privacy too much to actually use it.";
	    "Richard Stallman will never get tired of being mocked for the foot cheese incident.";
	    "You like to release non-free software around Richard Stallman? I too like to live dangerously...";
	    "Yeah, if could just go ahead and make all software free for Richard Stallman, that'd be great, thanks.";
	    "Richard Stallman knows exactly what you mean when you talk about the cloud. But do you?";
	    "Richard Stallman satisfies Greenspun's Tenth Rule of programming, since his DNA also contains a complete implementation of all of Common Lisp.";
	    "Richard Stallman can violate the GPL. In a vulgar display of power, he once did so with the Emacs source code, but he undid the violation before most people noticed.";
	    "Good guy Richard Stallman does not try to shake you down for money. He will just kindly ask you to comply with the GPL.";
	    "Richard Stallman is in fact also a little sad that Steve Jobs is gone because it has diminished the size of the loyal opposition.";
	    "Richard Stallman can release LLVM and clang under the GPL.";
	    "No, really, Richard Stallman has a katana.";
	    "Every day Richard Stallman finds at least fifteen things in the world to rage about. You can read his findings here: http://stallman.org/archives/polnotes.html"
	    "Some of these Richard Stallman facts are completely true. Seriously.";
	   };
</code></pre>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Octave" /><summary type="html"><![CDATA[The fact function in Octave displays an amazing and random fact about the world’s greatest hacker, who is Richard Stallman. For example,]]></summary></entry><entry><title type="html">Listening to English audio with lyrics on Linux</title><link href="https://jihuan-tian.github.io/computer/2022/04/16/listening-to-english-audio-with-lyrics-on-linux.html" rel="alternate" type="text/html" title="Listening to English audio with lyrics on Linux" /><published>2022-04-16T00:00:00+08:00</published><updated>2022-04-16T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/16/listening-to-english-audio-with-lyrics-on-linux</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/16/listening-to-english-audio-with-lyrics-on-linux.html"><![CDATA[<p>To study English from movies is consistent with the methodology of praxis. GNU/Linux provides us a bunch of tools to extract audio and subtitle from videos as well as play the music file with scrolling lyrics. Using this study mode, we can focus on the English pronunciation, vocabulary and wording adopted in the script.</p>

<h1 id="generate-lyrics-from-subtitle">Generate lyrics from subtitle</h1>

<ol>
  <li>
    <p>Extract the audio from a video using <code class="language-plaintext highlighter-rouge">ffmpeg</code>, for example</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ffmpeg <span class="nt">-i</span> movie-file-name <span class="nt">-vn</span> <span class="nt">-ar</span> 44100 <span class="nt">-ac</span> 2 <span class="nt">-b</span>:a 192k <span class="nt">-f</span> mp3 movie-audio.mp3
</code></pre></div>    </div>

    <p>Here, <code class="language-plaintext highlighter-rouge">-i</code> specifies the input video file name, <code class="language-plaintext highlighter-rouge">-vn</code> disables the video, <code class="language-plaintext highlighter-rouge">-ar</code> specifies the audio sampling frequency in Hz, <code class="language-plaintext highlighter-rouge">-ac</code> specifies the number of audio channels, <code class="language-plaintext highlighter-rouge">-b:a</code> sets the audio bitrate in kbit/s and <code class="language-plaintext highlighter-rouge">-f</code> specifies the file format.</p>
  </li>
  <li>
    <p>Extract the embedded subtitle from <code class="language-plaintext highlighter-rouge">mkv</code></p>

    <p>Install <code class="language-plaintext highlighter-rouge">mkvtoolnix</code> and <code class="language-plaintext highlighter-rouge">mkvtoolnix-gui</code> using <code class="language-plaintext highlighter-rouge">apt-get</code>. After opening a <code class="language-plaintext highlighter-rouge">mkv</code> file in <code class="language-plaintext highlighter-rouge">mkvtoolnix-gui</code>, select the English subtitle only and export it as a <code class="language-plaintext highlighter-rouge">mks</code> file. If the subtitle is an independent file, this step can be skipped.</p>

    <p><img src="/figures/Screenshot_20220416_mkvtoolnix.png" alt="mkvtoolnix-gui" /></p>
  </li>
  <li>
    <p>Convert the subtitle file to lyrics using <code class="language-plaintext highlighter-rouge">ffmpeg</code></p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ffmpeg <span class="nt">-i</span> subtitle-file-name subtitle.lrc
</code></pre></div>    </div>
  </li>
</ol>

<h1 id="compile-and-install-the-tool-for-displaying-lyrics">Compile and install the tool for displaying lyrics</h1>

<ol>
  <li>
    <p>Clone <code class="language-plaintext highlighter-rouge">osdlyrics</code> from GitHub</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> git clone https://github.com/osdlyrics/osdlyrics.git
</code></pre></div>    </div>
  </li>
  <li>Install the following dependencies using <code class="language-plaintext highlighter-rouge">apt-get</code>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">intltool</code></li>
      <li><code class="language-plaintext highlighter-rouge">libdbus-glib-1-dev</code> and <code class="language-plaintext highlighter-rouge">libdbus-glib-1-dev-bin</code></li>
      <li><code class="language-plaintext highlighter-rouge">python3-future</code> and <code class="language-plaintext highlighter-rouge">python3-pycurl</code></li>
    </ul>
  </li>
  <li>
    <p>Enter the cloned directory, compile and install <code class="language-plaintext highlighter-rouge">osdlyrics</code>.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code> ./autogen.sh
 ./configure <span class="nv">PYTHON</span><span class="o">=</span>/usr/bin/python3
 make <span class="nt">-j4</span>
 <span class="nb">sudo </span>make <span class="nb">install</span>
</code></pre></div>    </div>

    <p>However, after the installation, <code class="language-plaintext highlighter-rouge">osdlyrics</code> cannot be started reporting the following message, which indicates the error is caused by <code class="language-plaintext highlighter-rouge">osdlyrics-daemon</code>.</p>

    <blockquote>
      <p><em>Error</em>: in function _start_daemon_cb: ol_main.c[769]
Unable to start daemon: GDBus.Error:org.freedesktop.DBus.Error.Spawn.ChildExited: Process org.osdlyrics.Daemon exited with status 1</p>
    </blockquote>

    <p>By manually running <code class="language-plaintext highlighter-rouge">osdlyrics-daemon</code>, we can see that the Python module <code class="language-plaintext highlighter-rouge">osdlyrics</code> cannot be found, even though it has been installed to <code class="language-plaintext highlighter-rouge">/usr/local/lib/python3.7/site-packages</code>. This is because the default path for searching packages by Python 3.7 should be <code class="language-plaintext highlighter-rouge">/usr/local/lib/python3.7/dist-packages</code> instead of <code class="language-plaintext highlighter-rouge">...site-packages</code>. Hence, creating a symbolic link under this path which points to <code class="language-plaintext highlighter-rouge">/usr/local/lib/python3.7/site-packages/osdlyrics</code> solves the problem.</p>

    <blockquote>
      <p>Traceback (most recent call last):
  File “/usr/local/lib/osdlyrics/daemon/main.py”, line 27, in <module>
    from osdlyrics import PACKAGE_VERSION
ModuleNotFoundError: No module named 'osdlyrics'</module></p>
    </blockquote>
  </li>
  <li>
    <p>Run <code class="language-plaintext highlighter-rouge">osdlyrics</code> from the command line and select <code class="language-plaintext highlighter-rouge">VLC</code> as the associated music player. Even though my favorite music player <code class="language-plaintext highlighter-rouge">Audacious</code> is claimed to be supported, it actually does not work properly with <code class="language-plaintext highlighter-rouge">osdlyrics</code> at the moment. The command used by <code class="language-plaintext highlighter-rouge">osdlyrics</code> to start <code class="language-plaintext highlighter-rouge">VLC</code> is</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> /usr/bin/vlc --started-from-file %U
</code></pre></div>    </div>
  </li>
</ol>

<p>Now the English movie audio can be played with a synchronously scrolling lyrics and a snapshot is given below. N.B. We can use <code class="language-plaintext highlighter-rouge">VLC</code>’s <code class="language-plaintext highlighter-rouge">A-B</code> mode to repeatedly listen to a fragment, which is very helpful for us to imitate the original pronunciation.</p>

<p align="center"><img src="/figures/Screenshot_20220415_vlc-osdlyrics.png" alt="Scrolling lyrics" /></p>
<p align="center">Scrolling lyrics</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="英语学习" /><category term="Linux" /><category term="multimedia" /><category term="ffmpeg" /><summary type="html"><![CDATA[To study English from movies is consistent with the methodology of praxis. GNU/Linux provides us a bunch of tools to extract audio and subtitle from videos as well as play the music file with scrolling lyrics. Using this study mode, we can focus on the English pronunciation, vocabulary and wording adopted in the script.]]></summary></entry><entry><title type="html">Define auto-mode-alist for CMakeLists.txt</title><link href="https://jihuan-tian.github.io/computer/2022/04/15/define-auto-mode-alist-for-cmakelists.html" rel="alternate" type="text/html" title="Define auto-mode-alist for CMakeLists.txt" /><published>2022-04-15T00:00:00+08:00</published><updated>2022-04-15T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/15/define-auto-mode-alist-for-cmakelists</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/15/define-auto-mode-alist-for-cmakelists.html"><![CDATA[<p>According to <a href="https://www.emacswiki.org/emacs/AutoModeAlist">here</a>, <code class="language-plaintext highlighter-rouge">\'</code> matches the end of a string, while <code class="language-plaintext highlighter-rouge">$</code> matches the empty string before a newline. Thus, <code class="language-plaintext highlighter-rouge">$</code> may lead to unexpected behavior when dealing with filenames containing newlines.</p>

<p>Therefore, <code class="language-plaintext highlighter-rouge">auto-mode-alist</code> should be configured like this:</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'auto-mode-alist</span> <span class="o">'</span><span class="p">(</span><span class="s">"\\.xml\\'"</span><span class="o">.</span>  <span class="nv">sgml-mode</span><span class="p">))</span>
</code></pre></div></div>

<p>The association of <code class="language-plaintext highlighter-rouge">cmake-mode</code> to <code class="language-plaintext highlighter-rouge">CMakeLists.txt</code> has already been defined during the loading of the package <code class="language-plaintext highlighter-rouge">cmake-mode</code>. Since this package was installed via <code class="language-plaintext highlighter-rouge">list-packages</code>, it has been added to the list variable <code class="language-plaintext highlighter-rouge">package-selected-packages</code> in <code class="language-plaintext highlighter-rouge">custom-set-variables</code> as below.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nv">custom-set-variables</span>
  <span class="o">'</span><span class="p">(</span><span class="nv">package-selected-packages</span>
   <span class="p">(</span><span class="k">quote</span>
    <span class="p">(</span><span class="o">...</span> <span class="nv">cmake-font-lock</span> <span class="nv">cmake-ide</span> <span class="nv">cmake-mode</span> <span class="nv">cmake-project</span> <span class="o">...</span><span class="p">))))</span>
</code></pre></div></div>

<p>Therefore, by checking the value of <code class="language-plaintext highlighter-rouge">auto-mode-alist</code>, we can see this item:</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="s">"CMakeLists\\.txt\\'"</span> <span class="o">.</span> <span class="nv">cmake-mode</span><span class="p">)</span>
</code></pre></div></div>

<p>Because those variables configured by <code class="language-plaintext highlighter-rouge">custom-set-variables</code> take effect before the executation of any lines of code in <code class="language-plaintext highlighter-rouge">~/.emacs</code>, to prevent the association of the <code class="language-plaintext highlighter-rouge">text-mode</code> to <code class="language-plaintext highlighter-rouge">*.txt</code> files from taking priority over the configuration for <code class="language-plaintext highlighter-rouge">CMakeLists.txt</code> in <code class="language-plaintext highlighter-rouge">auto-mode-alist</code>, we need to append further “major mode-file type” association items to the end of <code class="language-plaintext highlighter-rouge">auto-mode-alist</code>. That’s why the fourth argument of <code class="language-plaintext highlighter-rouge">add-to-list</code> as below is set to <code class="language-plaintext highlighter-rouge">t</code>.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="nb">mapcar</span>
 <span class="p">(</span><span class="k">function</span> <span class="p">(</span><span class="k">lambda</span> <span class="p">(</span><span class="nv">setting</span><span class="p">)</span>
	     <span class="p">(</span><span class="nv">add-to-list</span> <span class="ss">'auto-mode-alist</span> <span class="nv">setting</span> <span class="no">t</span><span class="p">)))</span>
 <span class="o">'</span><span class="p">((</span><span class="s">"\\.xml\\'"</span><span class="o">.</span>  <span class="nv">sgml-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.bash\\'"</span> <span class="o">.</span> <span class="nv">sh-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.rdf\\'"</span><span class="o">.</span>  <span class="nv">sgml-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.session\\'"</span> <span class="o">.</span> <span class="nv">emacs-lisp-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.h\\'"</span> <span class="o">.</span> <span class="nv">c++-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.l\\'"</span> <span class="o">.</span> <span class="nv">c-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.css\\'"</span> <span class="o">.</span> <span class="nv">css-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.org\\'"</span> <span class="o">.</span> <span class="nv">org-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.cfm\\'"</span> <span class="o">.</span> <span class="nv">html-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"gnus"</span> <span class="o">.</span> <span class="nv">emacs-lisp-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.gpl\\'"</span> <span class="o">.</span> <span class="nv">gnuplot-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.txt\\'"</span> <span class="o">.</span> <span class="nv">text-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.idl\\'"</span> <span class="o">.</span> <span class="nv">idl-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.m\\'"</span> <span class="o">.</span> <span class="nv">octave-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.scm\\'"</span> <span class="o">.</span> <span class="nv">scheme-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.mod\\'"</span> <span class="o">.</span> <span class="nv">rapid-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.bas\\'"</span> <span class="o">.</span> <span class="nv">visual-basic-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.ino\\'"</span> <span class="o">.</span> <span class="nv">c++-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.max\\'"</span> <span class="o">.</span> <span class="nv">maxima-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.mac\\'"</span> <span class="o">.</span> <span class="nv">maxima-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.dem\\'"</span> <span class="o">.</span> <span class="nv">maxima-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"configure\\.in\\'"</span> <span class="o">.</span> <span class="nv">m4-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.m4\\'"</span> <span class="o">.</span> <span class="nv">m4-mode</span><span class="p">)</span>
   <span class="p">(</span><span class="s">"\\.proto\\'"</span> <span class="o">.</span> <span class="nv">protobuf-mode</span><span class="p">)))</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="CMake" /><summary type="html"><![CDATA[According to here, \' matches the end of a string, while $ matches the empty string before a newline. Thus, $ may lead to unexpected behavior when dealing with filenames containing newlines.]]></summary></entry><entry><title type="html">Install software from official websites instead of Linux release</title><link href="https://jihuan-tian.github.io/computer/2022/04/05/install-software-from-official-websites-instead-of-linux-release.html" rel="alternate" type="text/html" title="Install software from official websites instead of Linux release" /><published>2022-04-05T00:00:00+08:00</published><updated>2022-04-05T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/04/05/install-software-from-official-websites-instead-of-linux-release</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/04/05/install-software-from-official-websites-instead-of-linux-release.html"><![CDATA[<p>The default firefox-esr version 91.7.0 on Debian GNU/Linux 10 (buster) often crashes accidentally, especially when I’m watching online videos or visiting web pages containing a lot of images. Moreover, Firefox may periodically gets stuck and occupies 100% of the CPU resource, which will further cause the X11 Window system to freeze with the only exception that the mouse pointer is still movable. Even though I can remotely login via SSH and kill the process for Firefox, there will be no more response from the X11 Windows system anymore and the Linux system can neither be shut down nor rebooted. The final rescue is to press the reboot button on the power case.</p>

<p>Today, I manually downloaded and installed the newest Firefox version 98.0.2 from Mozilla’s official website. To migrate my previous configurations, customizations and installed extensions in Firefox, I visited the address <code class="language-plaintext highlighter-rouge">about:profiles</code> in Firefox, where all the user profiles stored under the folder <code class="language-plaintext highlighter-rouge">~/.mozilla/firefox/</code> were listed. Then I selected my old profile and restarted the browser. Except that the <code class="language-plaintext highlighter-rouge">SwitchyOmega</code> extension did not function properly and needed a reinstallation, everything had been migrated smoothly.</p>

<p>We know that open source software packages evolute much faster than years before due to increased contributors and growing community. During this process, these software packages are gradually forming their own ecological systems, such as package management tool, mirror sites, source code hosting services. To name a few, there are Emacs with Elpa, TeX with CTAN, Python with pip, Ruby with gem, as well as lots of packages hosted on GitHub. Then it is easy to understand that the curation and incorporation of these software packages into the official Linux release cannot keep up with the pace of their updates. Therefore, I think we will install and update more and more software packages independently from their official websites or hosting mirrors instead of adopting the default and usually old and unstable versions distributed with the Linux release, even though the release is called <em>stable</em>. This phenomenon can be considered as a continuation of the trend from cathedral to bazaar.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Linux" /><category term="Firefox" /><summary type="html"><![CDATA[The default firefox-esr version 91.7.0 on Debian GNU/Linux 10 (buster) often crashes accidentally, especially when I’m watching online videos or visiting web pages containing a lot of images. Moreover, Firefox may periodically gets stuck and occupies 100% of the CPU resource, which will further cause the X11 Window system to freeze with the only exception that the mouse pointer is still movable. Even though I can remotely login via SSH and kill the process for Firefox, there will be no more response from the X11 Windows system anymore and the Linux system can neither be shut down nor rebooted. The final rescue is to press the reboot button on the power case.]]></summary></entry><entry><title type="html">Customize the font in Firefox reader mode</title><link href="https://jihuan-tian.github.io/computer/2022/03/24/customize-the-font-in-firefox-reader-mode.html" rel="alternate" type="text/html" title="Customize the font in Firefox reader mode" /><published>2022-03-24T00:00:00+08:00</published><updated>2022-03-24T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/03/24/customize-the-font-in-firefox-reader-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/03/24/customize-the-font-in-firefox-reader-mode.html"><![CDATA[<p>Customizing the font family used in Firefox reader mode is helpful to increase online reading experience. This can be achieved according to the following procedure.</p>

<ol>
  <li>Open the address <code class="language-plaintext highlighter-rouge">about:support</code> in Firefox and open the profile folder.
<img src="/figures/Screenshot_20220324_083107-firefox-about-support.png" alt="Open Firefox user profile folder from about:support" />
    <p align="center">Fig. Open Firefox user profile folder from about:support</p>
  </li>
  <li>If the folder <code class="language-plaintext highlighter-rouge">chrome</code> does not exist, create it. Then create a CSS file <code class="language-plaintext highlighter-rouge">userContent.css</code> in the <code class="language-plaintext highlighter-rouge">chrome</code> folder with the following contents as example, where I’ve adopted my favorite font <code class="language-plaintext highlighter-rouge">KaiTi</code> for reading Chinese articles and <code class="language-plaintext highlighter-rouge">Noto Serif</code> for English contents.
    <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.moz-reader-content</span> <span class="p">{</span> 
  <span class="nl">font-family</span><span class="p">:</span> <span class="s1">"KaiTi"</span><span class="p">,</span> <span class="s1">"Noto Serif"</span><span class="p">,</span> <span class="s1">"Times New Roman"</span><span class="p">,</span> <span class="nb">serif</span><span class="p">;</span>
<span class="p">}</span> 
</code></pre></div>    </div>
  </li>
  <li>Open <code class="language-plaintext highlighter-rouge">about:config</code> in Firefox and change the option <code class="language-plaintext highlighter-rouge">toolkit.legacyUserProfileCustomizations.stylesheets</code> to <code class="language-plaintext highlighter-rouge">true</code>.</li>
  <li>Restart Firefox to take effect.</li>
</ol>

<p>If you want, more styles and features can be customized with the help of the Developer Tool in Firefox.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="ergonomics" /><category term="eyes-protection" /><category term="Firefox" /><summary type="html"><![CDATA[Customizing the font family used in Firefox reader mode is helpful to increase online reading experience. This can be achieved according to the following procedure.]]></summary></entry><entry><title type="html">Commit all modified files to Git</title><link href="https://jihuan-tian.github.io/computer/2022/02/25/Commit-all-modified-files-to-Git.html" rel="alternate" type="text/html" title="Commit all modified files to Git" /><published>2022-02-25T09:47:00+08:00</published><updated>2022-02-25T09:47:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2022/02/25/Commit-all-modified-files-to-Git</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2022/02/25/Commit-all-modified-files-to-Git.html"><![CDATA[<p>Following these steps will do the work.</p>

<ol>
  <li>Use <code class="language-plaintext highlighter-rouge">git status</code>  to check the file status.</li>
  <li>Use <code class="language-plaintext highlighter-rouge">grep</code> to search for the <code class="language-plaintext highlighter-rouge">modified</code> keyword.</li>
  <li>Extract the second column by using <code class="language-plaintext highlighter-rouge">cut</code> with the delimiter <code class="language-plaintext highlighter-rouge">:</code>.</li>
  <li>Remove surplus white spaces in front of the data field by using <code class="language-plaintext highlighter-rouge">sed</code>.</li>
  <li>Connect the above commands in sequence via pipes.</li>
  <li>Quote the command list using ``, the result of which will be passed as the argument of <code class="language-plaintext highlighter-rouge">git add</code>.</li>
</ol>

<p>The train of commands looks like this.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="sb">`</span>git status | <span class="nb">grep </span>modified | <span class="nb">cut</span> <span class="nt">-d</span> <span class="s2">":"</span> <span class="nt">-f</span> 2 | <span class="nb">sed</span> <span class="nt">-e</span> <span class="s1">'s/^\s*//'</span><span class="sb">`</span>
</code></pre></div></div>

<p>Similarly, this method can be adapted for committing files in other status.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Git" /><summary type="html"><![CDATA[Following these steps will do the work.]]></summary></entry><entry><title type="html">How to create relative hyperlinks in Org mode?</title><link href="https://jihuan-tian.github.io/computer/2021/02/28/how-to-create-relative-hyperlinks-in-org-mode.html" rel="alternate" type="text/html" title="How to create relative hyperlinks in Org mode?" /><published>2021-02-28T00:00:00+08:00</published><updated>2021-02-28T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2021/02/28/how-to-create-relative-hyperlinks-in-org-mode</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2021/02/28/how-to-create-relative-hyperlinks-in-org-mode.html"><![CDATA[<p>Relative hyperlinks are indispensable for maintaining a bunch of inter-connected documents that have a fixed relative folder structure, when the whole folder tree is to be mounted at different locations on different computers. In Emacs Org mode, the fast key to insert a hyperlink is <strong>C-c C-l</strong>, which is bound to the function <strong>org-insert-link</strong>. However, according to its documentation below, we can only input a relative path at the prompt in the mini-buffer by pressing the key combination <strong>C-u C-c C-l</strong>, while the internal representation of the hyperlink still adopts an absolute path. This is not what I want.</p>

<blockquote>
  <p>With a C-u prefix, prompts for a file to link to. The file name can be selected using completion. The path to the file will be relative to the current directory if the file is in the current directory or a subdirectory. Otherwise, the link will be the absolute path as completed in the minibuffer (i.e. normally ~/path/to/file). You can configure this behavior using the option `org-link-file-path-type’.</p>
</blockquote>

<p>By further checking the documentation of the variable <strong>org-link-file-path-type</strong> mentioned above, we know that it is this variable that actually controls the internal hyperlink format. Valid values of this variable are:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">relative</code>: the path name in file links is stored relative to the current directory;</li>
  <li><code class="language-plaintext highlighter-rouge">absolute</code>: absolute path name is adopted, while the home directory is still represented as <code class="language-plaintext highlighter-rouge">~/</code>;</li>
  <li><code class="language-plaintext highlighter-rouge">noabbrev</code>: same as <code class="language-plaintext highlighter-rouge">absolute</code> but there is no abbreviation for the home directory;</li>
  <li><code class="language-plaintext highlighter-rouge">adaptive</code>: use relative path for files in the current directory and subdirectories of it, while for other files, use an absolute path.</li>
</ul>

<p>Then, the configuration added to <code class="language-plaintext highlighter-rouge">~/.emacs</code> for enabling relative hyperlinks in Org mode is as below.</p>

<div class="language-lisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">org-link-file-path-type</span> <span class="ss">'relative</span><span class="p">)</span>
</code></pre></div></div>

<p>Read more</p>
<ul>
  <li><a href="/computer/2022/06/05/create-hyperlinks-in-org-mode.html">Create hyperlinks in Org mode</a></li>
</ul>

<p>Backlinks: <a href="/computer/2023/03/27/copy-and-paste-relative-links-across-different-files-in-emacs.html">《Copy and paste relative links across different files in Emacs》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Emacs" /><category term="Org-mode" /><category term="知识联接" /><summary type="html"><![CDATA[Relative hyperlinks are indispensable for maintaining a bunch of inter-connected documents that have a fixed relative folder structure, when the whole folder tree is to be mounted at different locations on different computers. In Emacs Org mode, the fast key to insert a hyperlink is C-c C-l, which is bound to the function org-insert-link. However, according to its documentation below, we can only input a relative path at the prompt in the mini-buffer by pressing the key combination C-u C-c C-l, while the internal representation of the hyperlink still adopts an absolute path. This is not what I want.]]></summary></entry><entry><title type="html">LibreOffice的特点与优势</title><link href="https://jihuan-tian.github.io/computer/2020/11/14/LibreOffice%E7%9A%84%E7%89%B9%E7%82%B9%E4%B8%8E%E4%BC%98%E5%8A%BF.html" rel="alternate" type="text/html" title="LibreOffice的特点与优势" /><published>2020-11-14T00:00:00+08:00</published><updated>2020-11-14T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2020/11/14/LibreOffice%E7%9A%84%E7%89%B9%E7%82%B9%E4%B8%8E%E4%BC%98%E5%8A%BF</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2020/11/14/LibreOffice%E7%9A%84%E7%89%B9%E7%82%B9%E4%B8%8E%E4%BC%98%E5%8A%BF.html"><![CDATA[<h1 class="no_toc" id="table-of-contents">Table of contents</h1>

<ul id="markdown-toc">
  <li><a href="#充分使用各组件的导航栏" id="markdown-toc-充分使用各组件的导航栏">充分使用各组件的导航栏</a></li>
  <li><a href="#用好各组件中的样式单" id="markdown-toc-用好各组件中的样式单">用好各组件中的样式单</a></li>
  <li><a href="#在writer中使用文档超链接" id="markdown-toc-在writer中使用文档超链接">在Writer中使用文档超链接</a></li>
  <li><a href="#使用draw的高级绘图功能" id="markdown-toc-使用draw的高级绘图功能">使用Draw的高级绘图功能</a></li>
  <li><a href="#利用libreoffice的功能扩展" id="markdown-toc-利用libreoffice的功能扩展">利用LibreOffice的功能扩展</a></li>
</ul>

<p>继承自OpenOffice、诞生于2011年的LibreOffice经过多年的发展，如今将其作为微软Office办公套件的免费替代是完全可行且更胜一筹的。LibreOffice包含了Writer（文字处理）、Draw（矢量绘图）、Impress（演示文稿）、Calc（电子表格）、Base（数据库）、Math（数学公式）六个组件。本文列举出除Base与Math外各组件的主要特点和相对于微软Office的优势。</p>

<h1 id="充分使用各组件的导航栏">充分使用各组件的导航栏</h1>

<p>LibreOffice的所有组件均具有方便对文档内容与所包含对象实现统览、管理和快捷跳转的导航栏。例如，Writer中的大纲结构、Calc中的各个工作表、文档中包含的图片、评论、表格、超链接均可以在导航栏中显示。</p>

<p align="center"><img src="/figures/p77551865.jpg" alt="图1 LibreOffice Writer导航栏" /></p>
<p align="center">图1 LibreOffice Writer导航栏</p>

<p align="center"><img src="/figures/p77551866.jpg" alt="图2 LibreOffice Draw导航栏" /></p>
<p align="center">图2 LibreOffice Draw导航栏</p>

<h1 id="用好各组件中的样式单">用好各组件中的样式单</h1>

<p>将文档内容与其样式分离，是撰写结构化文档时应当采用的基本理念。采用这一方法的好处是，当我们在撰写文档内容的过程中，可以暂时地将其应当呈现的样式搁置一边，而完全专注于文档内在思想的提炼与逻辑链条的组织。有了清晰的文档结构，我们就可以给其中具有不同内容含义或逻辑功能的文本模块赋予不同的样式单名称，例如“标题”、“章”、“小节”、“注释”、“强调”等。我们要在完成了文档内容的撰写与编纂后，再去设计并定义这些样式单应该具有的属性，包括大小、间距、字体、缩进、颜色等。同时，我们还可以为同一个文档设计和制作出多份不同的样式单，以便适配不同的发布与出版目的，例如，用于演讲、作为讲义或技术报告等。</p>

<p>可以看出，采用文档内容与样式分离的方法，因为可以让我们更专注于内容本身，从而所产出文档内容的质量也就更高。而且，与以往随手用鼠标选择文本来设置样式以及在写作的过程中因反复调整样式而严重影响思路的工作方式相比，将文档内容与样式分离能够大大提升我们的写作效率。</p>

<p>在我们认识到将文档内容与样式分离的重要性之后，我们就可以发现LibreOffice已经全面地提供了样式单功能——不只是在Writer中，就连在Impress、Draw、Calc中都可以用样式单来组织与控制图形元素与表格内容的逻辑与样式。仅凭这一点，LibreOffice就足以成为我们的主力办公软件了。</p>

<p align="center"><img src="/figures/p77551868.jpg" alt="图3 LibreOffice Draw样式单" /></p>
<p align="center">图3 LibreOffice Draw样式单</p>

<h1 id="在writer中使用文档超链接">在Writer中使用文档超链接</h1>

<p>使用LibreOffice Writer可在文档中插入相对路径的超链接，并且可以精确地定位至文档中具体的某一章节或某个书签，从而可以将多个文档相互关联起来，像是浏览Wikipedia那样阅读我们自己的文档集合。由于超链接可以创建为基于文件系统的相对路径，所以我们只要保证文件目录结构自身的一致性，就可以将整个文件树迁移或者同步至不同的设备上并保证链接始终有效。更详细的介绍可以参考我的这篇文章《<a href="/computer/methodology/2020/07/27/%E4%BD%BF%E7%94%A8LibreOffice-Writer%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.html">使用LibreOffice Writer构建个人日志系统</a>》。</p>

<h1 id="使用draw的高级绘图功能">使用Draw的高级绘图功能</h1>

<p>Draw的绘图功能相对于微软的Visio更为强大，几乎可以赶上专业的矢量绘图软件Inkscape了。而且Draw的操作相比Inkscape更为简单。例如，Draw提供了缩放、旋转、平移等图形变换操作，且允许用户选择变换的基准点。这一点对于在作图过程中保持已创建图形的基准位置不变与对齐关系是非常有用的。</p>

<p>例如，一个常见的情况就是，我们需要调整一组居中对齐的图形中某一个图形对象的宽度。由于该对象默认的变换基准点是左上角，所以在调整了其宽度后，它与其他对象之间居中对齐的关系就会被破坏。而若想在这个图形被缩放后仍旧保持居中，我们在LibreOffice中将变换的基准点选为该图形的中心即可。</p>

<p align="center"><img src="/figures/p77551867.jpg" alt="图4 在LibreOffice Draw中选择图形的缩放基准点" /></p>
<p align="center">图4 在LibreOffice Draw中选择图形的缩放基准点</p>

<p>再者，在对图形进行旋转操作的时候，也可以任意指定旋转中心，这样就可以非常方便快捷地生成一组沿圆周均匀分布的图形了。</p>

<p align="center"><img src="/figures/p77551869.jpg" alt="图5 在LibreOffice Draw中选择图形的旋转基准点" /></p>
<p align="center">图5 在LibreOffice Draw中选择图形的旋转基准点</p>

<p>此外，Draw所提供的贝塞尔曲线编辑、图形连接线的粘接点编辑、多个二维图形的布尔操作、由二维图形生成拉伸与旋转三维实体等功能也非常强大、实用，读者可以尝试一下。</p>

<h1 id="利用libreoffice的功能扩展">利用LibreOffice的功能扩展</h1>

<p>在LibreOffice的<a href="https://extensions.libreoffice.org/">官方网站</a>上提供了非常丰富的扩展组件可供我们选择和安装。常用的扩展包括：</p>

<ul>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/texmaths-1">TexMaths</a>：在Writer、Impress、Draw中插入LaTeX数学公式。前提是需要在电脑上安装TeX/LaTeX排版系统。</li>
</ul>

<p align="center"><img src="/figures/p77551870.jpg" alt="图6 TexMaths扩展" /></p>
<p align="center">图6 TexMaths扩展</p>

<ul>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/alternative-dialog-find-replace-for-writer">AltSearch</a>：这是一个非常强大的在Writer文档中进行查找、替换的工具。支持使用正则表达式。被查换和替换的对象既可以是文本，也可以是样式。用户通过编写其所支持的宏命令，能够以批处理的方式执行多个查找、替换操作。关于AltSearch的实际使用案例可以参考我的这篇文章《<a href="/computer/2020/11/14/%E4%BD%BF%E7%94%A8AltSearch%E6%A0%BC%E5%BC%8F%E5%8C%96Kindle%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html">使用AltSearch格式化Kindle读书笔记</a>》。</li>
</ul>

<p align="center"><img src="/figures/p77551871.jpg" alt="图7 AltSearch扩展" /></p>
<p align="center">图7 AltSearch扩展</p>

<ul>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/code-highlighter">Code Highlighter</a>：支持超过350种编程语言的代码高亮。</li>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/dmaths">Dmaths</a>：功能丰富的数学作图工具。</li>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/languagetool">LanguageTool</a>：开源的拼写检查软件，支持多种语言和不同的平台，包括PC独立软件，LibreOffice集成插件，Firefox集成插件。</li>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/export-as-images">Export As Images</a>：将所有Impress中的幻灯片和Draw中的绘图页面批量导出为图片。</li>
  <li><a href="https://extensions.libreoffice.org/en/extensions/show/zotero-libreoffice-integration">Zotero LibreOffice Integration</a>：与Zotero软件配合使用，用于学术文献的插入、引用。</li>
</ul>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LibreOffice" /><summary type="html"><![CDATA[Table of contents]]></summary></entry><entry><title type="html">使用AltSearch格式化Kindle读书笔记</title><link href="https://jihuan-tian.github.io/computer/2020/11/14/%E4%BD%BF%E7%94%A8AltSearch%E6%A0%BC%E5%BC%8F%E5%8C%96Kindle%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html" rel="alternate" type="text/html" title="使用AltSearch格式化Kindle读书笔记" /><published>2020-11-14T00:00:00+08:00</published><updated>2020-11-14T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2020/11/14/%E4%BD%BF%E7%94%A8AltSearch%E6%A0%BC%E5%BC%8F%E5%8C%96Kindle%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2020/11/14/%E4%BD%BF%E7%94%A8AltSearch%E6%A0%BC%E5%BC%8F%E5%8C%96Kindle%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html"><![CDATA[<p><a href="https://extensions.libreoffice.org/extensions/alternative-dialog-find-replace-for-writer">AltSearch</a>是LibreOffice Writer的一个用于自动化执行复杂文本替换操作的扩展，能够在不需要复杂编程的条件下进行一些文档格式的手动与批量转换和调整。该扩展除了支持普通文本与正则表达式的查找与替换外，还能够进行文本与段落样式的匹配与替换，这是其他的排版软件，包括微软的Office，所不具备的。利用这些功能，将其写为简单的批处理脚本，就可以自动地格式化文件，满足常见的学习与工作需求，大大提高工作效率。本文以格式化由Kindle 导出的笔记为例，介绍AltSearch的基本使用方法。</p>

<p>由Kindle iPad版导出的芝加哥格式的笔记直接存为LibreOffice Writer文件，其格式基本与纯文本无异，并不适合结构化的浏览或发布为豆瓣笔记。所以，需要对文本格式进行调整。对此，首先在LibreOffice Writer中点击绿色望远镜按钮，打开AltSearch对话框：</p>

<p align="center"><img src="/figures/p77551963.jpg" alt="" /></p>

<p>然后依次执行如下步骤：</p>

<ol>
  <li>
    <p>删除<code class="language-plaintext highlighter-rouge">标注（黄色）</code>之类的标记和后面的（原版书）页码：</p>

    <ul>
      <li>搜索：<code class="language-plaintext highlighter-rouge">^标注\(.*\)\s*-\s*第\s*\d+\s*页·</code></li>
      <li>替换为空字符</li>
    </ul>
  </li>
  <li>
    <p>搜索<code class="language-plaintext highlighter-rouge">笔记</code>并删除后面的（原版书）页码：</p>

    <ul>
      <li>搜索：<code class="language-plaintext highlighter-rouge">^(笔记\s*-\s*)第\s*\d+\s*页·</code></li>
      <li>替换：<code class="language-plaintext highlighter-rouge">\1</code></li>
    </ul>
  </li>
  <li>
    <p>将<code class="language-plaintext highlighter-rouge">位置</code>替换为<code class="language-plaintext highlighter-rouge">P</code>并将其与下一行合并：</p>

    <ul>
      <li>搜索：<code class="language-plaintext highlighter-rouge">位置\s*(\d+)\s*\p</code></li>
      <li>替换:<code class="language-plaintext highlighter-rouge">P\1</code></li>
    </ul>
  </li>
  <li>
    <p>将所有段落设为<code class="language-plaintext highlighter-rouge">Quotations</code>样式：</p>

    <ul>
      <li>搜索：<code class="language-plaintext highlighter-rouge">.*</code></li>
      <li>替换：<code class="language-plaintext highlighter-rouge">\P{Quotations}</code></li>
    </ul>
  </li>
  <li>
    <p>将所有以<code class="language-plaintext highlighter-rouge">笔记</code>开头的段落设为`Text Body样式：</p>

    <ul>
      <li>搜索：<code class="language-plaintext highlighter-rouge">^\s*笔记</code></li>
      <li>替换：<code class="language-plaintext highlighter-rouge">\P{Text Body}</code></li>
    </ul>
  </li>
</ol>

<p>上述步骤手动操作起来比较繁琐，我们可以利用AltSearch的批处理模式将其写为脚本。点击AltSearch对话框中的<code class="language-plaintext highlighter-rouge">Batch</code>按钮：</p>

<p align="center"><img src="/figures/p77551961.jpg" alt="" /></p>

<p>在如下打开的批处理模式对话框中点击<code class="language-plaintext highlighter-rouge">Edit</code>，打开文本编辑器编辑脚本。需要注意的是，如果是第一次运行AltSearch，点击<code class="language-plaintext highlighter-rouge">Edit</code>后会提示使用什么编辑器进行编辑，直接输入编辑器的命令名确认即可。</p>

<p align="center"><img src="/figures/p77551966.jpg" alt="" /></p>

<p>然后，将下面的脚本拷贝到文件末尾<code class="language-plaintext highlighter-rouge">[End]</code>的前一行即可。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Name] Process the selected Kindle notes in Chicago format
  [Parameters]   MsgOff Regular CurrSelection

  [Find]^标注\(.*\)\s*-\s*第\s*\d+\s*页·
  [Replace]
  [Command] ReplaceAll

  [Find]^(笔记\s*-\s*)第\s*\d+\s*页·
  [Replace]\1
  [Command] ReplaceAll

  [Find]位置\s*(\d+)\s*\p
  [Replace]P\1 
  [Command] ReplaceAll
  
  [Find].*
  [Replace]\P{Quotations}
  [Command] ReplaceAll
  
  [Find]^\s*笔记
  [Replace]\P{Text Body}
  [Command] ReplaceAll
</code></pre></div></div>

<p>可以看出，这个脚本的语法非常简单：方括号中的单词表示需要执行的命令，括号之后则为该命令执行所需的参数。目前用到命令有：</p>

<ol>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Name</code>：定义脚本功能名称。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Parameters</code>：指定脚本功能执行时的参数，包括：</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">MsgOff</code>：关闭提示信息。</li>
      <li><code class="language-plaintext highlighter-rouge">Regular</code>：使用正则表达式查找与替换。</li>
      <li><code class="language-plaintext highlighter-rouge">CurrSelection</code>：仅操作当前选中的文本。</li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Find</code>：指定待查找的文本或正则表达式。</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Replace</code>：指定需替换的文本或样式</p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">\1</code>：反斜线后加一个数字N，表示正则表达式中第N括号中匹配的部分。</li>
      <li><code class="language-plaintext highlighter-rouge">\P{Paragraph style name}</code>：将名称为<code class="language-plaintext highlighter-rouge">Paragraph style name</code>的段落样式应用于查找到的文本。该段落样式需事先在LibreOffice Writer中定义好。</li>
    </ul>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">Command</code>：指定需要执行的命令。<code class="language-plaintext highlighter-rouge">ReplaceAll</code>则表示对所有匹配的文本执行替换。</p>
  </li>
</ol>

<p>更多AltSearch的功能可以查阅其说明书。</p>

<p>接下来，点击<code class="language-plaintext highlighter-rouge">Refresh</code>钮，则可以看到刚才新添加进去的脚本功能：</p>

<p align="center"><img src="/figures/p77551971.jpg" alt="" /></p>

<p>这时，在LibreOffice Writer选中所有需要处理的文本，在AltSearch对话框中选中需要执行的脚本功能，点击<code class="language-plaintext highlighter-rouge">Execute</code>，便可以完成自动化处理工作。最后，根据个人需要，可以再手动设置Kindle图书中各个章节的标题样式。至此，就可以得到一份漂亮的读书笔记了。</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="LibreOffice" /><category term="Kindle" /><summary type="html"><![CDATA[AltSearch是LibreOffice Writer的一个用于自动化执行复杂文本替换操作的扩展，能够在不需要复杂编程的条件下进行一些文档格式的手动与批量转换和调整。该扩展除了支持普通文本与正则表达式的查找与替换外，还能够进行文本与段落样式的匹配与替换，这是其他的排版软件，包括微软的Office，所不具备的。利用这些功能，将其写为简单的批处理脚本，就可以自动地格式化文件，满足常见的学习与工作需求，大大提高工作效率。本文以格式化由Kindle 导出的笔记为例，介绍AltSearch的基本使用方法。]]></summary></entry><entry><title type="html">Access control of C++ classes</title><link href="https://jihuan-tian.github.io/computer/2020/11/10/Access-control-of-C++-classes.html" rel="alternate" type="text/html" title="Access control of C++ classes" /><published>2020-11-10T00:00:00+08:00</published><updated>2020-11-10T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2020/11/10/Access%20control%20of%20C++%20classes</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2020/11/10/Access-control-of-C++-classes.html"><![CDATA[<p>The C++ public, protected and private keywords enable us to control the access to the data and methods of a class. Such access control mechanism applies to both the definition of a class and its inherited base class. It also discriminates between class developers and clients. The former can visit both public and protected entities, while the latter are only accessible to public class members. Here, the class developer stands for the programmer who writes new classes by inheriting from the existing class hierarchy. The class client represents that who only uses classes in the library in his/her application programs.</p>

<p>For class designers, to make the library simple and effective, and to meet the applied demands of class developers and clients, they should always keep in mind the concepts of “simplification by hiding implementation details”. Therefore, when a class hierarchy is built from bottom to top, the underlying infrastructure should usually be designed not accessible by both class developers and clients. During the course of going up in the class hierarchy, the functions of classes evolve from laying out foundation to real world application, so their access rights can be gradually released out. Some member data and methods are labeled as protected, which are reserved for class developers to add more functionality to the library. Some member data and methods are labeled as public, which are open to class clients for ease-of-use.</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="programming" /><category term="C++" /><category term="OOP" /><summary type="html"><![CDATA[The C++ public, protected and private keywords enable us to control the access to the data and methods of a class. Such access control mechanism applies to both the definition of a class and its inherited base class. It also discriminates between class developers and clients. The former can visit both public and protected entities, while the latter are only accessible to public class members. Here, the class developer stands for the programmer who writes new classes by inheriting from the existing class hierarchy. The class client represents that who only uses classes in the library in his/her application programs.]]></summary></entry><entry><title type="html">使用Lilypond排版简谱</title><link href="https://jihuan-tian.github.io/computer/2020/10/11/%E4%BD%BF%E7%94%A8Lilypond%E6%8E%92%E7%89%88%E7%AE%80%E8%B0%B1.html" rel="alternate" type="text/html" title="使用Lilypond排版简谱" /><published>2020-10-11T00:00:00+08:00</published><updated>2020-10-11T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2020/10/11/%E4%BD%BF%E7%94%A8Lilypond%E6%8E%92%E7%89%88%E7%AE%80%E8%B0%B1</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2020/10/11/%E4%BD%BF%E7%94%A8Lilypond%E6%8E%92%E7%89%88%E7%AE%80%E8%B0%B1.html"><![CDATA[<p>这两天我想做一个简谱，在网上搜索乐谱排版软件，发现了基于GPL协议的Lilypond软件。只不过Lilypond是用来做五线谱的。幸好，又找到剑桥大学 Silas S. Brown 编写的一个 <a href="http://people.ds.cam.ac.uk/ssb22/mwrhome/jianpu-ly.py">jianpu-ly.py</a> 脚本，通过调用Lilypond能够最终生成简谱。关于它的详细介绍请看<a href="http://people.ds.cam.ac.uk/ssb22/mwrhome/jianpu-ly.html">这里</a>。</p>

<p>该脚本支持的简谱语法规则如下：</p>

<ul>
  <li>音阶：1 2 3 4 5 6 7 1’</li>
  <li>空拍：0</li>
  <li>升、降音：#1 b2</li>
  <li>低两个八度、低八度、中音、高八度、高两个八度：1,, 1, 1 1’ 1’’</li>
  <li>六十四分、三十二分、十六分、八分、四分音符（一拍）：h1 d1 s1 q1 1</li>
  <li>符点音符：s1. q1. 1.</li>
  <li>半音符（两拍）：1 -</li>
  <li>符点半音符（三拍）：1 - -</li>
  <li>全音符（四拍）：1 - - -</li>
  <li>拍子：4/4</li>
  <li>大调：1=Bb</li>
  <li>小调：6=F#</li>
  <li>标题：title=采茶舞曲</li>
  <li>三联音：3[ q1 q1 q1 ]</li>
  <li>重复：R{ 1 1 1 } A{ 2 | 3 }</li>
</ul>

<p>同时在原始脚本的基础之上我还作了一些修改，增加了乐曲速度（tempo）设定功能。</p>

<p>一个典型的简谱源文件如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%% tempo: 4=60
title=标题
1=C
2/4

1 2 3 4 5 6 7 1'
</code></pre></div></div>

<p>将该文件存为<code class="language-plaintext highlighter-rouge">jianpu.txt</code>后，先调用<code class="language-plaintext highlighter-rouge">jianpu-ly.py</code>生成Lilypond输入文件：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jianpu-ly.py &lt; jianpu.txt <span class="o">&gt;</span> jianpu.ly
</code></pre></div></div>

<p>然后调用<code class="language-plaintext highlighter-rouge">lilypond</code>程序，生成指定格式的乐谱文件。令人惊喜的是，不光可以排版出PDF、PS、PNG等格式的简谱，还可以生成midi文件，直接播放试听。可以用如下方式调用<code class="language-plaintext highlighter-rouge">lilypond</code>：</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 生成PDF文件、midi文件</span>
lilypond jianpu.ly
<span class="c"># 生成png文件、midi文件</span>
lilypond <span class="nt">--png</span> jianpu.ly
<span class="c"># 生成ps文件、midi文件</span>
lilypond <span class="nt">--ps</span> jianpu.ly
</code></pre></div></div>

<p>可以用<code class="language-plaintext highlighter-rouge">timidity</code>直接播放生成的midi文件，或者将其转换为RIFF wav格式，再用普通的音频播放器来听。</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>timidity <span class="nt">-Ow</span> <span class="nt">-o</span> jianpu.wav jianpu.midi
</code></pre></div></div>

<p>为了方便使用，我编写了一个bash脚本<code class="language-plaintext highlighter-rouge">make_jianpu.sh</code>，用于将上述几个命令的执行自动化。</p>

<p>此外，我在使用的过程中发现，若使用默认的Lilypond设置，虽然能够生成正确的midi文件，但却无法排版出升、降与还原号（accidentals）。经过一番试探，发现只要在<code class="language-plaintext highlighter-rouge">/usr/share/lilypond/2.14.2/ly/engraver-init.ly</code>文件中第168行添加：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>\consists "Accidental_engraver"
</code></pre></div></div>

<p>便可以解决该问题。这是因为，经<code class="language-plaintext highlighter-rouge">jianpu-ly.py</code>脚本转换生成的Lilypond文件基于的是RhythmicStaff context。而<code class="language-plaintext highlighter-rouge">engraver-init.ly</code>中的默认配置并未包括对accidentals的“雕刻”（engrave）。所以，需要手动加上。</p>

<p>至此，用于简谱排版的工具已经俱备。我试着编排了《博基上校进行曲》片段如下。大家可以体验一下Lilypond的效果。</p>

<p>源文件：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%% tempo: 4=120

title=博基上校进行曲
arranger=排版：皮波迪先生@豆瓣 2016-02-14
1=C
2/4

q1' q0 q7. s6 q5 q3 q1 q3 q5 s5 s6 q5 s5 s6 5 -

R{ q5 q3 0 q0 q3 q4 q5 3' 3' 1' - q5 q3 0 q0 q3 q4 q3 5 5 4 - q4 q2 0 }

A{ q0 q2 q3 q4 q5 q3 0 q0 q3 q4 q3 q2 5 q3 q#4 2 q6 5 ( - 5 ) - | 
   q0 q6 q7 q6 } q1' q5 0 q0 q5 q4 q3 q2 6 q2 q7, 5 q7, 1 ( - 1 ) q3 q3 1'. q7 s6 s#5 q6 q5 q4 3 ( - q3 ) q3 q4 q3 6 q#5. s6 1' q6. s1' #2' ( - #2' ) 6 3'. q2' s1' s7 q6 q#5. s6 2. q4 q6 q0 s1' s7 s1' s2' q3' q0 q7. s1' 6 ( - 6 ) q3 q3 1'. q7 s6 s#5 q6 q5 q4 3 ( - q3 ) q3 q4 q3 6 q#5. s6 1' q6. s1' #2' ( - #2' ) 6 3'. q2' s1' s7 q6 q#5. s6 2. q4 q6 q0 s1' s7 s1' s2' q3' q0 q7. s1' 6 ( - 6 ) 5 \ff
</code></pre></div></div>

<p>简谱：</p>

<p><img src="/figures/p76662838.jpg" alt="" /></p>

<p><code class="language-plaintext highlighter-rouge">jianpu-ly.py</code>与<code class="language-plaintext highlighter-rouge">make_jianpu.sh</code>的源代码可以在<a href="https://github.com/jihuan-tian/jianpu-ly">这里</a>下载。</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="Lilypond" /><category term="音乐" /><summary type="html"><![CDATA[这两天我想做一个简谱，在网上搜索乐谱排版软件，发现了基于GPL协议的Lilypond软件。只不过Lilypond是用来做五线谱的。幸好，又找到剑桥大学 Silas S. Brown 编写的一个 jianpu-ly.py 脚本，通过调用Lilypond能够最终生成简谱。关于它的详细介绍请看这里。]]></summary></entry><entry><title type="html">使用LibreOffice Writer构建个人日志系统</title><link href="https://jihuan-tian.github.io/computer/methodology/2020/07/27/%E4%BD%BF%E7%94%A8LibreOffice-Writer%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.html" rel="alternate" type="text/html" title="使用LibreOffice Writer构建个人日志系统" /><published>2020-07-27T00:00:00+08:00</published><updated>2020-07-27T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/methodology/2020/07/27/%E4%BD%BF%E7%94%A8LibreOffice%20Writer%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/methodology/2020/07/27/%E4%BD%BF%E7%94%A8LibreOffice-Writer%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F.html"><![CDATA[<p>日志是我们记录个人经历与想法的不可或缺的工具。通过写日志这一过程，我们的逻辑思维得到了充分训练，表能与写作能力也会逐步改善。而对于日志软件的选择，我个人建议使用开源软件而非商业软件。这样一来，我们便可以长期免费地使用同一个软件工具，保证数据与文件格式的一致性，持续增强自身使用该工具的水平，从而不断提高生产力。即便开源软件的功能与性能暂时不如商业软件，但以发展的眼光来看，随着时间的推移，开源软件也在不断改进，最终会赶上甚至是超过商业软件。以LibreOffice为例，我大约在15年前就已经开始使用了。虽然那个时候它的部分功能尚存在bug，但如今均已完全修复，且拥有很多微软Office不具备的优秀功能。</p>

<p>其次，写日志需要的是形象而非抽象思维，所以我们最好使用所见及所得的编辑工具。“所见及所得”这一特点能够方便快捷地在屏幕文本与人的情感层（visceral）之间建立纽带——例如，字体的大小、高亮的颜色、留白处的批注等都为我们提供了写作过程中的一种情境与暗示。这种潜移默化的效果确保了写作思路的流畅，并使我们专注于构思、设计、表达与创作，还能获得由此带来的快乐和满足感。这一点是Markdown、LaTeX等将写作变得如同编程一样的工具无法或较难实现的。</p>

<p>基于以上两点考虑，LibreOffice套件中的Writer能够完全满足我们写日志的要求。从2006年至今，我已经在LibreOffice Writer中写下了近85万字。所以，对于如何使用LibreOffice Writer管理与组织这些内容也有了一点经验，以下便向各位予以介绍。</p>

<h2 id="使用基于相对路径的超链接将日志关联起来">使用基于相对路径的超链接将日志关联起来</h2>

<p>写日志的过程中，时常会想起和参考以前的一些记录，主日志文件中也会引用到与不同项目对应的工作日志，在文本中插入的示意图、思维导图等资源也往往需要与它们的源文件相关联，从而方便再编辑。这个时候就需要用大量的超链接将不同的文档以及资源文件用类似于维基百科中的链接一样彼此联系起来，形成记录与知识的网状结构。这种形式超越了仅用文件夹来组织文件内容的简单而局限的树状结构。注：关于超链接，可以参考《创新者》第八章“个人电脑”：</p>

<blockquote>
  <p>个人电脑（即普通人能够亲手操作并带到家中使用的电脑）这一思想是万尼瓦尔·布什1945年提出的。布什曾在麻省理工学院建成了大型模拟计算机，并协助构建了军、企、学三角协作体系，在此之后，他为1945年7月号的《大西洋月刊》（Atlantic）撰写了一篇题为《诚如所思》的文章。在这篇文章中，布什设想了一种他称之为“记忆扩展器”（memex）的个人电脑，这种电脑能够存储和调阅一个人的言论、图片和其他信息，</p>
</blockquote>

<blockquote>
  <p>布什设想，这种设备会配有键盘之类的“直接输入”装置，使用户能够将信息和记录输入存储器。他甚至预言了超文本链接和文件共享，还设想了进行项目合作的方式。他写道：“全新的百科全书将会出现，它们之间预先设置了由关联路径构成的网络，等待放入记忆扩展器，在记忆扩展器中，它们将得到拓展。”这段话预见了半个世纪之后的维基百科。</p>
</blockquote>

<p>与微软Office不同，如果链接的目标文件也是LibreOffice Writer文件，则在LibreOffice Writer源文件中创建的超链接可以直接定位到目标文件中指定的某个章节标题（Headings）、表格、图片、OLE对象、节或者书签。如图1所示，在超链接设置对话框中选定了链接目标文件后，这一点可在“Target in document”一栏中予以设定：点击红框内右侧的按钮，则会弹出类似文档导航栏的窗口（如图2所示），从中即可以选择需要链接的对象。</p>

<p align="center"><img src="/figures/p74682092.jpg" alt="图1 超链接设置对话框" /></p>
<p align="center">图1 超链接设置对话框</p>

<p align="center"><img src="/figures/p74682096.jpg" alt="图2 目标文件中的链接对象" /></p>
<p align="center">图2 目标文件中的链接对象</p>

<p>由于个人文档需要备份和同步到不同的设备上，包括移动硬盘、U盘、台式机、笔记本电脑等，而文档在不同设备上的绝对路径可能是不同的。所以，为了保证上述超链接的有效性，链接地址需要使用文件的相对路径而不是绝对路径。如图3所示，这一点可以在软件设置中“Load/Save”栏目下的“General”中选择“Save URLs relative to file system”。</p>

<p align="center"><img src="/figures/p74682110.jpg" alt="图3 设置使用文件系统相对URL地址" /></p>
<p align="center">图3 设置使用文件系统相对URL地址</p>

<h2 id="给日志条目加标签进行分类">给日志条目加标签进行分类</h2>

<p>给日志添加标签是分类组织信息的非常有效的方法，这也是常见博客平台的基本功能。然而对于文字处理软件LibreOffice Writer来说，其设计初衷是为了排版和出版，而非信息的结构化与分类化组织，因而自然就没有这项功能了。不过，我们仍可以通过在日志章节标题处插入可以自动计数的“Number range”域的方式来生成标签。然后，再针对该“域”生成与标签相关的所有日志标题的目录（table of contents）。如图4所示，我创建了诸如“小结与回顾”、“数学”、“豆瓣”等标签。在需要给日志分类的时候，在其标题后插入相应的域即可（如图5所示）。为该标签生成的日志目录则如图6所示。</p>

<p align="center"><img src="/figures/p74682116.jpg" alt="图4 使用Number range域创建日志分类标签" /></p>
<p align="center">图4 使用Number range域创建日志分类标签</p>

<p align="center"><img src="/figures/p74682118.jpg" alt="图5 在日志标题处插入分类标签" /></p>
<p align="center">图5 在日志标题处插入分类标签</p>

<p align="center"><img src="/figures/p74682120.jpg" alt="图6 包含“豆瓣”标签的日志目录" /></p>
<p align="center">图6 包含“豆瓣”标签的日志目录</p>

<h2 id="直接引用外部文档内容并保持同步">直接引用外部文档内容并保持同步</h2>

<p>使用本文前面所说的超链接可以在不同文档间的标题、图、表等对象间建立关联，实现快速跳转，但却无法实现在当前文档中引用另一文档中的某部分原文并保持同步。对此，我们一般采用的笨办法是将引用的文字直接拷贝到当前文档中。然而，若这些内容在另一文档中被修改，为了保证两边的一致性，还需要再手动拷贝一遍。当引用的内容片段较多或者在多个文档间都存在这样的引用时，通过手动拷贝实现同步就会变得费时费力且极易出错，几乎无法维护。对此，可以使用LibreOffice Writer导航栏中提供的“Drag mode”功能。点击如图7所示的按钮，选择弹出菜单中的“Insert as Hyperlink”。然后在目标文档中用鼠标选中想要引用的那部分内容（文字、图片均可），直接拖到当前文档中的指定位置即可实现引用并保持同步了。</p>

<p align="center"><img src="/figures/p74682121.jpg" alt="图7 LibreOffice Writer导航栏中的“Drag mode”" /></p>
<p align="center">图7 LibreOffice Writer导航栏中的“Drag mode”</p>

<h2 id="总结">总结</h2>

<p>通过本文以上介绍的方法和技巧，我们便可以使用开源软件LibreOffice构建起强大、稳定、可靠的个人日志系统。通过标签分类与创建目录，大量的日志内容得到了很好的管理与组织。通过精确到文档内部指定对象与位置的超链接和引用，形成了相互联接、可快速跳转的记录与知识的网络。这也算是在一定程度上实现了恩格尔巴特关于将计算机作为人类<a href="/thoughts/2017/10/03/%E5%88%9B%E6%96%B0%E8%80%85-%E6%91%98%E5%BD%95%E4%B8%8E%E7%AC%94%E8%AE%B0.html#增智系统">增智系统</a>的设想吧。</p>

<p>Backlinks: <a href="/computer/2020/11/14/LibreOffice%E7%9A%84%E7%89%B9%E7%82%B9%E4%B8%8E%E4%BC%98%E5%8A%BF.html">《LibreOffice的特点与优势》</a></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="methodology" /><category term="LibreOffice" /><category term="写作" /><category term="知识联接" /><summary type="html"><![CDATA[日志是我们记录个人经历与想法的不可或缺的工具。通过写日志这一过程，我们的逻辑思维得到了充分训练，表能与写作能力也会逐步改善。而对于日志软件的选择，我个人建议使用开源软件而非商业软件。这样一来，我们便可以长期免费地使用同一个软件工具，保证数据与文件格式的一致性，持续增强自身使用该工具的水平，从而不断提高生产力。即便开源软件的功能与性能暂时不如商业软件，但以发展的眼光来看，随着时间的推移，开源软件也在不断改进，最终会赶上甚至是超过商业软件。以LibreOffice为例，我大约在15年前就已经开始使用了。虽然那个时候它的部分功能尚存在bug，但如今均已完全修复，且拥有很多微软Office不具备的优秀功能。]]></summary></entry><entry><title type="html">使用LibreOffice Writer文档构建个人管理与监督体系</title><link href="https://jihuan-tian.github.io/computer/methodology/2020/02/20/%E4%BD%BF%E7%94%A8LibreOffice-Writer%E6%96%87%E6%A1%A3%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86%E4%B8%8E%E7%9B%91%E7%9D%A3%E4%BD%93%E7%B3%BB.html" rel="alternate" type="text/html" title="使用LibreOffice Writer文档构建个人管理与监督体系" /><published>2020-02-20T00:00:00+08:00</published><updated>2020-02-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/methodology/2020/02/20/%E4%BD%BF%E7%94%A8LibreOffice%20Writer%E6%96%87%E6%A1%A3%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86%E4%B8%8E%E7%9B%91%E7%9D%A3%E4%BD%93%E7%B3%BB</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/methodology/2020/02/20/%E4%BD%BF%E7%94%A8LibreOffice-Writer%E6%96%87%E6%A1%A3%E6%9E%84%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AE%A1%E7%90%86%E4%B8%8E%E7%9B%91%E7%9D%A3%E4%BD%93%E7%B3%BB.html"><![CDATA[<p>基于<a href="/thoughts/2019/04/30/%E4%BB%A5Emacs-Org-mode%E4%B8%BA%E6%A0%B8%E5%BF%83%E7%9A%84%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E6%96%B9%E6%A1%88.html">Emacs Org mode的GTD任务管理方法</a>可以有效地管理复杂繁多的任务，在具体与细节上进行很好的把控。而要从宏观层面把握项目进度，在中长期的时间尺度上纵观个人职业发展乃至整个人生的走向，则需要基于周、月、季度、半年、年末一系列时间节点上的整体规划、回顾、评估、反省与展望。目前，我基于LibreOffice Writer文档实现并实践了上述理念，从而形成了个人管理与监督体系。本文则简要介绍该文档的结构。</p>

<p>首先，我会为每年都创建一个这样的文档。文档内包含如下内容（以下层级列表在文档中分别赋以“标题一”、“标题二”等等的样式，从而可以在LibreOffice Writer导航栏中浏览整个文档的结构）：</p>

<ul>
  <li>
    <p>项目整体规划与回顾</p>

    <ul>
      <li>
        <p>年度规划（说明：这里可以针对官方项目、个人项目、学习、管理、事务等多个方面进行全年的远景规划，写下想要实现的个人目标和期望达到的人生状态。因为一年的时间毕竟比较长，年初通常带有一定激情的想法不一定符合现实，所以随着时间的推移，有可能需要对远景规划做一定的修改。因此，下面包含了年初和每个季度的版本。）</p>

        <ul>
          <li>
            <p>年初版本</p>
          </li>
          <li>
            <p>第一季度末版本</p>
          </li>
          <li>
            <p>第二季度末版本</p>
          </li>
          <li>
            <p>第三季度末版本</p>
          </li>
        </ul>
      </li>
      <li>
        <p>第一季度计划（说明：这是针对第一季度具体工作的安排。）</p>
      </li>
      <li>
        <p>第一季度回顾与小结（说明：这是针对第一季度执行情况的总结。）</p>
      </li>
      <li>
        <p>第二季度计划</p>
      </li>
      <li>
        <p>第二季度回顾与小结</p>
      </li>
      <li>
        <p>第三季度计划</p>
      </li>
      <li>
        <p>第三季度回顾与小结</p>
      </li>
      <li>
        <p>第四季度计划</p>
      </li>
      <li>
        <p>第四季度回顾与小结</p>
      </li>
    </ul>
  </li>
  <li>
    <p>周计划与回顾模板（说明：用于做周规划与回顾的模板。每周开始的时候，将其拷贝到后面相应的周编号下。）</p>
  </li>
  <li>
    <p>第1周</p>
  </li>
  <li>
    <p>第2周</p>
  </li>
  <li>
    <p>…</p>
  </li>
</ul>

<p>有了上述的基本架构后，对于具体的计划条目，可仿照Emacs Org mode为其设置不同的任务状态，并用不同的颜色区别。这包括：</p>

<ul>
  <li>
    <p>[Finished] 绿色：已完成</p>
  </li>
  <li>
    <p>[Unfinished] 红色：未完成</p>
  </li>
  <li>
    <p>[Partly finished] 蓝色：部分完成</p>
  </li>
  <li>
    <p>[Unplanned finished] 紫色：未列入计划但完成的</p>
  </li>
  <li>
    <p>[Ongoing] 土黄色：执行中</p>
  </li>
  <li>
    <p>[Cancelled] 红色删除线：取消</p>
  </li>
</ul>

<p>上述定义的文字样式可以预先在样式单中定义好。然后通过编写VBA宏命令，实现将每个任务状态对应的样式自动应用到当前光标所在的段落上，并在段首插入诸如[Finished]、[Ongoing]这样的字符。这样一来，就不需要每次都得用鼠标选中文字再设置样式了。VBA宏命令的源代码如下：</p>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Sub</span> <span class="nf">SetTaskStatusString</span><span class="p">(</span><span class="n">cTaskStatus</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> <span class="n">cStyleName</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">)</span>
   <span class="k">Dim</span> <span class="nv">oDoc</span>
   <span class="k">Dim</span> <span class="nv">oText</span>
   <span class="k">Dim</span> <span class="nv">oViewCursor</span>
   <span class="k">Dim</span> <span class="nv">oTextCursor</span>
   <span class="k">Dim</span> <span class="nv">oSearchDescriptor</span>
   <span class="k">Dim</span> <span class="nv">cTaskStatusListReg</span>
   <span class="k">Dim</span> <span class="nv">oFoundAll</span>
   <span class="k">Dim</span> <span class="nv">n</span>

   <span class="n">oDoc</span> <span class="o">=</span> <span class="n">ThisComponent</span>
   <span class="n">oText</span> <span class="o">=</span> <span class="n">oDoc</span><span class="p">.</span><span class="n">Text</span>

   <span class="n">oViewCursor</span> <span class="o">=</span> <span class="n">oDoc</span><span class="p">.</span><span class="n">CurrentController</span><span class="p">.</span><span class="n">getViewCursor</span><span class="p">()</span>
   <span class="n">oTextCursor</span> <span class="o">=</span> <span class="n">oText</span><span class="p">.</span><span class="n">createTextCursorByRange</span><span class="p">(</span><span class="n">oViewCursor</span><span class="p">)</span>

   <span class="c1">' Select current paragraph using text cursor.</span>
   <span class="n">oTextCursor</span><span class="p">.</span><span class="n">gotoStartOfParagraph</span><span class="p">(</span><span class="k">False</span><span class="p">)</span>
   <span class="n">oTextCursor</span><span class="p">.</span><span class="n">gotoEndOfParagraph</span><span class="p">(</span><span class="k">True</span><span class="p">)</span>

   <span class="c1">' Apply the specified character style for the current task status.</span>
   <span class="n">oTextCursor</span><span class="p">.</span><span class="n">CharStyleName</span> <span class="o">=</span> <span class="n">cStyleName</span>

   <span class="c1">' Insert the task status string.</span>
   <span class="k">If</span> <span class="n">Len</span><span class="p">(</span><span class="n">cTaskStatus</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">Then</span>
      <span class="n">oTextCursor</span><span class="p">.</span><span class="n">getText</span><span class="p">.</span><span class="n">insertString</span><span class="p">(</span><span class="n">oTextCursor</span><span class="p">.</span><span class="n">getStart</span><span class="p">(),</span> <span class="s">"\["</span> <span class="o">&amp;</span> <span class="n">cTaskStatus</span> <span class="o">&amp;</span> <span class="s">"\] "</span><span class="p">,</span> <span class="k">False</span><span class="p">)</span>
   <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetFinished</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Finished"</span><span class="p">,</span> <span class="s">"Finished task"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetUnFinished</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Unfinished"</span><span class="p">,</span> <span class="s">"Unfinished task"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetPartlyFinished</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Partly finished"</span><span class="p">,</span> <span class="s">"Partly finished task"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetUnplannedFinished</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Unplanned finished"</span><span class="p">,</span> <span class="s">"Unplanned finished task"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetOngoing</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Ongoing"</span><span class="p">,</span> <span class="s">"Ongoing"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetCancelled</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Cancelled"</span><span class="p">,</span> <span class="s">"Cancelled"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetTodo</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">"Todo"</span><span class="p">,</span> <span class="s">"Default Style"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetDefaultStyle</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="s">"Default Style"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">Emphasize</span><span class="p">()</span>
   <span class="n">SetTaskStatusString</span><span class="p">(</span><span class="s">""</span><span class="p">,</span> <span class="s">"Emphasis"</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<p>为了进一步方便操作，可以再自定义一个工具栏，其中的按钮绑定了设定任务状态的VBA宏，如下图所示。</p>

<p align="center"><img src="/figures/p69869614.jpg" alt="" /></p>

<p>以上便是我在实际学习与工作中用于任务规划与回顾的文档模板。其实，具体采用什么形式与格式的文件来做这件事并不重要，关键是要能够让自己形成规划、执行、反馈、改进的闭环，以求持续地自我改进。此外，再顺便提一下，我之所以采用LibreOffice Writer作为主力办公软件，除了一方面它是开源软件外，还在于它提供了许多微软Office所没有的强大功能。例如，可以在LibreOffice文档中创建精确指向到另一个文件中某个位置处的超链接。这样一来，我的规划与回顾文档和我的日志、工作笔记文档等等都是彼此关联的，跳转浏览、相互对照起来非常方便。同时，由于这些超链接是以相对路径的格式存储的，所以只要文件之间的相对存储位置不发生变化，那么把整个文件树拷贝到不同的电脑或磁盘上，链接都是始终有效的。</p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="methodology" /><category term="LibreOffice" /><category term="管理提升" /><summary type="html"><![CDATA[基于Emacs Org mode的GTD任务管理方法可以有效地管理复杂繁多的任务，在具体与细节上进行很好的把控。而要从宏观层面把握项目进度，在中长期的时间尺度上纵观个人职业发展乃至整个人生的走向，则需要基于周、月、季度、半年、年末一系列时间节点上的整体规划、回顾、评估、反省与展望。目前，我基于LibreOffice Writer文档实现并实践了上述理念，从而形成了个人管理与监督体系。本文则简要介绍该文档的结构。]]></summary></entry><entry><title type="html">使用iPad远程访问GNU/Linux桌面</title><link href="https://jihuan-tian.github.io/computer/2020/02/20/%E4%BD%BF%E7%94%A8iPad%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AEGNU-Linux%E6%A1%8C%E9%9D%A2.html" rel="alternate" type="text/html" title="使用iPad远程访问GNU/Linux桌面" /><published>2020-02-20T00:00:00+08:00</published><updated>2020-02-20T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2020/02/20/%E4%BD%BF%E7%94%A8iPad%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AEGNU-Linux%E6%A1%8C%E9%9D%A2</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2020/02/20/%E4%BD%BF%E7%94%A8iPad%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AEGNU-Linux%E6%A1%8C%E9%9D%A2.html"><![CDATA[<p>通过vncserver/viewer可以实现iPad远程访问GNU/Linux桌面。具体做法如下。</p>

<p>首先，在GNU/Linux主机上做如下操作：</p>

<ol>
  <li>
    <p>安装tightvncserver。</p>
  </li>
  <li>
    <p>执行<code class="language-plaintext highlighter-rouge">vncpasswd</code>设置客户端访问vnc服务器的密码。</p>
  </li>
  <li>
    <p>在iptables中开放端口5901、5902……，分别对应vncserver的桌面1、桌面2……。</p>
  </li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-A INPUT -p tcp --dport 5901 -j ACCEPT
</code></pre></div></div>

<ol>
  <li>起动tightvncserver，开启桌面1。由于我使用的是9.7英寸的iPad Pro，需要将桌面尺寸设为2048×1536。同时，颜色深度设为24位。</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tightvncserver -geometry 2048x1536 -depth 24 :1
</code></pre></div></div>

<ol>
  <li>在桌面1内启动需要在iPad上显示的程序。例如，</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DISPLAY=:1; okular file.pdf &amp;
</code></pre></div></div>

<p>接下来，iPad上做如下操作：</p>

<ol>
  <li>安装VNC Viewer。</li>
</ol>

<p><img src="/figures/p69869820.jpg" alt="" /></p>

<ol>
  <li>进入VNC Viewer应用，设置Address为GNU/Linux主机的IP地址，并在末尾加上桌面编号:1。“Password”中填入之前在主机上执行<code class="language-plaintext highlighter-rouge">vncpasswd</code>后设置的密码<code class="language-plaintext highlighter-rouge">。</code>“Picture quality”选为“High”。</li>
</ol>

<p><img src="/figures/p69869821.jpg" alt="" /></p>

<ol>
  <li>连接服务器，就可以看到之前启动的应用了。iPad也就变成了GNU/Linux主机的一块扩展屏幕。当然，若在iPad上再安装Termius应用，则可以通过SSH远程连接到主机上，执行自己想要使用的软件。这就相当于在iPad上以远程桌面的方式使用GNU/Linux主机。</li>
</ol>

<p>最后，若要终止vnc桌面环境，在GNU/Linux主机执行如下命令即可。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tightvncserver -kill :1
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="iPad" /><category term="Linux" /><summary type="html"><![CDATA[通过vncserver/viewer可以实现iPad远程访问GNU/Linux桌面。具体做法如下。]]></summary></entry><entry><title type="html">泛型编程与C++ STL思维导图</title><link href="https://jihuan-tian.github.io/computer/2019/12/22/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E4%B8%8EC++-STL%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.html" rel="alternate" type="text/html" title="泛型编程与C++ STL思维导图" /><published>2019-12-22T00:00:00+08:00</published><updated>2019-12-22T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2019/12/22/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E4%B8%8EC++%20STL%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2019/12/22/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B%E4%B8%8EC++-STL%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.html"><![CDATA[<p>我们使用经典的C/C++风格编程常常会遇到编写的算法因为严重依赖数据类型，所以当想要将该算法通用化，即，使其能够处理结构与操作行为相似但具体类型不同的数据时，则不得不重写出多个版本的尴尬局面。而泛型编程是以数学公理化的思维来对软件算法与数据结构进行高度抽象化与泛化的一种方法，能够很好地解决上述难题。STL则是基于C++模板技术实现泛型编程思想与方法的标准库。非常巧的但也几乎是必然的，STL之父<a href="http://stepanovpapers.com/drdobbs-interview.html">Alex Stepanov</a>曾在莫斯科大学研究数学。之后他于1987在贝尔实验室开始将C++用于泛型编程的研究。</p>

<p>以下分享我基于《<a href="https://book.douban.com/subject/1146225/">Generic Programming and the STL</a>》一书制作的思维导图，旨在对泛型编程的基本思想与STL标准库的主要数据结构有一个既宏观又具体的把握。</p>

<p align="center"><img src="/figures/p68569201.jpg" alt="" /></p>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="C++" /><category term="generic-programming" /><category term="programming" /><category term="STL" /><summary type="html"><![CDATA[我们使用经典的C/C++风格编程常常会遇到编写的算法因为严重依赖数据类型，所以当想要将该算法通用化，即，使其能够处理结构与操作行为相似但具体类型不同的数据时，则不得不重写出多个版本的尴尬局面。而泛型编程是以数学公理化的思维来对软件算法与数据结构进行高度抽象化与泛化的一种方法，能够很好地解决上述难题。STL则是基于C++模板技术实现泛型编程思想与方法的标准库。非常巧的但也几乎是必然的，STL之父Alex Stepanov曾在莫斯科大学研究数学。之后他于1987在贝尔实验室开始将C++用于泛型编程的研究。]]></summary></entry><entry><title type="html">Microsoft Office论文排版技巧</title><link href="https://jihuan-tian.github.io/computer/2009/04/19/Microsoft-Office%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88%E6%8A%80%E5%B7%A7.html" rel="alternate" type="text/html" title="Microsoft Office论文排版技巧" /><published>2009-04-19T00:00:00+08:00</published><updated>2009-04-19T00:00:00+08:00</updated><id>https://jihuan-tian.github.io/computer/2009/04/19/Microsoft-Office%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88%E6%8A%80%E5%B7%A7</id><content type="html" xml:base="https://jihuan-tian.github.io/computer/2009/04/19/Microsoft-Office%E8%AE%BA%E6%96%87%E6%8E%92%E7%89%88%E6%8A%80%E5%B7%A7.html"><![CDATA[<h1 class="no_toc" id="table-of-contents">Table of contents</h1>

<ul id="markdown-toc">
  <li><a href="#引言" id="markdown-toc-引言">引言</a></li>
  <li><a href="#样式与格式" id="markdown-toc-样式与格式">样式与格式</a></li>
  <li><a href="#公式图表的编号与引用" id="markdown-toc-公式图表的编号与引用">公式、图、表的编号与引用</a>    <ul>
      <li><a href="#公式自动编号" id="markdown-toc-公式自动编号">公式自动编号</a></li>
    </ul>
  </li>
  <li><a href="#公式图片表格的排版" id="markdown-toc-公式图片表格的排版">公式、图片、表格的排版</a>    <ul>
      <li><a href="#公式的排版" id="markdown-toc-公式的排版">公式的排版</a></li>
      <li><a href="#图片的排版" id="markdown-toc-图片的排版">图片的排版</a></li>
      <li><a href="#表格的排版" id="markdown-toc-表格的排版">表格的排版</a></li>
    </ul>
  </li>
  <li><a href="#excel-chart的处理" id="markdown-toc-excel-chart的处理">Excel chart的处理</a></li>
  <li><a href="#参考文献的编排" id="markdown-toc-参考文献的编排">参考文献的编排</a></li>
  <li><a href="#mathtype的使用" id="markdown-toc-mathtype的使用">MathType的使用</a>    <ul>
      <li><a href="#mathtype-6与公式的快速输入" id="markdown-toc-mathtype-6与公式的快速输入">MathType 6与公式的快速输入</a></li>
      <li><a href="#mathtype的中文输入" id="markdown-toc-mathtype的中文输入">MathType的中文输入</a></li>
    </ul>
  </li>
  <li><a href="#结语" id="markdown-toc-结语">结语</a></li>
  <li><a href="#附录1-word-vba-macros" id="markdown-toc-附录1-word-vba-macros">附录1 Word VBA macros</a></li>
  <li><a href="#附录2--excel-vba-macros" id="markdown-toc-附录2--excel-vba-macros">附录2  Excel VBA macros</a></li>
</ul>

<h1 id="引言">引言</h1>

<p>经过了一个多月的”煎熬”，终于将博士论文撰写完毕并打印成册了。由于之前撰写博士课题结题报告就用的是Microsoft Office，自己也不想再麻烦，所以博士论文就直接基于该Word文档做了，也没有再使用TeX/LaTeX排版。准确地讲，排版这件事其实比不上我们去学习数学、物理或编程序等给自己带来的收获大。可能你投入了数天的气力去调整文档格式，最终只是得到了一个”通过论文格式审查”的必然结果。毕竟，排版的目的是为了”秀”给别人看的，于自己的益处不多，而且对于面临要毕业工作不搞科研的大多数同学来讲，可能就只这么一次撰写大论文的机会，因而排版就更是一件”吃力不讨好”的事情了。但正因为如此，这里把自己在此次排版博士论文过程中的一些小经验、小技巧总结出来以享诸位，以期能够提高大家今后撰写论文的效率，尽量减少在这件”吃力不讨好的事情”上所浪费的时间。</p>

<p>同时，需要说明的是，撰写本文的目的绝对不是为了向大家宣传使用盗版Microsoft Office，也绝对不是为了向大家宣传使用正版Microsoft Office。因此，本文的撰写采用的是GNU/Linux下的Openoffice办公套装软件，除了与Microsoft Office不能完全兼容外，其完全可以替代Microsoft Office，满足日常科研和学习的需求。</p>

<p>下面言归正传，介绍Word排版中的小技巧，其中许多内容都是通过VBA宏来实现的，可以大大减少我们的工作量。</p>

<h1 id="样式与格式">样式与格式</h1>

<p>对于带有格式的文档，文档内容与样式的分离是保证文档格式的统一、可变、易维护的关键。在撰写文档时，我们只需关心如何安排各部分之间的逻辑关系、组织结构，而暂时不需要考虑段落与文字的样式。确定出文档的整体框架后，就可以针对每个组织单元进行样式的设计。例如，一个文档可以分为文章题目、各级标题、正文文字、要点内容等四大部分，那么就可以分别为这四类逻辑内容设置相应的样式。这样做的好处是，我们可以设置不同的样式集，从而在保证文档内容不变的情况下得到不同排版效果的文档。例如，可以针对同一文档内容，分别制作出用于论文打印和会议海报的样式。在Microsoft Word中样式的创建与修改是通过”格式”菜单中的”样式与格式”来完成的。在撰写最终的毕业论文前，一定要先定义好文档所需的样式（可以先只起好样式的名字，等文章写完后再调整与各样式对应的段落与文字格式），而不要像许多人通常的做法：随手选中某一部分文字直接修改其样式，或者使用格式刷将样式刷来刷去，这样做的后果会很惨，很容易导致整个文档的格式全部乱掉，重新调整起来异常困难。而若事先定义好了与文档各逻辑组成部分对应的样式，则只要将该样式的定义内容进行修改，则全文中所有采用该样式的地方都会得到相应更新，这样做既省事、又安全可靠。举例说，我在博士论文中就分别设定了如下样式：一、二、三级标题，一行放置单个图片与一行并排放置两个图片的样式，图片与表格题注样式，参考文献条目样式，公式所在段落的样式等。</p>

<p>关于样式定义或修改对话框中的”自动更新”选项这里需要说明一下：若选中了该选项，则改变该样式后，所有继承于该样式的样式将全部得到相应的更新。所以，除非某一样式及其子样式具有稳定不变的风格要求时，才能使用自动更新选项以保证该样式自身和继承于它的所有样式得到同步更新。若非如此，则慎用此选项。例如，一个典型的情况便是：若将Text（即正文）这种最普通的样式设成了自动更新，则在你写某一段文字时，突然想将其变成item list（编号列表）样式，然后你点击了item list按钮，随后就会发现文档中所有Text段落均给编上号码了。这就是由于你点了item list按钮，则相当于继承Text样式新生成了一个Text + item list样式，接着就是全文的自动更新...后果很严重!</p>

<h1 id="公式图表的编号与引用">公式、图、表的编号与引用</h1>

<p>图、表的自动编号与引用是很方便的，直接在Microsoft Word中插入”题注”或选择交叉引用则可以搞定。公式的编号也可以用Word来做，但是在引用公式时，即需要得到”如式(*.*)”所示的效果，则不能再使用Word的交叉引用功能了：在插入公式的引用后，Word会将公式对象本身与公式编号一齐插入到引用公式的地方。即使将插入的多余的公式对象删除也没有用：因为如果更新文档中的域，则在引用处又会重新出现公式对象。当然，如果你安装了MathType，则公式的引用就不存在上述问题。但这里给出一个我自己的解决方法，该方法采用VBA宏来实现”域代码”的自动写入，从而可以自动生成公式的编号与对公式的引用。</p>

<h2 id="公式自动编号">公式自动编号</h2>

<p>公式或者图、表的自动编号可以完全通过写入域代码来实现，而无需采用插入”题注”的方式。如果要生成形如”(4.13)”的编号（其中4为章号，13表示第4章内的第13个公式），其实就相当于有一个计数器，每生成一个公式或图、表对象，该计数器的值就加1；若遇到新的一章，则该记数器清零。将该计数器的值与章号结合，就可以得到形如”(4.13)”的公式编号。写成域代码如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>styleref 1 \s \*mergeformat
seq counter \* arabic \s 1 \*mergeformat
</code></pre></div></div>

<p>其中，<code class="language-plaintext highlighter-rouge">styleref 1 \s \*mergeformat</code>生成章号；<code class="language-plaintext highlighter-rouge">seq counter \* arabic \s 1 \*mergeformat</code>生成对象编号。<code class="language-plaintext highlighter-rouge">counter</code>是编号对象的计数器名称。例如，为了对公式、图、表分别自动编号，其计数器分别起名为：<code class="language-plaintext highlighter-rouge">eqn</code>, <code class="language-plaintext highlighter-rouge">fig</code>, <code class="language-plaintext highlighter-rouge">tab</code>。<code class="language-plaintext highlighter-rouge">\* arabic</code>表示以阿拉伯数字的方式显示自动编号。</p>

<p>为了引用某公式或图、表，则需要先选中其编号，然后插入书签，并给它起一个书签名。然后，就可以用下面的域代码引用该书签，得到的效果就是在引用处插入公式或图、表的编号：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ref bookmark_name \h
</code></pre></div></div>

<p>域代码的手动插入可以通过Ctrl+F9来实现，但较为麻烦。于是，将上述对象自动编号、添加书签与引用书签的过程写成VBA宏：</p>

<p><code class="language-plaintext highlighter-rouge">label_object</code>：自动生成对象编号。其中会提示输入上述计数器<code class="language-plaintext highlighter-rouge">counter</code>的名字，这样可以实现对不同的对象分别自动编号。</p>

<p><code class="language-plaintext highlighter-rouge">add_bookmark</code>：在选中的对象编号处生成一个书签。其中会提示输入书签的名字。只有生成了书签，才可以在文档中引用该对象。</p>

<p><code class="language-plaintext highlighter-rouge">ref_object</code>：在引用处插入被引用对象的编号。其中会提示输入对象书签的名字。对象编号处书签名字的查看，可以直接用快捷键<code class="language-plaintext highlighter-rouge">Ctrl+F5</code>。</p>

<h1 id="公式图片表格的排版">公式、图片、表格的排版</h1>

<h2 id="公式的排版">公式的排版</h2>

<p>论文中的公式格式通常是这样的：公式对象在文档正中居中放置，而公式编号在文档最右侧右对齐。这个样式并不是我们通常所用的”左、中、右对齐”或”两端对齐”。有不少人的处理方法是生成一个一行三列表格。中间的一个单元设置为居中对齐，其中插入公式对象；右边的单元格设置为右对齐，且单元的cell padding距离应设为零，其中写入公式的编号。这样的做法颇为麻烦。其实，只需要采用制表位就可以很容易实现公式与编号的对齐。为此，需专门为公式新建一个样式。其中的段落间距等等则按照常规来设置，除此之外，需要在文档的正中央设置一个对齐属性为”居中”的制表位，在版芯最右侧位置处设置一个右对齐的制表位。这样，在插入公式前，首先将其所在段落设为上述新建的样式。然后，按一次TAB键，就可以看到光标移到了文档的正中央，此时输入公式对象，则它以文档中央为基准居中对齐。接下来，再按一次TAB键，光标便移动至文档的最右端，此时运行<code class="language-plaintext highlighter-rouge">label_object</code>宏插入公式编号，该编号自动以文档最右端为基准右对齐。</p>

<h2 id="图片的排版">图片的排版</h2>

<p>图片的格式通常就是一行放置一个或一行并排放置两个图片。表格就只有一行放置一个的情况。对于一行放置一个对象的排版，只需新建一个”居中”的段落样式即可。对于一行并排放置两个图片的情况，则可以采用类似上述公式排版的方法，利用制表位来实现。我们可以新建一个名为”双图片”的样式，在版芯宽度的大约1/4与3/4处分别设置”居中”对齐的制表位。然后，通过按TAB键，则可以很快将光标移动至相应位置，然后在该处插入图片即可。</p>

<p>为了使全文图片的大小基本保持一致：例如，对于一行放置一个图片的情况，可以设置图片的宽度为版芯宽度的80%，为了保持图片原比例，图片的高度自动按比例缩放。对于一行放置两个图片的情况，可以设置图片宽度为版芯宽度的49%，图片高度按比例自动缩放。上述的调整过程写成宏<code class="language-plaintext highlighter-rouge">SetFig</code>与<code class="language-plaintext highlighter-rouge">SetTwoFig</code>。它们分别用来设置一行一个图片与一行两个图片格式下图片的宽度与高度。</p>

<h2 id="表格的排版">表格的排版</h2>

<p>正规文献中的表格均为三线表。然而，用Word自动插入的表格都是完整的横竖线，之后只能通过手动去调整表格与单元格的边框，颇为麻烦。为此，写了一个宏<code class="language-plaintext highlighter-rouge">Set3LineTable</code>，只要将表格选中，运行该宏，就可以将其设置为三线表了，而且线的粗细都是符合我们学校论文的要求。</p>

<h1 id="excel-chart的处理">Excel chart的处理</h1>

<p>平时很多的实验数据和由这些数据绘制出图表如何保存？用Matlab画出图导出成jpeg贴到word中？这应该是最要不得的做法：首先，大多数人图省事，随手贴入的都是彩色图。但毕业论文与发表的文章中一般均要使用黑白图片。更何况，绘出的图中坐标标注的字体、曲线线型等等一般都不合要求。将这些图存为jpeg，基本上就是在做无用功，等到写文章的时候，还得重新画的。如果重新的画的话，那当时用于绘图的程序都在哪儿？算例都在哪儿？这简直就是坠入了地狱。</p>

<p>用matlab绘图但将其存为<code class="language-plaintext highlighter-rouge">.fig</code>文件？看起来这是一个不错的方法。因为存成<code class="language-plaintext highlighter-rouge">.fig</code>文件时，图片和原数据都在（将其中曲线对应的数据取出还是有办法的，这里不再赘述）。但是，这毕竟还是有些麻烦，而且不太直观，无法直接看到与曲线对应的数据。</p>

<p>所以，这里还是推荐采用Excel来同时保存数据和根据这些数据画出的chart，这是一种非常直观和便捷的方式。虽然Excel并不是专门用来搞科研的工具软件，但是其功能还是够用的。如果不够你用，那么再去写一些VBA宏，就完全可以为所欲为。然而，在Excel中插入的chart通常都带有背景色，线型和marker也都跟我们学术绘图中常用的形式与符号大不相同，看起来极其古怪。所以，需要对chart中的各个元素属性进行修改，换成我们习惯的线型与marker（类似于Matlab中的线型与marker symbol就ok），将其设为黑白色。但这是一件非常让人吐血的麻烦事。所以，我也写了一个<code class="language-plaintext highlighter-rouge">SetChartStyle</code>宏，用于设置线型、marker symbol和大小，坐标系中的网格等。同时宏<code class="language-plaintext highlighter-rouge">SetTickNumberFormat</code>用于设置坐标轴数字标注的格式。这样一来，繁琐的事情在不到一秒中的时间就可以全部完成了，剩下的就只是微调一下chart的大小，然后就可以出炉了。</p>

<h1 id="参考文献的编排">参考文献的编排</h1>

<p>首先要说的一点是，传统的手工一条一条输入文献记录的方式一去不复返了。现在很多的参考文献管理软件不只是可以当作文献数据库和笔记本来用，而且已有不少可以直接与Word结合，在文档中自动插入文献条目和引用编号。商业的软件就不说了，（即使你有钱）想必也没有谁愿意去为其掏腰包。这里推荐大家使用基于Firefox浏览器的Zotero文献管理平台。因为与该软件配合使用的有一个Word插件，可以自动按不同杂志社要求的格式插入文献，并在文章中插入文献的引用编号。是否好用我没有尝试，大家可以试用一下。当然，Jabref也是一个很好的文献管理软件，目前已有基于OpenOffice的插件。上述两个软件均具有很好的移植性，可以在Windows, Linux, Mac下使用。</p>

<p>我此次博士论文对参考文献的插入与处理没有基于上述插件，因为感觉自己做起来可能会更可靠、稳妥些。我采用的方案是：将参考文献记录以”编号列表”的格式插入到文档的末尾。然后，在需要引用文献的地方，利用Word自己的插入列表项”题注”功能，则可以将与文献记录对应的编号插入到当前文本中。然而，这个做法并不能保证参考文献记录按我们引用的顺序排列，所以在经过对论文多次的修改后，参考文献记录的先后顺序可能是一团乱麻。为此，我写了<code class="language-plaintext highlighter-rouge">ListCitationNumbers</code>宏，它可以从文档开头至末尾搜索形如<code class="language-plaintext highlighter-rouge">[num]</code>的字符串，并将其中的数字编号<code class="language-plaintext highlighter-rouge">num</code>取出记录。如果某一编号在前文已出现过，那么再次遇到该编号时就不再记录，即每个文献引用编号只记录一次。搜索过程结束后，VBA宏就将这些引用的文献编号依次输出显示，根据这个数字序列我们就可以看到哪些文献记录的引用顺序有问题。然后，手动调整文档末尾参考文献记录的顺序并更新全文档中的域就可以了。此次论文排版过程中，我就是用这个宏来帮助自己调整参考文献的引用顺序的，完全可用、可靠，根本不需再像以前那样用肉眼从头到尾地挨个去看、去核对，非常方便省心。</p>

<h1 id="mathtype的使用">MathType的使用</h1>

<h2 id="mathtype-6与公式的快速输入">MathType 6与公式的快速输入</h2>

<p>这里推荐大家使用最新版的MathType 6，因为其中加入了对LaTeX的支持：即，你可以使用LaTeX的语法来输入公式符号。当然这并不是要你去学习全套的LaTeX技术，你只需要记住常用的几个LaTeX数学公式命令即可。而且，这些命令通常都是很好记的，只要你知道相应的数学符号的英文单词，对应的LaTeX命令就与它差不多。</p>

<p>当然，MathType本身也有快捷键来输入一部分公式符号。例如：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Ctrl+h: superscript
Ctrl+l: subscript
Ctrl+j: both super and sub scripts
Ctrl+f: fraction
Ctrl+i: integration symbol
Ctrl+k,d: partial differentiation
Ctrl+g, a\~z: greek letters
</code></pre></div></div>

<p>将上述MathType快捷键与LaTeX命令相结合，便可以实现基本上无需鼠标点击就能很高效地在Word中插入数学公式。</p>

<h2 id="mathtype的中文输入">MathType的中文输入</h2>

<p>常会遇见这样的情况，在公式编辑器中输入好中文后，再退出回到Word发现中文根本无法显示。解决方法如下：</p>

<p>在MathType中选择”样式”、”定义”，出现”定义风格”对话框，选择其中的”高级”单选按钮，出现样式列表，在”全角文字”的下拉列表框中，将”宋体-方正超大字符集”改为”宋体”。这时虽然列表框中还是显示”宋体-方正超大字符集”，但是此时再编辑公式时已经可以显示所输入的汉字了。例如，不会将”中国”只显示”中”字。每当不能显示所有汉字时你都如法炮制，就可以解决问题了。</p>

<h1 id="结语">结语</h1>

<p>以上介绍了Word排版中的一些小技巧，其中主要是通过VBA宏来实现的。对于排版中的常见问题如”含有公式的正文段落采用固定行距”、”分节实现不同的页眉与页脚”、”目录样式的修改”等则不再赘述。在Word排版方面，侯捷先生的《Word排版艺术》是相当好的书，大家可以参考。</p>

<p>下面附录中的代码则为本文正文中提到的VBA宏，大家需将其导入到Word文档中才能使用。而与Excel chart处理相关的宏则需要导入到Excel文件中。由于这些Word宏只是给自己排版使用的，所以最好将它们导入到自己的<code class="language-plaintext highlighter-rouge">Normal.dot</code>主模板文件中，而不要直接嵌入到你正在撰写的文档中。否则，当别人打开你的文档看到”该文档存在宏”的提示时，他就会怀疑你的文档有宏病毒而直接将其关掉。</p>

<h1 id="附录1-word-vba-macros">附录1 Word VBA macros</h1>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Function</span> <span class="nf">GetCiteKey</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">startChar</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> <span class="n">_</span>
                    <span class="k">ByVal</span> <span class="n">endChar</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> <span class="n">_</span>
                    <span class="k">ByRef</span> <span class="n">keys</span> <span class="ow">As</span> <span class="n">Collection</span><span class="p">,</span> <span class="n">_</span>
                    <span class="k">ByRef</span> <span class="n">keyStart</span> <span class="ow">As</span> <span class="n">Collection</span><span class="p">,</span> <span class="n">_</span>
                    <span class="k">ByRef</span> <span class="n">keyEnd</span> <span class="ow">As</span> <span class="n">Collection</span><span class="p">)</span> <span class="ow">As</span> <span class="kt">Boolean</span>
                    
    <span class="k">Dim</span> <span class="nv">isfound</span> <span class="ow">As</span> <span class="kt">Boolean</span>
    <span class="n">isfound</span> <span class="o">=</span> <span class="k">True</span>
    
    <span class="n">Selection</span><span class="p">.</span><span class="n">Find</span><span class="p">.</span><span class="n">ClearFormatting</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Find</span>
        <span class="p">.</span><span class="n">Text</span> <span class="o">=</span> <span class="n">startChar</span>
        <span class="p">.</span><span class="n">Forward</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">Wrap</span> <span class="o">=</span> <span class="n">wdFindStop</span>
        <span class="p">.</span><span class="n">Format</span> <span class="o">=</span> <span class="k">False</span>
    <span class="k">End</span> <span class="k">With</span>
    <span class="k">Do</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">Find</span><span class="p">.</span><span class="n">Execute</span>
    <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">Selection</span><span class="p">.</span><span class="n">Text</span><span class="p">,</span> <span class="n">startChar</span><span class="p">)</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">Then</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">MoveStart</span> <span class="n">Unit</span><span class="p">:</span><span class="o">=</span><span class="n">wdCharacter</span><span class="p">,</span> <span class="n">Count</span><span class="p">:</span><span class="o">=</span><span class="mi">1</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">MoveEndUntil</span> <span class="n">cset</span><span class="p">:</span><span class="o">=</span><span class="n">endChar</span><span class="p">,</span> <span class="n">Count</span><span class="p">:</span><span class="o">=</span><span class="n">wdForward</span>
        <span class="k">If</span> <span class="n">ExistInCollection</span><span class="p">(</span><span class="n">Selection</span><span class="p">.</span><span class="n">Text</span><span class="p">,</span> <span class="n">keys</span><span class="p">)</span> <span class="k">Then</span>
        <span class="k">Else</span>
            <span class="n">keys</span><span class="p">.</span><span class="n">Add</span> <span class="p">(</span><span class="n">Selection</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
        <span class="k">End</span> <span class="k">If</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">MoveRight</span> <span class="n">Unit</span><span class="p">:</span><span class="o">=</span><span class="n">wdCharacter</span><span class="p">,</span> <span class="n">Count</span><span class="p">:</span><span class="o">=</span><span class="mi">1</span>
    <span class="k">Else</span>
        <span class="n">isfound</span> <span class="o">=</span> <span class="k">False</span>
    <span class="k">End</span> <span class="k">If</span>
    <span class="k">Loop</span> <span class="k">While</span> <span class="n">isfound</span>
    
    <span class="k">If</span> <span class="n">keys</span><span class="p">.</span><span class="n">Count</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">Then</span>
        <span class="n">GetCiteKey</span> <span class="o">=</span> <span class="k">True</span>
    <span class="k">Else</span>
        <span class="n">GetCiteKey</span> <span class="o">=</span> <span class="k">False</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Sub</span> <span class="nf">ListCitationNumbers</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">is_update</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="n">is_update</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Update the fields?"</span><span class="p">,</span> <span class="s">"Update the fields?"</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
    <span class="k">If</span> <span class="p">(</span><span class="n">is_update</span> <span class="o">=</span> <span class="s">"1"</span><span class="p">)</span> <span class="k">Then</span>
        <span class="k">Call</span> <span class="n">UpdateAllFields</span>
    <span class="k">End</span> <span class="k">If</span>
    
    <span class="c1">' list citations numbers without duplication</span>

    <span class="k">Dim</span> <span class="nv">keys</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">Collection</span>
    <span class="k">Dim</span> <span class="nv">keyStart</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">Collection</span>
    <span class="k">Dim</span> <span class="nv">keyEnd</span> <span class="ow">As</span> <span class="k">New</span> <span class="n">Collection</span>
    <span class="k">Dim</span> <span class="nv">isfound</span> <span class="ow">As</span> <span class="kt">Boolean</span>
    <span class="k">Dim</span> <span class="nv">citeDict</span> <span class="ow">As</span> <span class="kt">Variant</span>
    
    <span class="n">isfound</span> <span class="o">=</span> <span class="n">GetCiteKey</span><span class="p">(</span><span class="s">"["</span><span class="p">,</span> <span class="s">"]"</span><span class="p">,</span> <span class="n">keys</span><span class="p">,</span> <span class="n">keyStart</span><span class="p">,</span> <span class="n">keyEnd</span><span class="p">)</span>
    
    <span class="k">If</span> <span class="n">isfound</span> <span class="k">Then</span>
        <span class="n">MsgBox</span> <span class="p">(</span><span class="n">CombineKeys</span><span class="p">(</span><span class="n">keys</span><span class="p">,</span> <span class="s">", "</span><span class="p">))</span>
    <span class="k">Else</span>
        <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"No citations!"</span><span class="p">)</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Function</span> <span class="nf">CombineKeys</span><span class="p">(</span><span class="k">ByRef</span> <span class="n">keys</span> <span class="ow">As</span> <span class="n">Collection</span><span class="p">,</span> <span class="n">_</span>
                     <span class="k">ByVal</span> <span class="n">delimiter</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">)</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="k">Dim</span> <span class="nv">str</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">keys</span><span class="p">.</span><span class="n">Count</span>
        <span class="k">If</span> <span class="n">i</span> <span class="o">=</span> <span class="n">keys</span><span class="p">.</span><span class="n">Count</span> <span class="k">Then</span>
            <span class="n">str</span> <span class="o">=</span> <span class="n">str</span> <span class="o">&amp;</span> <span class="n">keys</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="k">Else</span>
            <span class="n">str</span> <span class="o">=</span> <span class="n">str</span> <span class="o">&amp;</span> <span class="n">keys</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">&amp;</span> <span class="n">delimiter</span>
        <span class="k">End</span> <span class="k">If</span>
    <span class="k">Next</span> <span class="n">i</span>
    <span class="n">CombineKeys</span> <span class="o">=</span> <span class="n">str</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Function</span> <span class="nf">ExistInCollection</span><span class="p">(</span><span class="n">item</span> <span class="ow">As</span> <span class="kt">String</span><span class="p">,</span> <span class="n">_</span>
                           <span class="n">list</span> <span class="ow">As</span> <span class="n">Collection</span><span class="p">)</span> <span class="ow">As</span> <span class="kt">Boolean</span>
    <span class="k">Dim</span> <span class="nv">flag</span> <span class="ow">As</span> <span class="kt">Boolean</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    
    <span class="n">flag</span> <span class="o">=</span> <span class="k">False</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">list</span><span class="p">.</span><span class="n">Count</span>
        <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">item</span><span class="p">,</span> <span class="n">list</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">))</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">Then</span>
            <span class="n">flag</span> <span class="o">=</span> <span class="k">True</span>
            <span class="k">Exit</span> <span class="k">For</span>
        <span class="k">End</span> <span class="k">If</span>
    <span class="k">Next</span> <span class="n">i</span>
    
    <span class="n">ExistInCollection</span> <span class="o">=</span> <span class="n">flag</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Sub</span> <span class="nf">ShowFields</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Count</span>
        <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">ShowCodes</span> <span class="o">=</span> <span class="k">True</span>
    <span class="k">Next</span> <span class="n">i</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">HideFields</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Count</span>
        <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">ShowCodes</span> <span class="o">=</span> <span class="k">False</span>
    <span class="k">Next</span> <span class="n">i</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">UpdateAllFields</span><span class="p">()</span>
    <span class="c1">'更新全文档的域</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Count</span>
        <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Update</span>
    <span class="k">Next</span> <span class="n">i</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">UpdateSecFields</span><span class="p">()</span>
    <span class="c1">'更新当前节的域</span>
    <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
    <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Sections</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Range</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Count</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">Sections</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Range</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">item</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Update</span>
    <span class="k">Next</span> <span class="n">i</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">label_object</span><span class="p">()</span>
    <span class="c1">' automatically insert numbers for equation, figure and table, or anything else</span>
    <span class="k">Dim</span> <span class="nv">labelType</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="c1">' three label types are supported: equation, figure, and table</span>
    <span class="n">labelType</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Label type: "</span><span class="p">,</span> <span class="n">_</span>
                         <span class="s">"eqn? fig? tab?"</span><span class="p">)</span>
    <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">labelType</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span> <span class="k">Then</span>
        <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">labelType</span><span class="p">,</span> <span class="s">"eqn"</span><span class="p">)</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">Then</span>
            <span class="n">Selection</span><span class="p">.</span><span class="n">TypeText</span> <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">"("</span>
        <span class="k">End</span> <span class="k">If</span>
      
        <span class="n">Selection</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Add</span> <span class="n">Range</span><span class="p">:</span><span class="o">=</span><span class="n">Selection</span><span class="p">.</span><span class="n">Range</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">Type</span><span class="p">:</span><span class="o">=</span><span class="n">wdFieldEmpty</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">"styleref 1 \s \*mergeformat"</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">preserveformatting</span><span class="p">:</span><span class="o">=</span><span class="k">False</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">TypeText</span> <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">"."</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Add</span> <span class="n">Range</span><span class="p">:</span><span class="o">=</span><span class="n">Selection</span><span class="p">.</span><span class="n">Range</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">Type</span><span class="p">:</span><span class="o">=</span><span class="n">wdFieldEmpty</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">"seq "</span> <span class="o">+</span> <span class="n">labelType</span> <span class="o">+</span> <span class="s">" \* arabic \s 1 \*mergeformat"</span><span class="p">,</span> <span class="n">_</span>
                 <span class="n">preserveformatting</span><span class="p">:</span><span class="o">=</span><span class="k">False</span>
        <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">labelType</span><span class="p">,</span> <span class="s">"eqn"</span><span class="p">)</span> <span class="o">=</span> <span class="mi">0</span> <span class="k">Then</span>
            <span class="n">Selection</span><span class="p">.</span><span class="n">TypeText</span> <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">")"</span>
        <span class="k">End</span> <span class="k">If</span>
        <span class="n">Selection</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Update</span>
    <span class="k">Else</span>
        <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Nothing is done!"</span><span class="p">)</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">add_bookmark</span><span class="p">()</span>
    <span class="c1">' add bookmark to selected range</span>
    <span class="k">Dim</span> <span class="nv">bookmark</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="n">bookmark</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Bookmark: "</span><span class="p">,</span> <span class="s">"Enter a bookmark name"</span><span class="p">)</span>
    <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">bookmark</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span> <span class="k">Then</span>
        <span class="k">If</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Bookmarks</span><span class="p">.</span><span class="n">Exists</span><span class="p">(</span><span class="n">bookmark</span><span class="p">)</span> <span class="k">Then</span>
            <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"Bookmark you've entered already exists!"</span><span class="p">)</span>
        <span class="k">Else</span>
            <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Bookmarks</span><span class="p">.</span><span class="n">Add</span> <span class="n">bookmark</span><span class="p">,</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Range</span>
        <span class="k">End</span> <span class="k">If</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>


<span class="k">Sub</span> <span class="nf">ref_object</span><span class="p">()</span>
    <span class="c1">' insert a reference to an existing bookmark</span>
    <span class="k">Dim</span> <span class="nv">bookmark</span> <span class="ow">As</span> <span class="kt">String</span>
    <span class="n">bookmark</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Bookmark: "</span><span class="p">,</span> <span class="s">"Enter a bookmark to be referenced"</span><span class="p">)</span>
    <span class="k">If</span> <span class="n">StrComp</span><span class="p">(</span><span class="n">bookmark</span><span class="p">,</span> <span class="s">""</span><span class="p">)</span> <span class="o">&lt;&gt;</span> <span class="mi">0</span> <span class="k">Then</span>
        <span class="k">If</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Bookmarks</span><span class="p">.</span><span class="n">Exists</span><span class="p">(</span><span class="n">bookmark</span><span class="p">)</span> <span class="k">Then</span>
            <span class="n">Selection</span><span class="p">.</span><span class="n">Fields</span><span class="p">.</span><span class="n">Add</span> <span class="n">Range</span><span class="p">:</span><span class="o">=</span><span class="n">Selection</span><span class="p">.</span><span class="n">Range</span><span class="p">,</span> <span class="n">_</span>
                     <span class="n">Type</span><span class="p">:</span><span class="o">=</span><span class="n">wdFieldEmpty</span><span class="p">,</span> <span class="n">_</span>
                     <span class="n">Text</span><span class="p">:</span><span class="o">=</span><span class="s">"ref "</span> <span class="o">+</span> <span class="n">bookmark</span> <span class="o">+</span> <span class="s">" \h"</span><span class="p">,</span> <span class="n">_</span>
                     <span class="n">preserveformatting</span><span class="p">:</span><span class="o">=</span><span class="k">False</span>
        <span class="k">Else</span>
            <span class="n">MsgBox</span> <span class="p">(</span><span class="s">"The bookmark you've entered does not exist!"</span><span class="p">)</span>
        <span class="k">End</span> <span class="k">If</span>
    <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetDotLeader</span><span class="p">()</span>
    <span class="k">For</span> <span class="k">Each</span> <span class="n">toc</span> <span class="ow">In</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">TablesOfContents</span>
        <span class="n">toc</span><span class="p">.</span><span class="n">TabLeader</span> <span class="o">=</span> <span class="n">wdTabLeaderDots</span>
    <span class="k">Next</span> <span class="n">toc</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">ListAllStyles</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">aStyle</span> <span class="ow">As</span> <span class="n">Style</span>
    <span class="k">For</span> <span class="k">Each</span> <span class="n">aStyle</span> <span class="ow">In</span> <span class="n">ActiveDocument</span><span class="p">.</span><span class="n">Styles</span>
        <span class="k">If</span> <span class="p">(</span><span class="n">aStyle</span><span class="p">.</span><span class="n">InUse</span> <span class="o">=</span> <span class="k">True</span><span class="p">)</span> <span class="k">Then</span>
            <span class="n">MsgBox</span> <span class="n">aStyle</span><span class="p">.</span><span class="n">NameLocal</span>
        <span class="k">End</span> <span class="k">If</span>
    <span class="k">Next</span> <span class="n">aStyle</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetRefStyle</span><span class="p">()</span>
    <span class="c1">'设置参考文献条目的格式</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">ParagraphFormat</span>
        <span class="p">.</span><span class="n">LeftIndent</span> <span class="o">=</span> <span class="n">MillimetersToPoints</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
        <span class="p">.</span><span class="n">RightIndent</span> <span class="o">=</span> <span class="n">MillimetersToPoints</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
        <span class="p">.</span><span class="n">SpaceBefore</span> <span class="o">=</span> <span class="mi">3</span>
        <span class="p">.</span><span class="n">SpaceBeforeAuto</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">SpaceAfter</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">SpaceAfterAuto</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">LineSpacingRule</span> <span class="o">=</span> <span class="n">wdLineSpaceExactly</span>
        <span class="p">.</span><span class="n">LineSpacing</span> <span class="o">=</span> <span class="mi">16</span>
        <span class="p">.</span><span class="n">Alignment</span> <span class="o">=</span> <span class="n">wdAlignParagraphJustify</span>
        <span class="p">.</span><span class="n">WidowControl</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">KeepWithNext</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">KeepTogether</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">PageBreakBefore</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">NoLineNumber</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Hyphenation</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">FirstLineIndent</span> <span class="o">=</span> <span class="mi">0</span>
        
        <span class="p">.</span><span class="n">OutlineLevel</span> <span class="o">=</span> <span class="n">wdOutlineLevelBodyText</span>
        <span class="p">.</span><span class="n">CharacterUnitLeftIndent</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">CharacterUnitRightIndent</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">CharacterUnitFirstLineIndent</span> <span class="o">=</span> <span class="o">-</span><span class="mi">2</span>
        <span class="p">.</span><span class="n">LineUnitBefore</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">LineUnitAfter</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">AutoAdjustRightIndent</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">DisableLineHeightGrid</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">FarEastLineBreakControl</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">WordWrap</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">HangingPunctuation</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">HalfWidthPunctuationOnTopOfLine</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">AddSpaceBetweenFarEastAndAlpha</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">AddSpaceBetweenFarEastAndDigit</span> <span class="o">=</span> <span class="k">True</span>
        <span class="p">.</span><span class="n">BaseLineAlignment</span> <span class="o">=</span> <span class="n">wdBaselineAlignAuto</span>
    <span class="k">End</span> <span class="k">With</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Font</span>
        <span class="p">.</span><span class="n">NameFarEast</span> <span class="o">=</span> <span class="s">"宋体"</span>
        <span class="p">.</span><span class="n">NameAscii</span> <span class="o">=</span> <span class="s">"Times New Roman"</span>
        <span class="p">.</span><span class="n">NameOther</span> <span class="o">=</span> <span class="s">"Times New Roman"</span>
        <span class="p">.</span><span class="n">Name</span> <span class="o">=</span> <span class="s">"Times New Roman"</span>
        <span class="p">.</span><span class="n">Size</span> <span class="o">=</span> <span class="mf">10.5</span>
        <span class="p">.</span><span class="n">Bold</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Italic</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Underline</span> <span class="o">=</span> <span class="n">wdUnderlineNone</span>
        <span class="p">.</span><span class="n">UnderlineColor</span> <span class="o">=</span> <span class="n">wdColorAutomatic</span>
        <span class="p">.</span><span class="n">StrikeThrough</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">DoubleStrikeThrough</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Outline</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Emboss</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Shadow</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Hidden</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">SmallCaps</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">AllCaps</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Color</span> <span class="o">=</span> <span class="n">wdColorAutomatic</span>
        <span class="p">.</span><span class="n">Engrave</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Superscript</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Subscript</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">Spacing</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">Scaling</span> <span class="o">=</span> <span class="mi">100</span>
        <span class="p">.</span><span class="n">Position</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="p">.</span><span class="n">Kerning</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="p">.</span><span class="n">Animation</span> <span class="o">=</span> <span class="n">wdAnimationNone</span>
        <span class="p">.</span><span class="n">DisableCharacterSpaceGrid</span> <span class="o">=</span> <span class="k">False</span>
        <span class="p">.</span><span class="n">EmphasisMark</span> <span class="o">=</span> <span class="n">wdEmphasisMarkNone</span>
    <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Function</span> <span class="nf">TextWidth</span><span class="p">()</span>
    <span class="c1">'获取版心的宽度</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Sections</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">TextWidth</span> <span class="o">=</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">PageWidth</span> <span class="o">-</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">LeftMargin</span> <span class="o">-</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">RightMargin</span>
    <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Function</span> <span class="nf">TextHeight</span><span class="p">()</span>
    <span class="c1">'获取版心的高度</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Sections</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">TextHeight</span> <span class="o">=</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">PageHeight</span> <span class="o">-</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">TopMargin</span> <span class="o">-</span> <span class="p">.</span><span class="n">PageSetup</span><span class="p">.</span><span class="n">BottomMargin</span>
    <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Function</span>

<span class="k">Sub</span> <span class="nf">SetFig</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">ratio</span> <span class="ow">As</span> <span class="kt">Double</span>
    <span class="c1">' 设置图片的属性：单张图片的宽度为版心宽度的 0.8，高度则自动按比例调整</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">TextWidth</span> <span class="o">*</span> <span class="mf">0.8</span> <span class="o">/</span> <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Width</span>
    
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">LockAspectRatio</span> <span class="o">=</span> <span class="n">msoTrue</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Width</span> <span class="o">=</span> <span class="n">TextWidth</span> <span class="o">*</span> <span class="mf">0.8</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Height</span> <span class="o">=</span> <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Height</span> <span class="o">*</span> <span class="n">ratio</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">PictureFormat</span><span class="p">.</span><span class="n">Brightness</span> <span class="o">=</span> <span class="mf">0.5</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">PictureFormat</span><span class="p">.</span><span class="n">Contrast</span> <span class="o">=</span> <span class="mf">0.5</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetTwoFig</span><span class="p">()</span>
    <span class="k">Dim</span> <span class="nv">ratio</span> <span class="ow">As</span> <span class="kt">Double</span>
    <span class="c1">' 设置图片的属性：单张图片的宽度为版心宽度的 0.8，高度则自动按比例调整</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="n">TextWidth</span> <span class="o">*</span> <span class="mf">0.49</span> <span class="o">/</span> <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Width</span>
    
    <span class="c1">'设置两个并排图片的宽度</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">LockAspectRatio</span> <span class="o">=</span> <span class="n">msoTrue</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Width</span> <span class="o">=</span> <span class="n">TextWidth</span> <span class="o">*</span> <span class="mf">0.49</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Height</span> <span class="o">=</span> <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">Height</span> <span class="o">*</span> <span class="n">ratio</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">PictureFormat</span><span class="p">.</span><span class="n">Brightness</span> <span class="o">=</span> <span class="mf">0.5</span>
    <span class="n">Selection</span><span class="p">.</span><span class="n">InlineShapes</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="n">PictureFormat</span><span class="p">.</span><span class="n">Contrast</span> <span class="o">=</span> <span class="mf">0.5</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">Set3LineTable</span><span class="p">()</span>
    <span class="k">With</span> <span class="n">Selection</span><span class="p">.</span><span class="n">Tables</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="c1">'''''''''''''''''''</span>
        <span class="c1">'设置外框，除去内框</span>
        <span class="c1">'''''''''''''''''''</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderHorizontal</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleNone</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderVertical</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleNone</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderLeft</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleNone</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderRight</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleNone</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderBottom</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleSingle</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderTop</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleSingle</span>
        <span class="c1">' 注意：这里150pt即为1.5磅</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderBottom</span><span class="p">).</span><span class="n">LineWidth</span> <span class="o">=</span> <span class="n">wdLineWidth150pt</span>
        <span class="p">.</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderTop</span><span class="p">).</span><span class="n">LineWidth</span> <span class="o">=</span> <span class="n">wdLineWidth150pt</span>
        
        <span class="c1">'设置第一行单元线：宽度1磅</span>
        <span class="p">.</span><span class="n">Rows</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderTop</span><span class="p">).</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">wdLineStyleSingle</span>
        <span class="p">.</span><span class="n">Rows</span><span class="p">(</span><span class="mi">2</span><span class="p">).</span><span class="n">Borders</span><span class="p">(</span><span class="n">wdBorderTop</span><span class="p">).</span><span class="n">LineWidth</span> <span class="o">=</span> <span class="n">wdLineWidth100pt</span>
    <span class="k">End</span> <span class="k">With</span>
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>

<h1 id="附录2--excel-vba-macros">附录2  Excel VBA macros</h1>

<div class="language-vb highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">Sub</span> <span class="nf">SetTickNumberFormat</span><span class="p">()</span>
   <span class="k">Dim</span> <span class="nv">x_format</span> <span class="ow">As</span> <span class="kt">String</span>
   <span class="k">Dim</span> <span class="nv">y_format</span> <span class="ow">As</span> <span class="kt">String</span>
  
   <span class="n">x_format</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"X format"</span><span class="p">,</span> <span class="s">"X format"</span><span class="p">,</span> <span class="s">"General"</span><span class="p">)</span>
   <span class="n">y_format</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Y format"</span><span class="p">,</span> <span class="s">"Y format"</span><span class="p">,</span> <span class="s">"General"</span><span class="p">)</span>
  
   <span class="k">If</span> <span class="p">(</span><span class="n">x_format</span> <span class="o">&lt;&gt;</span> <span class="s">""</span><span class="p">)</span> <span class="k">Then</span>
       <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">).</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">NumberFormat</span> <span class="o">=</span> <span class="n">x_format</span>
   <span class="k">End</span> <span class="k">If</span>
  
   <span class="k">If</span> <span class="p">(</span><span class="n">y_format</span> <span class="o">&lt;&gt;</span> <span class="s">""</span><span class="p">)</span> <span class="k">Then</span>
       <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">).</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">NumberFormat</span> <span class="o">=</span> <span class="n">y_format</span>
   <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetGrid</span><span class="p">()</span>
   <span class="k">Dim</span> <span class="nv">is_major_on</span> <span class="ow">As</span> <span class="kt">String</span>
   <span class="k">Dim</span> <span class="nv">is_minor_on</span> <span class="ow">As</span> <span class="kt">String</span>
  
   <span class="n">is_major_on</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Major grid On? Off?"</span><span class="p">,</span> <span class="s">"Major grid On? Off?"</span><span class="p">,</span> <span class="s">"0"</span><span class="p">)</span>
   <span class="n">is_minor_on</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Minor grid On? Off?"</span><span class="p">,</span> <span class="s">"Minor grid On? Off?"</span><span class="p">,</span> <span class="s">"0"</span><span class="p">)</span>
  
   <span class="k">If</span> <span class="p">(</span><span class="n">is_major_on</span> <span class="o">&lt;&gt;</span> <span class="s">""</span><span class="p">)</span> <span class="k">Then</span>
       <span class="k">If</span> <span class="p">(</span><span class="n">is_major_on</span> <span class="o">=</span> <span class="s">"1"</span><span class="p">)</span> <span class="k">Then</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">).</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">True</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">).</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">True</span>
       <span class="k">Else</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">).</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">False</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">).</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="k">End</span> <span class="k">If</span>
   <span class="k">End</span> <span class="k">If</span>
  
   <span class="k">If</span> <span class="p">(</span><span class="n">is_minor_on</span> <span class="o">&lt;&gt;</span> <span class="s">""</span><span class="p">)</span> <span class="k">Then</span>
       <span class="k">If</span> <span class="p">(</span><span class="n">is_minor_on</span> <span class="o">=</span> <span class="s">"1"</span><span class="p">)</span> <span class="k">Then</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">).</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">True</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">).</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">True</span>
       <span class="k">Else</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">).</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">False</span>
           <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">).</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="k">End</span> <span class="k">If</span>
   <span class="k">End</span> <span class="k">If</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetChartStyle</span><span class="p">()</span>
   <span class="c1">' config the total chart area</span>
   <span class="c1">' ChartArea的大小不能用程序设置，只能手动调整</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">ChartArea</span><span class="p">.</span><span class="n">AutoScaleFont</span> <span class="o">=</span> <span class="k">False</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">ChartArea</span><span class="p">.</span><span class="n">Border</span><span class="p">.</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">xlLineStyleNone</span>
  
   <span class="c1">' config the plot area</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">PlotArea</span><span class="p">.</span><span class="n">Border</span><span class="p">.</span><span class="n">Color</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">PlotArea</span><span class="p">.</span><span class="n">Border</span><span class="p">.</span><span class="n">Weight</span> <span class="o">=</span> <span class="n">xlThin</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">PlotArea</span><span class="p">.</span><span class="n">Interior</span><span class="p">.</span><span class="n">Color</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">PlotArea</span><span class="p">.</span><span class="n">Width</span> <span class="o">=</span> <span class="n">ActiveChart</span><span class="p">.</span><span class="n">ChartArea</span><span class="p">.</span><span class="n">Width</span> <span class="o">*</span> <span class="mf">0.9</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">PlotArea</span><span class="p">.</span><span class="n">Height</span> <span class="o">=</span> <span class="n">ActiveChart</span><span class="p">.</span><span class="n">ChartArea</span><span class="p">.</span><span class="n">Height</span> <span class="o">*</span> <span class="mf">0.9</span>
  
   <span class="c1">' config the axes</span>
   <span class="c1">' 注意：下面的标签格式化编码与单元格式化中自定义编码中的格式化字符串相同</span>
   <span class="k">With</span> <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlCategory</span><span class="p">)</span>
       <span class="c1">'remove the major grid lines</span>
       <span class="p">.</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">AutoScaleFont</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">Font</span><span class="p">.</span><span class="n">Size</span> <span class="o">=</span> <span class="mi">10</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">NumberFormat</span> <span class="o">=</span> <span class="s">"General"</span>
       <span class="p">.</span><span class="n">TickLabelPosition</span> <span class="o">=</span> <span class="n">xlTickLabelPositionNextToAxis</span>
       <span class="p">.</span><span class="n">Crosses</span> <span class="o">=</span> <span class="n">xlMinimum</span> <span class="c1">'默认是在最小值处相交</span>
    <span class="k">End</span> <span class="k">With</span>
  
   <span class="k">With</span> <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Axes</span><span class="p">(</span><span class="n">xlValue</span><span class="p">)</span>
       <span class="p">.</span><span class="n">HasMajorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">HasMinorGridlines</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">AutoScaleFont</span> <span class="o">=</span> <span class="k">False</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">NumberFormat</span> <span class="o">=</span> <span class="s">"General"</span>
       <span class="p">.</span><span class="n">TickLabels</span><span class="p">.</span><span class="n">Font</span><span class="p">.</span><span class="n">Size</span> <span class="o">=</span> <span class="mi">10</span>
       <span class="p">.</span><span class="n">Crosses</span> <span class="o">=</span> <span class="n">xlMinimum</span> <span class="c1">'默认是在最小值处相交</span>
    <span class="k">End</span> <span class="k">With</span>
  
   <span class="c1">' legend config</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Legend</span><span class="p">.</span><span class="n">AutoScaleFont</span> <span class="o">=</span> <span class="k">False</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Legend</span><span class="p">.</span><span class="n">Position</span> <span class="o">=</span> <span class="n">xlLegendPositionBottom</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Legend</span><span class="p">.</span><span class="n">Border</span><span class="p">.</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">xlLineStyleNone</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Legend</span><span class="p">.</span><span class="n">Font</span><span class="p">.</span><span class="n">Name</span> <span class="o">=</span> <span class="s">"宋体"</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">Legend</span><span class="p">.</span><span class="n">Font</span><span class="p">.</span><span class="n">Size</span> <span class="o">=</span> <span class="mi">12</span>
  
   <span class="c1">' config the line series</span>
   <span class="k">Dim</span> <span class="nv">i</span> <span class="ow">As</span> <span class="kt">Integer</span>
   <span class="k">Dim</span> <span class="nv">pltp</span> <span class="ow">As</span> <span class="kt">String</span>
   <span class="n">pltp</span> <span class="o">=</span> <span class="n">InputBox</span><span class="p">(</span><span class="s">"Line? Marker? Or both?"</span><span class="p">,</span> <span class="s">"Line? Marker? Or both?"</span><span class="p">,</span> <span class="s">"1"</span><span class="p">)</span>
   <span class="k">If</span> <span class="p">(</span><span class="n">pltp</span> <span class="o">&lt;&gt;</span> <span class="s">""</span><span class="p">)</span> <span class="k">Then</span>
       <span class="k">For</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span> <span class="k">To</span> <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">.</span><span class="n">Count</span>
           <span class="k">Select</span> <span class="k">Case</span> <span class="p">(</span><span class="n">pltp</span><span class="p">)</span>
               <span class="k">Case</span> <span class="s">"1"</span>
                   <span class="n">SetLineStyle</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span>    <span class="c1">'设置不同的线型：只有线没有marker</span>
                <span class="k">Case</span> <span class="s">"2"</span>
                   <span class="n">SetMarkerStyle</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span>  <span class="c1">'设置不同的marker: 只有marker 没有线</span>
                <span class="k">Case</span> <span class="s">"3"</span>
                   <span class="n">SetLineMarkerStyle</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span>  <span class="c1">'同时设置marker与线型</span>
            <span class="k">End</span> <span class="k">Select</span>
       <span class="k">Next</span> <span class="n">i</span>
   <span class="k">End</span> <span class="k">If</span>
  
   <span class="k">Call</span> <span class="n">SetGrid</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetLineStyle</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">i</span> <span class="ow">As</span> <span class="kt">Integer</span><span class="p">)</span>
   <span class="k">Dim</span> <span class="nv">ls_list</span> <span class="ow">As</span> <span class="kt">Variant</span>
   <span class="n">ls_list</span> <span class="o">=</span> <span class="n">Array</span><span class="p">(</span><span class="n">xlContinuous</span><span class="p">,</span> <span class="n">xlDash</span><span class="p">,</span> <span class="n">xlDashDot</span><span class="p">,</span> <span class="n">xlDot</span><span class="p">,</span> <span class="n">xlDashDotDot</span><span class="p">)</span>
  
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerStyle</span> <span class="o">=</span> <span class="n">xlMarkerStyleNone</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Border</span><span class="p">.</span><span class="n">Color</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Border</span><span class="p">.</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">ls_list</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetMarkerStyle</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">i</span> <span class="ow">As</span> <span class="kt">Integer</span><span class="p">)</span>
   <span class="c1">' 这里的marker是空心的</span>
   <span class="k">Dim</span> <span class="nv">mk_list</span> <span class="ow">As</span> <span class="kt">Variant</span>
   <span class="n">mk_list</span> <span class="o">=</span> <span class="n">Array</span><span class="p">(</span><span class="n">xlMarkerStyleSquare</span><span class="p">,</span> <span class="n">xlMarkerStyleDiamond</span><span class="p">,</span> <span class="n">xlMarkerStyleTriangle</span><span class="p">,</span> <span class="n">_</span>
                   <span class="n">xlMarkerStyleX</span><span class="p">,</span> <span class="n">xlMarkerStyleCircle</span><span class="p">)</span>
                  
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Border</span><span class="p">.</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">xlLineStyleNone</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerStyle</span> <span class="o">=</span> <span class="n">mk_list</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerSize</span> <span class="o">=</span> <span class="mi">5</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerBackgroundColor</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerForegroundColor</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>

<span class="k">Sub</span> <span class="nf">SetLineMarkerStyle</span><span class="p">(</span><span class="k">ByVal</span> <span class="n">i</span> <span class="ow">As</span> <span class="kt">Integer</span><span class="p">)</span>
   <span class="k">Dim</span> <span class="nv">ls_list</span> <span class="ow">As</span> <span class="kt">Variant</span>
   <span class="n">ls_list</span> <span class="o">=</span> <span class="n">Array</span><span class="p">(</span><span class="n">xlContinuous</span><span class="p">,</span> <span class="n">xlDash</span><span class="p">,</span> <span class="n">xlDashDot</span><span class="p">,</span> <span class="n">xlDot</span><span class="p">,</span> <span class="n">xlDashDotDot</span><span class="p">)</span>
   <span class="c1">' 这里的marker是空心的</span>
   <span class="k">Dim</span> <span class="nv">mk_list</span> <span class="ow">As</span> <span class="kt">Variant</span>
   <span class="n">mk_list</span> <span class="o">=</span> <span class="n">Array</span><span class="p">(</span><span class="n">xlMarkerStyleSquare</span><span class="p">,</span> <span class="n">xlMarkerStyleDiamond</span><span class="p">,</span> <span class="n">xlMarkerStyleTriangle</span><span class="p">,</span> <span class="n">_</span>
                   <span class="n">xlMarkerStyleX</span><span class="p">,</span> <span class="n">xlMarkerStyleCircle</span><span class="p">)</span>
                  
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Border</span><span class="p">.</span><span class="n">Color</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">Border</span><span class="p">.</span><span class="n">LineStyle</span> <span class="o">=</span> <span class="n">ls_list</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerStyle</span> <span class="o">=</span> <span class="n">mk_list</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerSize</span> <span class="o">=</span> <span class="mi">5</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerBackgroundColor</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">,</span> <span class="mi">255</span><span class="p">)</span>
   <span class="n">ActiveChart</span><span class="p">.</span><span class="n">SeriesCollection</span><span class="p">(</span><span class="n">i</span><span class="p">).</span><span class="n">MarkerForegroundColor</span> <span class="o">=</span> <span class="n">RGB</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="k">End</span> <span class="k">Sub</span>
</code></pre></div></div>]]></content><author><name>Jihuan Tian</name></author><category term="computer" /><category term="MS-Office" /><category term="排版" /><summary type="html"><![CDATA[Table of contents]]></summary></entry></feed>