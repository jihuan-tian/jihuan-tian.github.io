---
layout: post
title: 深入浅出才算真明白
date: 2018-11-03
categories: [thoughts]
tags: [管理提升,清华,反问题]
---

这几天在给部门同事（也是大我一轮的学长）提供技术支持。本以为根据样例代码做了一定修改后交给同事使用就万事大吉了。但他却秉持其一贯的一丝不苟的风格，对算法流程中的每一个环节都要详细地盘问一番——只有他彻底明白了基本思想、大致流程，才肯接收和实测。这样一来，原本自以为已经理解了算法的原理，当面对同事“寻根究底”般的发问与质疑时，思路就不那么清晰，口齿也不再凌厉了——说不出简明、确凿、令人信服的话，而是发表一堆晦涩、模糊、抽象的空话、大话。直到晚上下班后，自己仍在“空悲切”般地思考着这个技术问题。然而，到了前天下午再和同事讨论的时候，不知怎么回事——也许是潜意识在晚上一直暗暗工作吧——自己似乎“顿悟”了一般，能够用直白的语言深入浅出地给同事重新讲解一遍。到这里，他才彻底打消了疑虑，心悦诚服地接受了这个方法。后续的测试工作也就得以顺利启动了。

由这件事可以看出：

1.  想要给他人提供扎实、可靠的技术支持，必须自己先要理解透彻。只有如此，才能用有理有据、深入浅出、形象生动且触及本质的表达方式让对方也心领神会。
2.  对于理论技术的应用，不能存在侥幸心理，以为拿一个样例过来照葫芦画瓢，就可以直接使用了。这么做往往会给后续工作埋下难以发觉的隐患和漏洞。需知，如果没有前期打下的坚实、可靠的基础，后期的调试与错误排查就会如同求解[反问题]({% post_url 2018-02-08-反问题的启示 %})一般，往往要花费大量的时间和精力，甚至还得依赖一点运气才能成功。而这其实已经是退而求其次的办法了。与其被隐患与错误搞得焦头烂额，不如尽可能在做事的过程中就对每一个环节加以验证，前后对照核实，不留死角地逐步推进。软件工程中先写测试代码或者单元测试也是类似的道理。
3.  面对百思不得其解的问题与困惑，需要锲而不舍地持续学习与思考。不光要调动自己的专注力，还要在发散模式下发挥潜意识的作用。这往往会带来意想不到的收获。
4.  从学长身上不仅可以看到其个人的优点与特质，也能够深切体会到并再次认同在[母校精神]({% post_url 2018-01-17-《无问西东》语录 %})教化与薰陶下而形成的做人与做事的风格。而这也正是需要自己一辈子踏踏实实践行与发扬的。

{{ "2018-11-03-深入浅出才算真明白" | backlink }}
